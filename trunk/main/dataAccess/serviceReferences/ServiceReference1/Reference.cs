//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStockService")]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/LoadAnalysisData", ReplyAction="http://tempuri.org/IStockService/LoadAnalysisDataResponse")]
        string LoadAnalysisData(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/LoadAnalysisData", ReplyAction="http://tempuri.org/IStockService/LoadAnalysisDataResponse")]
        System.IAsyncResult BeginLoadAnalysisData(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew, System.AsyncCallback callback, object asyncState);
        
        string EndLoadAnalysisData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data_ByKey", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_Data_ByKeyResponse")]
        data.baseDS.priceDataDataTable GetAnalysis_Data_ByKey(out int firstData, string dataKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetAnalysis_Data_ByKey", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_Data_ByKeyResponse")]
        System.IAsyncResult BeginGetAnalysis_Data_ByKey(string dataKey, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.priceDataDataTable EndGetAnalysis_Data_ByKey(out int firstData, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_DataResponse")]
        data.baseDS.priceDataDataTable GetAnalysis_Data(out int firstData, commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetAnalysis_Data", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_DataResponse")]
        System.IAsyncResult BeginGetAnalysis_Data(commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.priceDataDataTable EndGetAnalysis_Data(out int firstData, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_Profit", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_ProfitResponse")]
        decimal[][] Estimate_Matrix_Profit(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Estimate_Matrix_Profit", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_ProfitResponse")]
        System.IAsyncResult BeginEstimate_Matrix_Profit(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option, System.AsyncCallback callback, object asyncState);
        
        decimal[][] EndEstimate_Matrix_Profit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeight", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeightResponse")]
        double[][] Estimate_Matrix_LastBizWeight(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeight", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeightResponse")]
        System.IAsyncResult BeginEstimate_Matrix_LastBizWeight(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, System.AsyncCallback callback, object asyncState);
        
        double[][] EndEstimate_Matrix_LastBizWeight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Analysis", ReplyAction="http://tempuri.org/IStockService/AnalysisResponse")]
        commonClass.TradePointInfo[] Analysis(string dataKey, string strategyCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Analysis", ReplyAction="http://tempuri.org/IStockService/AnalysisResponse")]
        System.IAsyncResult BeginAnalysis(string dataKey, string strategyCode, System.AsyncCallback callback, object asyncState);
        
        commonClass.TradePointInfo[] EndAnalysis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/MakeTransaction", ReplyAction="http://tempuri.org/IStockService/MakeTransactionResponse")]
        data.baseDS.transactionsDataTable MakeTransaction(out string errorText, commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/MakeTransaction", ReplyAction="http://tempuri.org/IStockService/MakeTransactionResponse")]
        System.IAsyncResult BeginMakeTransaction(commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.transactionsDataTable EndMakeTransaction(out string errorText, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradePointWithEstimationDetail", ReplyAction="http://tempuri.org/IStockService/GetTradePointWithEstimationDetailResponse")]
        commonClass.TradePointInfo[] GetTradePointWithEstimationDetail(out data.tmpDS.tradeEstimateDataTable toTbl, commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetTradePointWithEstimationDetail", ReplyAction="http://tempuri.org/IStockService/GetTradePointWithEstimationDetailResponse")]
        System.IAsyncResult BeginGetTradePointWithEstimationDetail(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options, System.AsyncCallback callback, object asyncState);
        
        commonClass.TradePointInfo[] EndGetTradePointWithEstimationDetail(out data.tmpDS.tradeEstimateDataTable toTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXml", ReplyAction="http://tempuri.org/IStockService/GetXmlResponse")]
        string GetXml(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetXml", ReplyAction="http://tempuri.org/IStockService/GetXmlResponse")]
        System.IAsyncResult BeginGetXml(string filePath, System.AsyncCallback callback, object asyncState);
        
        string EndGetXml(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Load_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Load_Global_SettingsResponse")]
        void Load_Global_Settings();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Load_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Load_Global_SettingsResponse")]
        System.IAsyncResult BeginLoad_Global_Settings(System.AsyncCallback callback, object asyncState);
        
        void EndLoad_Global_Settings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Save_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Save_Global_SettingsResponse")]
        void Save_Global_Settings();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Save_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Save_Global_SettingsResponse")]
        System.IAsyncResult BeginSave_Global_Settings(System.AsyncCallback callback, object asyncState);
        
        void EndSave_Global_Settings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Test", ReplyAction="http://tempuri.org/IStockService/TestResponse")]
        System.Data.DataTable Test(string sql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Test", ReplyAction="http://tempuri.org/IStockService/TestResponse")]
        System.IAsyncResult BeginTest(string sql, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorByIndustryResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSectorByIndustry(string industryCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSectorByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorByIndustryResponse")]
        System.IAsyncResult BeginGetBizSubSectorByIndustry(string industryCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSectorByIndustry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySuperSectorResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSector(string superSectorCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSectorBySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySuperSectorResponse")]
        System.IAsyncResult BeginGetBizSubSectorBySuperSector(string superSectorCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSectorBySuperSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySectorResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSectorBySector(string sectorCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSectorBySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySectorResponse")]
        System.IAsyncResult BeginGetBizSubSectorBySector(string sectorCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSectorBySector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCountry", ReplyAction="http://tempuri.org/IStockService/GetCountryResponse")]
        data.baseDS.countryDataTable GetCountry();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetCountry", ReplyAction="http://tempuri.org/IStockService/GetCountryResponse")]
        System.IAsyncResult BeginGetCountry(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.countryDataTable EndGetCountry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCurrency", ReplyAction="http://tempuri.org/IStockService/GetCurrencyResponse")]
        data.baseDS.currencyDataTable GetCurrency();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetCurrency", ReplyAction="http://tempuri.org/IStockService/GetCurrencyResponse")]
        System.IAsyncResult BeginGetCurrency(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.currencyDataTable EndGetCurrency(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorCat", ReplyAction="http://tempuri.org/IStockService/GetInvestorCatResponse")]
        data.baseDS.investorCatDataTable GetInvestorCat();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetInvestorCat", ReplyAction="http://tempuri.org/IStockService/GetInvestorCatResponse")]
        System.IAsyncResult BeginGetInvestorCat(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.investorCatDataTable EndGetInvestorCat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCode", ReplyAction="http://tempuri.org/IStockService/GetSysCodeResponse")]
        data.baseDS.sysCodeDataTable GetSysCode(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetSysCode", ReplyAction="http://tempuri.org/IStockService/GetSysCodeResponse")]
        System.IAsyncResult BeginGetSysCode(string catCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.sysCodeDataTable EndGetSysCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCodeCat", ReplyAction="http://tempuri.org/IStockService/GetSysCodeCatResponse")]
        data.baseDS.sysCodeCatDataTable GetSysCodeCat();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetSysCodeCat", ReplyAction="http://tempuri.org/IStockService/GetSysCodeCatResponse")]
        System.IAsyncResult BeginGetSysCodeCat(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.sysCodeCatDataTable EndGetSysCodeCat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByCode", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByCodeResponse")]
        data.baseDS.investorDataTable GetInvestor_ByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetInvestor_ByCode", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByCodeResponse")]
        System.IAsyncResult BeginGetInvestor_ByCode(string code, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.investorDataTable EndGetInvestor_ByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_BySQL", ReplyAction="http://tempuri.org/IStockService/GetInvestor_BySQLResponse")]
        data.baseDS.investorDataTable GetInvestor_BySQL(string sql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetInvestor_BySQL", ReplyAction="http://tempuri.org/IStockService/GetInvestor_BySQLResponse")]
        System.IAsyncResult BeginGetInvestor_BySQL(string sql, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.investorDataTable EndGetInvestor_BySQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_InPortfolio", ReplyAction="http://tempuri.org/IStockService/GetStock_InPortfolioResponse")]
        data.tmpDS.stockCodeDataTable GetStock_InPortfolio(string[] portfolios);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStock_InPortfolio", ReplyAction="http://tempuri.org/IStockService/GetStock_InPortfolioResponse")]
        System.IAsyncResult BeginGetStock_InPortfolio(string[] portfolios, System.AsyncCallback callback, object asyncState);
        
        data.tmpDS.stockCodeDataTable EndGetStock_InPortfolio(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStock_ByBizSectorResponse")]
        data.tmpDS.stockCodeDataTable GetStock_ByBizSector(string[] bizSector);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStock_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStock_ByBizSectorResponse")]
        System.IAsyncResult BeginGetStock_ByBizSector(string[] bizSector, System.AsyncCallback callback, object asyncState);
        
        data.tmpDS.stockCodeDataTable EndGetStock_ByBizSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_ByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_ByIndustryResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustry(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSector_ByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_ByIndustryResponse")]
        System.IAsyncResult BeginGetBizSubSector_ByIndustry(string code, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSector_ByIndustry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySuperSectorResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSector(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSector_BySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySuperSectorResponse")]
        System.IAsyncResult BeginGetBizSubSector_BySuperSector(string code, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSector_BySuperSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySectorResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSector_BySector(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSector_BySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySectorResponse")]
        System.IAsyncResult BeginGetBizSubSector_BySector(string code, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSector_BySector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndTypeResponse")]
        data.baseDS.portfolioDataTable GetPortfolio_ByInvestorAndType(string investorCode, commonClass.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndTypeResponse")]
        System.IAsyncResult BeginGetPortfolio_ByInvestorAndType(string investorCode, commonClass.AppTypes.PortfolioTypes type, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDataTable EndGetPortfolio_ByInvestorAndType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByTypeResponse")]
        data.baseDS.portfolioDataTable GetPortfolio_ByType(commonClass.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolio_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByTypeResponse")]
        System.IAsyncResult BeginGetPortfolio_ByType(commonClass.AppTypes.PortfolioTypes type, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDataTable EndGetPortfolio_ByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByCodeResponse")]
        data.baseDS.portfolioDataTable GetPortfolio_ByCode(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolio_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByCodeResponse")]
        System.IAsyncResult BeginGetPortfolio_ByCode(string portfolioCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDataTable EndGetPortfolio_ByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorResponse")]
        data.baseDS.portfolioDataTable GetPortfolio_ByInvestor(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorResponse")]
        System.IAsyncResult BeginGetPortfolio_ByInvestor(string investorCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDataTable EndGetPortfolio_ByInvestor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTradeAlert_BySQLResponse")]
        data.baseDS.tradeAlertDataTable GetTradeAlert_BySQL(string alertSql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetTradeAlert_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTradeAlert_BySQLResponse")]
        System.IAsyncResult BeginGetTradeAlert_BySQL(string alertSql, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.tradeAlertDataTable EndGetTradeAlert_BySQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransaction_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTransaction_BySQLResponse")]
        data.baseDS.transactionsDataTable GetTransaction_BySQL(string transSql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetTransaction_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTransaction_BySQLResponse")]
        System.IAsyncResult BeginGetTransaction_BySQL(string transSql, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.transactionsDataTable EndGetTransaction_BySQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByTypeResponse")]
        data.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByType(commonClass.AppTypes.PortfolioTypes[] types);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByTypeResponse")]
        System.IAsyncResult BeginGetPortfolioDetail_ByType(commonClass.AppTypes.PortfolioTypes[] types, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDetailDataTable EndGetPortfolioDetail_ByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByCodeResponse")]
        data.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCode(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByCodeResponse")]
        System.IAsyncResult BeginGetPortfolioDetail_ByCode(string portfolioCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.portfolioDetailDataTable EndGetPortfolioDetail_ByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStock", ReplyAction="http://tempuri.org/IStockService/GetOwnedStockResponse")]
        data.baseDS.investorStockDataTable GetOwnedStock(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetOwnedStock", ReplyAction="http://tempuri.org/IStockService/GetOwnedStockResponse")]
        System.IAsyncResult BeginGetOwnedStock(string portfolioCode, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.investorStockDataTable EndGetOwnedStock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPrice", ReplyAction="http://tempuri.org/IStockService/GetLastPriceResponse")]
        data.baseDS.lastPriceDataDataTable GetLastPrice(commonClass.PriceDataType type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetLastPrice", ReplyAction="http://tempuri.org/IStockService/GetLastPriceResponse")]
        System.IAsyncResult BeginGetLastPrice(commonClass.PriceDataType type, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.lastPriceDataDataTable EndGetLastPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastAlertTime", ReplyAction="http://tempuri.org/IStockService/GetLastAlertTimeResponse")]
        System.DateTime GetLastAlertTime(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetLastAlertTime", ReplyAction="http://tempuri.org/IStockService/GetLastAlertTimeResponse")]
        System.IAsyncResult BeginGetLastAlertTime(string investorCode, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLastAlertTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDate", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDateResponse")]
        data.baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDate", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDateResponse")]
        System.IAsyncResult BeginGetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.priceDataDataTable EndGetData_ByTimeScale_Code_FrDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRange", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRangeResponse")]
        data.baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRange", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRangeResponse")]
        System.IAsyncResult BeginGetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState);
        
        data.baseDS.priceDataDataTable EndGetData_ByTimeScale_Code_DateRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMarketData_BySQL", ReplyAction="http://tempuri.org/IStockService/GetMarketData_BySQLResponse")]
        data.tmpDS.marketDataDataTable GetMarketData_BySQL(string sqlCmd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetMarketData_BySQL", ReplyAction="http://tempuri.org/IStockService/GetMarketData_BySQLResponse")]
        System.IAsyncResult BeginGetMarketData_BySQL(string sqlCmd, System.AsyncCallback callback, object asyncState);
        
        data.tmpDS.marketDataDataTable EndGetMarketData_BySQL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_TotalRow", ReplyAction="http://tempuri.org/IStockService/GetData_TotalRowResponse")]
        int GetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetData_TotalRow", ReplyAction="http://tempuri.org/IStockService/GetData_TotalRowResponse")]
        System.IAsyncResult BeginGetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState);
        
        int EndGetData_TotalRow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransactionInfo", ReplyAction="http://tempuri.org/IStockService/GetTransactionInfoResponse")]
        bool GetTransactionInfo(ref commonClass.TransactionInfo transInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetTransactionInfo", ReplyAction="http://tempuri.org/IStockService/GetTransactionInfoResponse")]
        System.IAsyncResult BeginGetTransactionInfo(ref commonClass.TransactionInfo transInfo, System.AsyncCallback callback, object asyncState);
        
        bool EndGetTransactionInfo(ref commonClass.TransactionInfo transInfo, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceByCode", ReplyAction="http://tempuri.org/IStockService/GetPriceByCodeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(decimal[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(decimal[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(double[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(double[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.TimeRanges))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.EstimateOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.TradePointInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.TradePointInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.BusinessInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.MarketTrend))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.TradeActions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.PortfolioTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.PortfolioTypes[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.PriceDataType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.TransactionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(commonClass.AppTypes.CommonStatus))]
        object[] GetPriceByCode(string stockCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetPriceByCode", ReplyAction="http://tempuri.org/IStockService/GetPriceByCodeResponse")]
        System.IAsyncResult BeginGetPriceByCode(string stockCode, System.AsyncCallback callback, object asyncState);
        
        object[] EndGetPriceByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Reset", ReplyAction="http://tempuri.org/IStockService/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/Reset", ReplyAction="http://tempuri.org/IStockService/ResetResponse")]
        System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState);
        
        void EndReset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ClearCache", ReplyAction="http://tempuri.org/IStockService/ClearCacheResponse")]
        void ClearCache();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/ClearCache", ReplyAction="http://tempuri.org/IStockService/ClearCacheResponse")]
        System.IAsyncResult BeginClearCache(System.AsyncCallback callback, object asyncState);
        
        void EndClearCache(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteCache", ReplyAction="http://tempuri.org/IStockService/DeleteCacheResponse")]
        void DeleteCache(string cacheName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteCache", ReplyAction="http://tempuri.org/IStockService/DeleteCacheResponse")]
        System.IAsyncResult BeginDeleteCache(string cacheName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCache(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetServerDateTime", ReplyAction="http://tempuri.org/IStockService/GetServerDateTimeResponse")]
        System.DateTime GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetServerDateTime", ReplyAction="http://tempuri.org/IStockService/GetServerDateTimeResponse")]
        System.IAsyncResult BeginGetServerDateTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetServerDateTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCodeCat", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeCatResponse")]
        void UpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateSysCodeCat", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeCatResponse")]
        System.IAsyncResult BeginUpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCode", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeResponse")]
        void UpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateSysCode", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeResponse")]
        System.IAsyncResult BeginUpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStock", ReplyAction="http://tempuri.org/IStockService/UpdateStockResponse")]
        void UpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateStock", ReplyAction="http://tempuri.org/IStockService/UpdateStockResponse")]
        System.IAsyncResult BeginUpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestor", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorResponse")]
        void UpdateInvestor(ref data.baseDS.investorDataTable investorTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateInvestor", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorResponse")]
        System.IAsyncResult BeginUpdateInvestor(ref data.baseDS.investorDataTable investorTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateInvestor(ref data.baseDS.investorDataTable investorTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolio", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioResponse")]
        void UpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdatePortfolio", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioResponse")]
        System.IAsyncResult BeginUpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolioDetail", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioDetailResponse")]
        void UpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdatePortfolioDetail", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioDetailResponse")]
        System.IAsyncResult BeginUpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStockExchange", ReplyAction="http://tempuri.org/IStockService/UpdateStockExchangeResponse")]
        void UpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateStockExchange", ReplyAction="http://tempuri.org/IStockService/UpdateStockExchangeResponse")]
        System.IAsyncResult BeginUpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTransactions", ReplyAction="http://tempuri.org/IStockService/UpdateTransactionsResponse")]
        void UpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateTransactions", ReplyAction="http://tempuri.org/IStockService/UpdateTransactionsResponse")]
        System.IAsyncResult BeginUpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestorStock", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorStockResponse")]
        void UpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateInvestorStock", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorStockResponse")]
        System.IAsyncResult BeginUpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTradeAlert", ReplyAction="http://tempuri.org/IStockService/UpdateTradeAlertResponse")]
        void UpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateTradeAlert", ReplyAction="http://tempuri.org/IStockService/UpdateTradeAlertResponse")]
        System.IAsyncResult BeginUpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysAutoKeyPending", ReplyAction="http://tempuri.org/IStockService/UpdateSysAutoKeyPendingResponse")]
        void UpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/UpdateSysAutoKeyPending", ReplyAction="http://tempuri.org/IStockService/UpdateSysAutoKeyPendingResponse")]
        System.IAsyncResult BeginUpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStock", ReplyAction="http://tempuri.org/IStockService/DeleteStockResponse")]
        void DeleteStock(string stockCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteStock", ReplyAction="http://tempuri.org/IStockService/DeleteStockResponse")]
        System.IAsyncResult BeginDeleteStock(string stockCode, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStockExchange", ReplyAction="http://tempuri.org/IStockService/DeleteStockExchangeResponse")]
        void DeleteStockExchange(string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteStockExchange", ReplyAction="http://tempuri.org/IStockService/DeleteStockExchangeResponse")]
        System.IAsyncResult BeginDeleteStockExchange(string code, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStockExchange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteInvestor", ReplyAction="http://tempuri.org/IStockService/DeleteInvestorResponse")]
        void DeleteInvestor(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteInvestor", ReplyAction="http://tempuri.org/IStockService/DeleteInvestorResponse")]
        System.IAsyncResult BeginDeleteInvestor(string investorCode, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteInvestor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeletePortfolio", ReplyAction="http://tempuri.org/IStockService/DeletePortfolioResponse")]
        void DeletePortfolio(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeletePortfolio", ReplyAction="http://tempuri.org/IStockService/DeletePortfolioResponse")]
        System.IAsyncResult BeginDeletePortfolio(string portfolioCode, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePortfolio(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCodeCat", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeCatResponse")]
        void DeleteSysCodeCat(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteSysCodeCat", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeCatResponse")]
        System.IAsyncResult BeginDeleteSysCodeCat(string catCode, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSysCodeCat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCode", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeResponse")]
        void DeleteSysCode(string catCode, string code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteSysCode", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeResponse")]
        System.IAsyncResult BeginDeleteSysCode(string catCode, string code, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSysCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteTradeAlert", ReplyAction="http://tempuri.org/IStockService/DeleteTradeAlertResponse")]
        void DeleteTradeAlert(int alertId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/DeleteTradeAlert", ReplyAction="http://tempuri.org/IStockService/DeleteTradeAlertResponse")]
        System.IAsyncResult BeginDeleteTradeAlert(int alertId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTradeAlert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockByStatus", ReplyAction="http://tempuri.org/IStockService/GetStockByStatusResponse")]
        data.tmpDS.stockCodeDataTable GetStockByStatus(commonClass.AppTypes.CommonStatus status);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStockByStatus", ReplyAction="http://tempuri.org/IStockService/GetStockByStatusResponse")]
        System.IAsyncResult BeginGetStockByStatus(commonClass.AppTypes.CommonStatus status, System.AsyncCallback callback, object asyncState);
        
        data.tmpDS.stockCodeDataTable EndGetStockByStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockFull", ReplyAction="http://tempuri.org/IStockService/GetStockFullResponse")]
        data.baseDS.stockCodeDataTable GetStockFull();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStockFull", ReplyAction="http://tempuri.org/IStockService/GetStockFullResponse")]
        System.IAsyncResult BeginGetStockFull(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.stockCodeDataTable EndGetStockFull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByWatchList", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByWatchListResponse")]
        string[] GetStockList_ByWatchList(string[] watchList);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStockList_ByWatchList", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByWatchListResponse")]
        System.IAsyncResult BeginGetStockList_ByWatchList(string[] watchList, System.AsyncCallback callback, object asyncState);
        
        string[] EndGetStockList_ByWatchList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByBizSectorResponse")]
        string[] GetStockList_ByBizSector(string[] sectors);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStockList_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByBizSectorResponse")]
        System.IAsyncResult BeginGetStockList_ByBizSector(string[] sectors, System.AsyncCallback callback, object asyncState);
        
        string[] EndGetStockList_ByBizSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockExchange", ReplyAction="http://tempuri.org/IStockService/GetStockExchangeResponse")]
        data.baseDS.stockExchangeDataTable GetStockExchange();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetStockExchange", ReplyAction="http://tempuri.org/IStockService/GetStockExchangeResponse")]
        System.IAsyncResult BeginGetStockExchange(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.stockExchangeDataTable EndGetStockExchange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetEmployeeRange", ReplyAction="http://tempuri.org/IStockService/GetEmployeeRangeResponse")]
        data.baseDS.employeeRangeDataTable GetEmployeeRange();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetEmployeeRange", ReplyAction="http://tempuri.org/IStockService/GetEmployeeRangeResponse")]
        System.IAsyncResult BeginGetEmployeeRange(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.employeeRangeDataTable EndGetEmployeeRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizIndustryResponse")]
        data.baseDS.bizIndustryDataTable GetBizIndustry();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizIndustryResponse")]
        System.IAsyncResult BeginGetBizIndustry(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizIndustryDataTable EndGetBizIndustry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSuperSectorResponse")]
        data.baseDS.bizSuperSectorDataTable GetBizSuperSector();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSuperSectorResponse")]
        System.IAsyncResult BeginGetBizSuperSector(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSuperSectorDataTable EndGetBizSuperSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSector", ReplyAction="http://tempuri.org/IStockService/GetBizSectorResponse")]
        data.baseDS.bizSectorDataTable GetBizSector();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSector", ReplyAction="http://tempuri.org/IStockService/GetBizSectorResponse")]
        System.IAsyncResult BeginGetBizSector(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSectorDataTable EndGetBizSector(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorResponse")]
        data.baseDS.bizSubSectorDataTable GetBizSubSector();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockService/GetBizSubSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorResponse")]
        System.IAsyncResult BeginGetBizSubSector(System.AsyncCallback callback, object asyncState);
        
        data.baseDS.bizSubSectorDataTable EndGetBizSubSector(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStockServiceChannel : DataAccess.ServiceReference1.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LoadAnalysisDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadAnalysisDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAnalysis_Data_ByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysis_Data_ByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int firstData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public data.baseDS.priceDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.priceDataDataTable)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAnalysis_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysis_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int firstData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public data.baseDS.priceDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.priceDataDataTable)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class Estimate_Matrix_ProfitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Estimate_Matrix_ProfitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class Estimate_Matrix_LastBizWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Estimate_Matrix_LastBizWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public commonClass.TradePointInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((commonClass.TradePointInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class MakeTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakeTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string errorText {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public data.baseDS.transactionsDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.transactionsDataTable)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTradePointWithEstimationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTradePointWithEstimationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.tmpDS.tradeEstimateDataTable toTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.tmpDS.tradeEstimateDataTable)(this.results[0]));
            }
        }
        
        public commonClass.TradePointInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((commonClass.TradePointInfo[])(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSectorByIndustryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSectorByIndustryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSectorBySuperSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSectorBySuperSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSectorBySectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSectorBySectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.countryDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.countryDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.currencyDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.currencyDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetInvestorCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvestorCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorCatDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorCatDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSysCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSysCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.sysCodeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.sysCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSysCodeCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSysCodeCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.sysCodeCatDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.sysCodeCatDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetInvestor_ByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvestor_ByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetInvestor_BySQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvestor_BySQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStock_InPortfolioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStock_InPortfolioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.tmpDS.stockCodeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.tmpDS.stockCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStock_ByBizSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStock_ByBizSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.tmpDS.stockCodeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.tmpDS.stockCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSector_ByIndustryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSector_ByIndustryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSector_BySuperSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSector_BySuperSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSector_BySectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSector_BySectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolio_ByInvestorAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolio_ByInvestorAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolio_ByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolio_ByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolio_ByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolio_ByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolio_ByInvestorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolio_ByInvestorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTradeAlert_BySQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTradeAlert_BySQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.tradeAlertDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.tradeAlertDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTransaction_BySQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransaction_BySQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.transactionsDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.transactionsDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolioDetail_ByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolioDetail_ByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDetailDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDetailDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPortfolioDetail_ByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPortfolioDetail_ByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDetailDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDetailDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetOwnedStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOwnedStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorStockDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorStockDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetLastPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.lastPriceDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.lastPriceDataDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetLastAlertTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastAlertTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetData_ByTimeScale_Code_FrDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetData_ByTimeScale_Code_FrDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.priceDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.priceDataDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetData_ByTimeScale_Code_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetData_ByTimeScale_Code_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.priceDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.priceDataDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMarketData_BySQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMarketData_BySQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.tmpDS.marketDataDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.tmpDS.marketDataDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetData_TotalRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetData_TotalRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTransactionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransactionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public commonClass.TransactionInfo transInfo {
            get {
                base.RaiseExceptionIfNecessary();
                return ((commonClass.TransactionInfo)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPriceByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPriceByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateSysCodeCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSysCodeCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.sysCodeCatDataTable sysCodeCatTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.sysCodeCatDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateSysCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSysCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.sysCodeDataTable sysCodeTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.sysCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.stockCodeDataTable stockCodeTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.stockCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateInvestorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateInvestorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorDataTable investorTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdatePortfolioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePortfolioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDataTable portfolioTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdatePortfolioDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePortfolioDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.portfolioDetailDataTable portfolioDetailTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.portfolioDetailDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateStockExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateStockExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.stockExchangeDataTable stockExchangeTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.stockExchangeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.transactionsDataTable transactionsTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.transactionsDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateInvestorStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateInvestorStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.investorStockDataTable investorStockTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.investorStockDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateTradeAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTradeAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.tradeAlertDataTable tradeAlertTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.tradeAlertDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateSysAutoKeyPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSysAutoKeyPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.sysAutoKeyPendingDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStockByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStockByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.tmpDS.stockCodeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.tmpDS.stockCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStockFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStockFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.stockCodeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.stockCodeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStockList_ByWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStockList_ByWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStockList_ByBizSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStockList_ByBizSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStockExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStockExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.stockExchangeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.stockExchangeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEmployeeRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.employeeRangeDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.employeeRangeDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizIndustryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizIndustryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizIndustryDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizIndustryDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSuperSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSuperSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSuperSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSuperSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetBizSubSectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBizSubSectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public data.baseDS.bizSubSectorDataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((data.baseDS.bizSubSectorDataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<DataAccess.ServiceReference1.IStockService>, DataAccess.ServiceReference1.IStockService {
        
        private BeginOperationDelegate onBeginLoadAnalysisDataDelegate;
        
        private EndOperationDelegate onEndLoadAnalysisDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadAnalysisDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysis_Data_ByKeyDelegate;
        
        private EndOperationDelegate onEndGetAnalysis_Data_ByKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysis_Data_ByKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysis_DataDelegate;
        
        private EndOperationDelegate onEndGetAnalysis_DataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysis_DataCompletedDelegate;
        
        private BeginOperationDelegate onBeginEstimate_Matrix_ProfitDelegate;
        
        private EndOperationDelegate onEndEstimate_Matrix_ProfitDelegate;
        
        private System.Threading.SendOrPostCallback onEstimate_Matrix_ProfitCompletedDelegate;
        
        private BeginOperationDelegate onBeginEstimate_Matrix_LastBizWeightDelegate;
        
        private EndOperationDelegate onEndEstimate_Matrix_LastBizWeightDelegate;
        
        private System.Threading.SendOrPostCallback onEstimate_Matrix_LastBizWeightCompletedDelegate;
        
        private BeginOperationDelegate onBeginAnalysisDelegate;
        
        private EndOperationDelegate onEndAnalysisDelegate;
        
        private System.Threading.SendOrPostCallback onAnalysisCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakeTransactionDelegate;
        
        private EndOperationDelegate onEndMakeTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onMakeTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTradePointWithEstimationDetailDelegate;
        
        private EndOperationDelegate onEndGetTradePointWithEstimationDetailDelegate;
        
        private System.Threading.SendOrPostCallback onGetTradePointWithEstimationDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetXmlDelegate;
        
        private EndOperationDelegate onEndGetXmlDelegate;
        
        private System.Threading.SendOrPostCallback onGetXmlCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoad_Global_SettingsDelegate;
        
        private EndOperationDelegate onEndLoad_Global_SettingsDelegate;
        
        private System.Threading.SendOrPostCallback onLoad_Global_SettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSave_Global_SettingsDelegate;
        
        private EndOperationDelegate onEndSave_Global_SettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSave_Global_SettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestDelegate;
        
        private EndOperationDelegate onEndTestDelegate;
        
        private System.Threading.SendOrPostCallback onTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSectorByIndustryDelegate;
        
        private EndOperationDelegate onEndGetBizSubSectorByIndustryDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSectorByIndustryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSectorBySuperSectorDelegate;
        
        private EndOperationDelegate onEndGetBizSubSectorBySuperSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSectorBySuperSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSectorBySectorDelegate;
        
        private EndOperationDelegate onEndGetBizSubSectorBySectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSectorBySectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountryDelegate;
        
        private EndOperationDelegate onEndGetCountryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrencyDelegate;
        
        private EndOperationDelegate onEndGetCurrencyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrencyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvestorCatDelegate;
        
        private EndOperationDelegate onEndGetInvestorCatDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvestorCatCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSysCodeDelegate;
        
        private EndOperationDelegate onEndGetSysCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSysCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSysCodeCatDelegate;
        
        private EndOperationDelegate onEndGetSysCodeCatDelegate;
        
        private System.Threading.SendOrPostCallback onGetSysCodeCatCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvestor_ByCodeDelegate;
        
        private EndOperationDelegate onEndGetInvestor_ByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvestor_ByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvestor_BySQLDelegate;
        
        private EndOperationDelegate onEndGetInvestor_BySQLDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvestor_BySQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStock_InPortfolioDelegate;
        
        private EndOperationDelegate onEndGetStock_InPortfolioDelegate;
        
        private System.Threading.SendOrPostCallback onGetStock_InPortfolioCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStock_ByBizSectorDelegate;
        
        private EndOperationDelegate onEndGetStock_ByBizSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetStock_ByBizSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSector_ByIndustryDelegate;
        
        private EndOperationDelegate onEndGetBizSubSector_ByIndustryDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSector_ByIndustryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSector_BySuperSectorDelegate;
        
        private EndOperationDelegate onEndGetBizSubSector_BySuperSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSector_BySuperSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSector_BySectorDelegate;
        
        private EndOperationDelegate onEndGetBizSubSector_BySectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSector_BySectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolio_ByInvestorAndTypeDelegate;
        
        private EndOperationDelegate onEndGetPortfolio_ByInvestorAndTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolio_ByInvestorAndTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolio_ByTypeDelegate;
        
        private EndOperationDelegate onEndGetPortfolio_ByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolio_ByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolio_ByCodeDelegate;
        
        private EndOperationDelegate onEndGetPortfolio_ByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolio_ByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolio_ByInvestorDelegate;
        
        private EndOperationDelegate onEndGetPortfolio_ByInvestorDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolio_ByInvestorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTradeAlert_BySQLDelegate;
        
        private EndOperationDelegate onEndGetTradeAlert_BySQLDelegate;
        
        private System.Threading.SendOrPostCallback onGetTradeAlert_BySQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransaction_BySQLDelegate;
        
        private EndOperationDelegate onEndGetTransaction_BySQLDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransaction_BySQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolioDetail_ByTypeDelegate;
        
        private EndOperationDelegate onEndGetPortfolioDetail_ByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolioDetail_ByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPortfolioDetail_ByCodeDelegate;
        
        private EndOperationDelegate onEndGetPortfolioDetail_ByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPortfolioDetail_ByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOwnedStockDelegate;
        
        private EndOperationDelegate onEndGetOwnedStockDelegate;
        
        private System.Threading.SendOrPostCallback onGetOwnedStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastPriceDelegate;
        
        private EndOperationDelegate onEndGetLastPriceDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastAlertTimeDelegate;
        
        private EndOperationDelegate onEndGetLastAlertTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastAlertTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetData_ByTimeScale_Code_FrDateDelegate;
        
        private EndOperationDelegate onEndGetData_ByTimeScale_Code_FrDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetData_ByTimeScale_Code_FrDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetData_ByTimeScale_Code_DateRangeDelegate;
        
        private EndOperationDelegate onEndGetData_ByTimeScale_Code_DateRangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetData_ByTimeScale_Code_DateRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMarketData_BySQLDelegate;
        
        private EndOperationDelegate onEndGetMarketData_BySQLDelegate;
        
        private System.Threading.SendOrPostCallback onGetMarketData_BySQLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetData_TotalRowDelegate;
        
        private EndOperationDelegate onEndGetData_TotalRowDelegate;
        
        private System.Threading.SendOrPostCallback onGetData_TotalRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransactionInfoDelegate;
        
        private EndOperationDelegate onEndGetTransactionInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransactionInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPriceByCodeDelegate;
        
        private EndOperationDelegate onEndGetPriceByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetPriceByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetDelegate;
        
        private EndOperationDelegate onEndResetDelegate;
        
        private System.Threading.SendOrPostCallback onResetCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearCacheDelegate;
        
        private EndOperationDelegate onEndClearCacheDelegate;
        
        private System.Threading.SendOrPostCallback onClearCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCacheDelegate;
        
        private EndOperationDelegate onEndDeleteCacheDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerDateTimeDelegate;
        
        private EndOperationDelegate onEndGetServerDateTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerDateTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSysCodeCatDelegate;
        
        private EndOperationDelegate onEndUpdateSysCodeCatDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSysCodeCatCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSysCodeDelegate;
        
        private EndOperationDelegate onEndUpdateSysCodeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSysCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStockDelegate;
        
        private EndOperationDelegate onEndUpdateStockDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateInvestorDelegate;
        
        private EndOperationDelegate onEndUpdateInvestorDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateInvestorCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePortfolioDelegate;
        
        private EndOperationDelegate onEndUpdatePortfolioDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePortfolioCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePortfolioDetailDelegate;
        
        private EndOperationDelegate onEndUpdatePortfolioDetailDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePortfolioDetailCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateStockExchangeDelegate;
        
        private EndOperationDelegate onEndUpdateStockExchangeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateStockExchangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTransactionsDelegate;
        
        private EndOperationDelegate onEndUpdateTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateInvestorStockDelegate;
        
        private EndOperationDelegate onEndUpdateInvestorStockDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateInvestorStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTradeAlertDelegate;
        
        private EndOperationDelegate onEndUpdateTradeAlertDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTradeAlertCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSysAutoKeyPendingDelegate;
        
        private EndOperationDelegate onEndUpdateSysAutoKeyPendingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSysAutoKeyPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStockDelegate;
        
        private EndOperationDelegate onEndDeleteStockDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStockCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStockExchangeDelegate;
        
        private EndOperationDelegate onEndDeleteStockExchangeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStockExchangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInvestorDelegate;
        
        private EndOperationDelegate onEndDeleteInvestorDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInvestorCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePortfolioDelegate;
        
        private EndOperationDelegate onEndDeletePortfolioDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePortfolioCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSysCodeCatDelegate;
        
        private EndOperationDelegate onEndDeleteSysCodeCatDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSysCodeCatCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSysCodeDelegate;
        
        private EndOperationDelegate onEndDeleteSysCodeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSysCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTradeAlertDelegate;
        
        private EndOperationDelegate onEndDeleteTradeAlertDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTradeAlertCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStockByStatusDelegate;
        
        private EndOperationDelegate onEndGetStockByStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetStockByStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStockFullDelegate;
        
        private EndOperationDelegate onEndGetStockFullDelegate;
        
        private System.Threading.SendOrPostCallback onGetStockFullCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStockList_ByWatchListDelegate;
        
        private EndOperationDelegate onEndGetStockList_ByWatchListDelegate;
        
        private System.Threading.SendOrPostCallback onGetStockList_ByWatchListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStockList_ByBizSectorDelegate;
        
        private EndOperationDelegate onEndGetStockList_ByBizSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetStockList_ByBizSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStockExchangeDelegate;
        
        private EndOperationDelegate onEndGetStockExchangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetStockExchangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeRangeDelegate;
        
        private EndOperationDelegate onEndGetEmployeeRangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizIndustryDelegate;
        
        private EndOperationDelegate onEndGetBizIndustryDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizIndustryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSuperSectorDelegate;
        
        private EndOperationDelegate onEndGetBizSuperSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSuperSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSectorDelegate;
        
        private EndOperationDelegate onEndGetBizSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSectorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBizSubSectorDelegate;
        
        private EndOperationDelegate onEndGetBizSubSectorDelegate;
        
        private System.Threading.SendOrPostCallback onGetBizSubSectorCompletedDelegate;
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoadAnalysisDataCompletedEventArgs> LoadAnalysisDataCompleted;
        
        public event System.EventHandler<GetAnalysis_Data_ByKeyCompletedEventArgs> GetAnalysis_Data_ByKeyCompleted;
        
        public event System.EventHandler<GetAnalysis_DataCompletedEventArgs> GetAnalysis_DataCompleted;
        
        public event System.EventHandler<Estimate_Matrix_ProfitCompletedEventArgs> Estimate_Matrix_ProfitCompleted;
        
        public event System.EventHandler<Estimate_Matrix_LastBizWeightCompletedEventArgs> Estimate_Matrix_LastBizWeightCompleted;
        
        public event System.EventHandler<AnalysisCompletedEventArgs> AnalysisCompleted;
        
        public event System.EventHandler<MakeTransactionCompletedEventArgs> MakeTransactionCompleted;
        
        public event System.EventHandler<GetTradePointWithEstimationDetailCompletedEventArgs> GetTradePointWithEstimationDetailCompleted;
        
        public event System.EventHandler<GetXmlCompletedEventArgs> GetXmlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Load_Global_SettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Save_Global_SettingsCompleted;
        
        public event System.EventHandler<TestCompletedEventArgs> TestCompleted;
        
        public event System.EventHandler<GetBizSubSectorByIndustryCompletedEventArgs> GetBizSubSectorByIndustryCompleted;
        
        public event System.EventHandler<GetBizSubSectorBySuperSectorCompletedEventArgs> GetBizSubSectorBySuperSectorCompleted;
        
        public event System.EventHandler<GetBizSubSectorBySectorCompletedEventArgs> GetBizSubSectorBySectorCompleted;
        
        public event System.EventHandler<GetCountryCompletedEventArgs> GetCountryCompleted;
        
        public event System.EventHandler<GetCurrencyCompletedEventArgs> GetCurrencyCompleted;
        
        public event System.EventHandler<GetInvestorCatCompletedEventArgs> GetInvestorCatCompleted;
        
        public event System.EventHandler<GetSysCodeCompletedEventArgs> GetSysCodeCompleted;
        
        public event System.EventHandler<GetSysCodeCatCompletedEventArgs> GetSysCodeCatCompleted;
        
        public event System.EventHandler<GetInvestor_ByCodeCompletedEventArgs> GetInvestor_ByCodeCompleted;
        
        public event System.EventHandler<GetInvestor_BySQLCompletedEventArgs> GetInvestor_BySQLCompleted;
        
        public event System.EventHandler<GetStock_InPortfolioCompletedEventArgs> GetStock_InPortfolioCompleted;
        
        public event System.EventHandler<GetStock_ByBizSectorCompletedEventArgs> GetStock_ByBizSectorCompleted;
        
        public event System.EventHandler<GetBizSubSector_ByIndustryCompletedEventArgs> GetBizSubSector_ByIndustryCompleted;
        
        public event System.EventHandler<GetBizSubSector_BySuperSectorCompletedEventArgs> GetBizSubSector_BySuperSectorCompleted;
        
        public event System.EventHandler<GetBizSubSector_BySectorCompletedEventArgs> GetBizSubSector_BySectorCompleted;
        
        public event System.EventHandler<GetPortfolio_ByInvestorAndTypeCompletedEventArgs> GetPortfolio_ByInvestorAndTypeCompleted;
        
        public event System.EventHandler<GetPortfolio_ByTypeCompletedEventArgs> GetPortfolio_ByTypeCompleted;
        
        public event System.EventHandler<GetPortfolio_ByCodeCompletedEventArgs> GetPortfolio_ByCodeCompleted;
        
        public event System.EventHandler<GetPortfolio_ByInvestorCompletedEventArgs> GetPortfolio_ByInvestorCompleted;
        
        public event System.EventHandler<GetTradeAlert_BySQLCompletedEventArgs> GetTradeAlert_BySQLCompleted;
        
        public event System.EventHandler<GetTransaction_BySQLCompletedEventArgs> GetTransaction_BySQLCompleted;
        
        public event System.EventHandler<GetPortfolioDetail_ByTypeCompletedEventArgs> GetPortfolioDetail_ByTypeCompleted;
        
        public event System.EventHandler<GetPortfolioDetail_ByCodeCompletedEventArgs> GetPortfolioDetail_ByCodeCompleted;
        
        public event System.EventHandler<GetOwnedStockCompletedEventArgs> GetOwnedStockCompleted;
        
        public event System.EventHandler<GetLastPriceCompletedEventArgs> GetLastPriceCompleted;
        
        public event System.EventHandler<GetLastAlertTimeCompletedEventArgs> GetLastAlertTimeCompleted;
        
        public event System.EventHandler<GetData_ByTimeScale_Code_FrDateCompletedEventArgs> GetData_ByTimeScale_Code_FrDateCompleted;
        
        public event System.EventHandler<GetData_ByTimeScale_Code_DateRangeCompletedEventArgs> GetData_ByTimeScale_Code_DateRangeCompleted;
        
        public event System.EventHandler<GetMarketData_BySQLCompletedEventArgs> GetMarketData_BySQLCompleted;
        
        public event System.EventHandler<GetData_TotalRowCompletedEventArgs> GetData_TotalRowCompleted;
        
        public event System.EventHandler<GetTransactionInfoCompletedEventArgs> GetTransactionInfoCompleted;
        
        public event System.EventHandler<GetPriceByCodeCompletedEventArgs> GetPriceByCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearCacheCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCacheCompleted;
        
        public event System.EventHandler<GetServerDateTimeCompletedEventArgs> GetServerDateTimeCompleted;
        
        public event System.EventHandler<UpdateSysCodeCatCompletedEventArgs> UpdateSysCodeCatCompleted;
        
        public event System.EventHandler<UpdateSysCodeCompletedEventArgs> UpdateSysCodeCompleted;
        
        public event System.EventHandler<UpdateStockCompletedEventArgs> UpdateStockCompleted;
        
        public event System.EventHandler<UpdateInvestorCompletedEventArgs> UpdateInvestorCompleted;
        
        public event System.EventHandler<UpdatePortfolioCompletedEventArgs> UpdatePortfolioCompleted;
        
        public event System.EventHandler<UpdatePortfolioDetailCompletedEventArgs> UpdatePortfolioDetailCompleted;
        
        public event System.EventHandler<UpdateStockExchangeCompletedEventArgs> UpdateStockExchangeCompleted;
        
        public event System.EventHandler<UpdateTransactionsCompletedEventArgs> UpdateTransactionsCompleted;
        
        public event System.EventHandler<UpdateInvestorStockCompletedEventArgs> UpdateInvestorStockCompleted;
        
        public event System.EventHandler<UpdateTradeAlertCompletedEventArgs> UpdateTradeAlertCompleted;
        
        public event System.EventHandler<UpdateSysAutoKeyPendingCompletedEventArgs> UpdateSysAutoKeyPendingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStockCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStockExchangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteInvestorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePortfolioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSysCodeCatCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSysCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTradeAlertCompleted;
        
        public event System.EventHandler<GetStockByStatusCompletedEventArgs> GetStockByStatusCompleted;
        
        public event System.EventHandler<GetStockFullCompletedEventArgs> GetStockFullCompleted;
        
        public event System.EventHandler<GetStockList_ByWatchListCompletedEventArgs> GetStockList_ByWatchListCompleted;
        
        public event System.EventHandler<GetStockList_ByBizSectorCompletedEventArgs> GetStockList_ByBizSectorCompleted;
        
        public event System.EventHandler<GetStockExchangeCompletedEventArgs> GetStockExchangeCompleted;
        
        public event System.EventHandler<GetEmployeeRangeCompletedEventArgs> GetEmployeeRangeCompleted;
        
        public event System.EventHandler<GetBizIndustryCompletedEventArgs> GetBizIndustryCompleted;
        
        public event System.EventHandler<GetBizSuperSectorCompletedEventArgs> GetBizSuperSectorCompleted;
        
        public event System.EventHandler<GetBizSectorCompletedEventArgs> GetBizSectorCompleted;
        
        public event System.EventHandler<GetBizSubSectorCompletedEventArgs> GetBizSubSectorCompleted;
        
        public string LoadAnalysisData(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew) {
            return base.Channel.LoadAnalysisData(timeRange, timeScaleCode, code, forceReadNew);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadAnalysisData(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadAnalysisData(timeRange, timeScaleCode, code, forceReadNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLoadAnalysisData(System.IAsyncResult result) {
            return base.Channel.EndLoadAnalysisData(result);
        }
        
        private System.IAsyncResult OnBeginLoadAnalysisData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TimeRanges timeRange = ((commonClass.AppTypes.TimeRanges)(inValues[0]));
            string timeScaleCode = ((string)(inValues[1]));
            string code = ((string)(inValues[2]));
            bool forceReadNew = ((bool)(inValues[3]));
            return this.BeginLoadAnalysisData(timeRange, timeScaleCode, code, forceReadNew, callback, asyncState);
        }
        
        private object[] OnEndLoadAnalysisData(System.IAsyncResult result) {
            string retVal = this.EndLoadAnalysisData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadAnalysisDataCompleted(object state) {
            if ((this.LoadAnalysisDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadAnalysisDataCompleted(this, new LoadAnalysisDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadAnalysisDataAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew) {
            this.LoadAnalysisDataAsync(timeRange, timeScaleCode, code, forceReadNew, null);
        }
        
        public void LoadAnalysisDataAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string code, bool forceReadNew, object userState) {
            if ((this.onBeginLoadAnalysisDataDelegate == null)) {
                this.onBeginLoadAnalysisDataDelegate = new BeginOperationDelegate(this.OnBeginLoadAnalysisData);
            }
            if ((this.onEndLoadAnalysisDataDelegate == null)) {
                this.onEndLoadAnalysisDataDelegate = new EndOperationDelegate(this.OnEndLoadAnalysisData);
            }
            if ((this.onLoadAnalysisDataCompletedDelegate == null)) {
                this.onLoadAnalysisDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadAnalysisDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadAnalysisDataDelegate, new object[] {
                        timeRange,
                        timeScaleCode,
                        code,
                        forceReadNew}, this.onEndLoadAnalysisDataDelegate, this.onLoadAnalysisDataCompletedDelegate, userState);
        }
        
        public data.baseDS.priceDataDataTable GetAnalysis_Data_ByKey(out int firstData, string dataKey) {
            return base.Channel.GetAnalysis_Data_ByKey(out firstData, dataKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAnalysis_Data_ByKey(string dataKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysis_Data_ByKey(dataKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.priceDataDataTable EndGetAnalysis_Data_ByKey(out int firstData, System.IAsyncResult result) {
            return base.Channel.EndGetAnalysis_Data_ByKey(out firstData, result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysis_Data_ByKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dataKey = ((string)(inValues[0]));
            return this.BeginGetAnalysis_Data_ByKey(dataKey, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysis_Data_ByKey(System.IAsyncResult result) {
            int firstData = this.GetDefaultValueForInitialization<int>();
            data.baseDS.priceDataDataTable retVal = this.EndGetAnalysis_Data_ByKey(out firstData, result);
            return new object[] {
                    firstData,
                    retVal};
        }
        
        private void OnGetAnalysis_Data_ByKeyCompleted(object state) {
            if ((this.GetAnalysis_Data_ByKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysis_Data_ByKeyCompleted(this, new GetAnalysis_Data_ByKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysis_Data_ByKeyAsync(string dataKey) {
            this.GetAnalysis_Data_ByKeyAsync(dataKey, null);
        }
        
        public void GetAnalysis_Data_ByKeyAsync(string dataKey, object userState) {
            if ((this.onBeginGetAnalysis_Data_ByKeyDelegate == null)) {
                this.onBeginGetAnalysis_Data_ByKeyDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysis_Data_ByKey);
            }
            if ((this.onEndGetAnalysis_Data_ByKeyDelegate == null)) {
                this.onEndGetAnalysis_Data_ByKeyDelegate = new EndOperationDelegate(this.OnEndGetAnalysis_Data_ByKey);
            }
            if ((this.onGetAnalysis_Data_ByKeyCompletedDelegate == null)) {
                this.onGetAnalysis_Data_ByKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysis_Data_ByKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysis_Data_ByKeyDelegate, new object[] {
                        dataKey}, this.onEndGetAnalysis_Data_ByKeyDelegate, this.onGetAnalysis_Data_ByKeyCompletedDelegate, userState);
        }
        
        public data.baseDS.priceDataDataTable GetAnalysis_Data(out int firstData, commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode) {
            return base.Channel.GetAnalysis_Data(out firstData, timeRanges, timeScaleCode, stockCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAnalysis_Data(commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysis_Data(timeRanges, timeScaleCode, stockCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.priceDataDataTable EndGetAnalysis_Data(out int firstData, System.IAsyncResult result) {
            return base.Channel.EndGetAnalysis_Data(out firstData, result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysis_Data(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TimeRanges timeRanges = ((commonClass.AppTypes.TimeRanges)(inValues[0]));
            string timeScaleCode = ((string)(inValues[1]));
            string stockCode = ((string)(inValues[2]));
            return this.BeginGetAnalysis_Data(timeRanges, timeScaleCode, stockCode, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysis_Data(System.IAsyncResult result) {
            int firstData = this.GetDefaultValueForInitialization<int>();
            data.baseDS.priceDataDataTable retVal = this.EndGetAnalysis_Data(out firstData, result);
            return new object[] {
                    firstData,
                    retVal};
        }
        
        private void OnGetAnalysis_DataCompleted(object state) {
            if ((this.GetAnalysis_DataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysis_DataCompleted(this, new GetAnalysis_DataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysis_DataAsync(commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode) {
            this.GetAnalysis_DataAsync(timeRanges, timeScaleCode, stockCode, null);
        }
        
        public void GetAnalysis_DataAsync(commonClass.AppTypes.TimeRanges timeRanges, string timeScaleCode, string stockCode, object userState) {
            if ((this.onBeginGetAnalysis_DataDelegate == null)) {
                this.onBeginGetAnalysis_DataDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysis_Data);
            }
            if ((this.onEndGetAnalysis_DataDelegate == null)) {
                this.onEndGetAnalysis_DataDelegate = new EndOperationDelegate(this.OnEndGetAnalysis_Data);
            }
            if ((this.onGetAnalysis_DataCompletedDelegate == null)) {
                this.onGetAnalysis_DataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysis_DataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysis_DataDelegate, new object[] {
                        timeRanges,
                        timeScaleCode,
                        stockCode}, this.onEndGetAnalysis_DataDelegate, this.onGetAnalysis_DataCompletedDelegate, userState);
        }
        
        public decimal[][] Estimate_Matrix_Profit(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option) {
            return base.Channel.Estimate_Matrix_Profit(timeRange, timeScaleCode, stockCodeList, strategyList, option);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEstimate_Matrix_Profit(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEstimate_Matrix_Profit(timeRange, timeScaleCode, stockCodeList, strategyList, option, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal[][] EndEstimate_Matrix_Profit(System.IAsyncResult result) {
            return base.Channel.EndEstimate_Matrix_Profit(result);
        }
        
        private System.IAsyncResult OnBeginEstimate_Matrix_Profit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TimeRanges timeRange = ((commonClass.AppTypes.TimeRanges)(inValues[0]));
            string timeScaleCode = ((string)(inValues[1]));
            string[] stockCodeList = ((string[])(inValues[2]));
            string[] strategyList = ((string[])(inValues[3]));
            commonClass.EstimateOptions option = ((commonClass.EstimateOptions)(inValues[4]));
            return this.BeginEstimate_Matrix_Profit(timeRange, timeScaleCode, stockCodeList, strategyList, option, callback, asyncState);
        }
        
        private object[] OnEndEstimate_Matrix_Profit(System.IAsyncResult result) {
            decimal[][] retVal = this.EndEstimate_Matrix_Profit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEstimate_Matrix_ProfitCompleted(object state) {
            if ((this.Estimate_Matrix_ProfitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Estimate_Matrix_ProfitCompleted(this, new Estimate_Matrix_ProfitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Estimate_Matrix_ProfitAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option) {
            this.Estimate_Matrix_ProfitAsync(timeRange, timeScaleCode, stockCodeList, strategyList, option, null);
        }
        
        public void Estimate_Matrix_ProfitAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option, object userState) {
            if ((this.onBeginEstimate_Matrix_ProfitDelegate == null)) {
                this.onBeginEstimate_Matrix_ProfitDelegate = new BeginOperationDelegate(this.OnBeginEstimate_Matrix_Profit);
            }
            if ((this.onEndEstimate_Matrix_ProfitDelegate == null)) {
                this.onEndEstimate_Matrix_ProfitDelegate = new EndOperationDelegate(this.OnEndEstimate_Matrix_Profit);
            }
            if ((this.onEstimate_Matrix_ProfitCompletedDelegate == null)) {
                this.onEstimate_Matrix_ProfitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEstimate_Matrix_ProfitCompleted);
            }
            base.InvokeAsync(this.onBeginEstimate_Matrix_ProfitDelegate, new object[] {
                        timeRange,
                        timeScaleCode,
                        stockCodeList,
                        strategyList,
                        option}, this.onEndEstimate_Matrix_ProfitDelegate, this.onEstimate_Matrix_ProfitCompletedDelegate, userState);
        }
        
        public double[][] Estimate_Matrix_LastBizWeight(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList) {
            return base.Channel.Estimate_Matrix_LastBizWeight(timeRange, timeScaleCode, stockCodeList, strategyList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEstimate_Matrix_LastBizWeight(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEstimate_Matrix_LastBizWeight(timeRange, timeScaleCode, stockCodeList, strategyList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double[][] EndEstimate_Matrix_LastBizWeight(System.IAsyncResult result) {
            return base.Channel.EndEstimate_Matrix_LastBizWeight(result);
        }
        
        private System.IAsyncResult OnBeginEstimate_Matrix_LastBizWeight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TimeRanges timeRange = ((commonClass.AppTypes.TimeRanges)(inValues[0]));
            string timeScaleCode = ((string)(inValues[1]));
            string[] stockCodeList = ((string[])(inValues[2]));
            string[] strategyList = ((string[])(inValues[3]));
            return this.BeginEstimate_Matrix_LastBizWeight(timeRange, timeScaleCode, stockCodeList, strategyList, callback, asyncState);
        }
        
        private object[] OnEndEstimate_Matrix_LastBizWeight(System.IAsyncResult result) {
            double[][] retVal = this.EndEstimate_Matrix_LastBizWeight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEstimate_Matrix_LastBizWeightCompleted(object state) {
            if ((this.Estimate_Matrix_LastBizWeightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Estimate_Matrix_LastBizWeightCompleted(this, new Estimate_Matrix_LastBizWeightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Estimate_Matrix_LastBizWeightAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList) {
            this.Estimate_Matrix_LastBizWeightAsync(timeRange, timeScaleCode, stockCodeList, strategyList, null);
        }
        
        public void Estimate_Matrix_LastBizWeightAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, object userState) {
            if ((this.onBeginEstimate_Matrix_LastBizWeightDelegate == null)) {
                this.onBeginEstimate_Matrix_LastBizWeightDelegate = new BeginOperationDelegate(this.OnBeginEstimate_Matrix_LastBizWeight);
            }
            if ((this.onEndEstimate_Matrix_LastBizWeightDelegate == null)) {
                this.onEndEstimate_Matrix_LastBizWeightDelegate = new EndOperationDelegate(this.OnEndEstimate_Matrix_LastBizWeight);
            }
            if ((this.onEstimate_Matrix_LastBizWeightCompletedDelegate == null)) {
                this.onEstimate_Matrix_LastBizWeightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEstimate_Matrix_LastBizWeightCompleted);
            }
            base.InvokeAsync(this.onBeginEstimate_Matrix_LastBizWeightDelegate, new object[] {
                        timeRange,
                        timeScaleCode,
                        stockCodeList,
                        strategyList}, this.onEndEstimate_Matrix_LastBizWeightDelegate, this.onEstimate_Matrix_LastBizWeightCompletedDelegate, userState);
        }
        
        public commonClass.TradePointInfo[] Analysis(string dataKey, string strategyCode) {
            return base.Channel.Analysis(dataKey, strategyCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAnalysis(string dataKey, string strategyCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAnalysis(dataKey, strategyCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public commonClass.TradePointInfo[] EndAnalysis(System.IAsyncResult result) {
            return base.Channel.EndAnalysis(result);
        }
        
        private System.IAsyncResult OnBeginAnalysis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dataKey = ((string)(inValues[0]));
            string strategyCode = ((string)(inValues[1]));
            return this.BeginAnalysis(dataKey, strategyCode, callback, asyncState);
        }
        
        private object[] OnEndAnalysis(System.IAsyncResult result) {
            commonClass.TradePointInfo[] retVal = this.EndAnalysis(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAnalysisCompleted(object state) {
            if ((this.AnalysisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AnalysisCompleted(this, new AnalysisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AnalysisAsync(string dataKey, string strategyCode) {
            this.AnalysisAsync(dataKey, strategyCode, null);
        }
        
        public void AnalysisAsync(string dataKey, string strategyCode, object userState) {
            if ((this.onBeginAnalysisDelegate == null)) {
                this.onBeginAnalysisDelegate = new BeginOperationDelegate(this.OnBeginAnalysis);
            }
            if ((this.onEndAnalysisDelegate == null)) {
                this.onEndAnalysisDelegate = new EndOperationDelegate(this.OnEndAnalysis);
            }
            if ((this.onAnalysisCompletedDelegate == null)) {
                this.onAnalysisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAnalysisCompleted);
            }
            base.InvokeAsync(this.onBeginAnalysisDelegate, new object[] {
                        dataKey,
                        strategyCode}, this.onEndAnalysisDelegate, this.onAnalysisCompletedDelegate, userState);
        }
        
        public data.baseDS.transactionsDataTable MakeTransaction(out string errorText, commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc) {
            return base.Channel.MakeTransaction(out errorText, type, stockCode, portfolioCode, qty, feePerc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMakeTransaction(commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeTransaction(type, stockCode, portfolioCode, qty, feePerc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.transactionsDataTable EndMakeTransaction(out string errorText, System.IAsyncResult result) {
            return base.Channel.EndMakeTransaction(out errorText, result);
        }
        
        private System.IAsyncResult OnBeginMakeTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TradeActions type = ((commonClass.AppTypes.TradeActions)(inValues[0]));
            string stockCode = ((string)(inValues[1]));
            string portfolioCode = ((string)(inValues[2]));
            int qty = ((int)(inValues[3]));
            decimal feePerc = ((decimal)(inValues[4]));
            return this.BeginMakeTransaction(type, stockCode, portfolioCode, qty, feePerc, callback, asyncState);
        }
        
        private object[] OnEndMakeTransaction(System.IAsyncResult result) {
            string errorText = this.GetDefaultValueForInitialization<string>();
            data.baseDS.transactionsDataTable retVal = this.EndMakeTransaction(out errorText, result);
            return new object[] {
                    errorText,
                    retVal};
        }
        
        private void OnMakeTransactionCompleted(object state) {
            if ((this.MakeTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeTransactionCompleted(this, new MakeTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeTransactionAsync(commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc) {
            this.MakeTransactionAsync(type, stockCode, portfolioCode, qty, feePerc, null);
        }
        
        public void MakeTransactionAsync(commonClass.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc, object userState) {
            if ((this.onBeginMakeTransactionDelegate == null)) {
                this.onBeginMakeTransactionDelegate = new BeginOperationDelegate(this.OnBeginMakeTransaction);
            }
            if ((this.onEndMakeTransactionDelegate == null)) {
                this.onEndMakeTransactionDelegate = new EndOperationDelegate(this.OnEndMakeTransaction);
            }
            if ((this.onMakeTransactionCompletedDelegate == null)) {
                this.onMakeTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginMakeTransactionDelegate, new object[] {
                        type,
                        stockCode,
                        portfolioCode,
                        qty,
                        feePerc}, this.onEndMakeTransactionDelegate, this.onMakeTransactionCompletedDelegate, userState);
        }
        
        public commonClass.TradePointInfo[] GetTradePointWithEstimationDetail(out data.tmpDS.tradeEstimateDataTable toTbl, commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options) {
            return base.Channel.GetTradePointWithEstimationDetail(out toTbl, timeRange, timeScaleCode, stockCode, strategyCode, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTradePointWithEstimationDetail(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTradePointWithEstimationDetail(timeRange, timeScaleCode, stockCode, strategyCode, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public commonClass.TradePointInfo[] EndGetTradePointWithEstimationDetail(out data.tmpDS.tradeEstimateDataTable toTbl, System.IAsyncResult result) {
            return base.Channel.EndGetTradePointWithEstimationDetail(out toTbl, result);
        }
        
        private System.IAsyncResult OnBeginGetTradePointWithEstimationDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.TimeRanges timeRange = ((commonClass.AppTypes.TimeRanges)(inValues[0]));
            string timeScaleCode = ((string)(inValues[1]));
            string stockCode = ((string)(inValues[2]));
            string strategyCode = ((string)(inValues[3]));
            commonClass.EstimateOptions options = ((commonClass.EstimateOptions)(inValues[4]));
            return this.BeginGetTradePointWithEstimationDetail(timeRange, timeScaleCode, stockCode, strategyCode, options, callback, asyncState);
        }
        
        private object[] OnEndGetTradePointWithEstimationDetail(System.IAsyncResult result) {
            data.tmpDS.tradeEstimateDataTable toTbl = this.GetDefaultValueForInitialization<data.tmpDS.tradeEstimateDataTable>();
            commonClass.TradePointInfo[] retVal = this.EndGetTradePointWithEstimationDetail(out toTbl, result);
            return new object[] {
                    toTbl,
                    retVal};
        }
        
        private void OnGetTradePointWithEstimationDetailCompleted(object state) {
            if ((this.GetTradePointWithEstimationDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTradePointWithEstimationDetailCompleted(this, new GetTradePointWithEstimationDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTradePointWithEstimationDetailAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options) {
            this.GetTradePointWithEstimationDetailAsync(timeRange, timeScaleCode, stockCode, strategyCode, options, null);
        }
        
        public void GetTradePointWithEstimationDetailAsync(commonClass.AppTypes.TimeRanges timeRange, string timeScaleCode, string stockCode, string strategyCode, commonClass.EstimateOptions options, object userState) {
            if ((this.onBeginGetTradePointWithEstimationDetailDelegate == null)) {
                this.onBeginGetTradePointWithEstimationDetailDelegate = new BeginOperationDelegate(this.OnBeginGetTradePointWithEstimationDetail);
            }
            if ((this.onEndGetTradePointWithEstimationDetailDelegate == null)) {
                this.onEndGetTradePointWithEstimationDetailDelegate = new EndOperationDelegate(this.OnEndGetTradePointWithEstimationDetail);
            }
            if ((this.onGetTradePointWithEstimationDetailCompletedDelegate == null)) {
                this.onGetTradePointWithEstimationDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTradePointWithEstimationDetailCompleted);
            }
            base.InvokeAsync(this.onBeginGetTradePointWithEstimationDetailDelegate, new object[] {
                        timeRange,
                        timeScaleCode,
                        stockCode,
                        strategyCode,
                        options}, this.onEndGetTradePointWithEstimationDetailDelegate, this.onGetTradePointWithEstimationDetailCompletedDelegate, userState);
        }
        
        public string GetXml(string filePath) {
            return base.Channel.GetXml(filePath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetXml(string filePath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetXml(filePath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetXml(System.IAsyncResult result) {
            return base.Channel.EndGetXml(result);
        }
        
        private System.IAsyncResult OnBeginGetXml(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filePath = ((string)(inValues[0]));
            return this.BeginGetXml(filePath, callback, asyncState);
        }
        
        private object[] OnEndGetXml(System.IAsyncResult result) {
            string retVal = this.EndGetXml(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetXmlCompleted(object state) {
            if ((this.GetXmlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetXmlCompleted(this, new GetXmlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetXmlAsync(string filePath) {
            this.GetXmlAsync(filePath, null);
        }
        
        public void GetXmlAsync(string filePath, object userState) {
            if ((this.onBeginGetXmlDelegate == null)) {
                this.onBeginGetXmlDelegate = new BeginOperationDelegate(this.OnBeginGetXml);
            }
            if ((this.onEndGetXmlDelegate == null)) {
                this.onEndGetXmlDelegate = new EndOperationDelegate(this.OnEndGetXml);
            }
            if ((this.onGetXmlCompletedDelegate == null)) {
                this.onGetXmlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetXmlCompleted);
            }
            base.InvokeAsync(this.onBeginGetXmlDelegate, new object[] {
                        filePath}, this.onEndGetXmlDelegate, this.onGetXmlCompletedDelegate, userState);
        }
        
        public void Load_Global_Settings() {
            base.Channel.Load_Global_Settings();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoad_Global_Settings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoad_Global_Settings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoad_Global_Settings(System.IAsyncResult result) {
            base.Channel.EndLoad_Global_Settings(result);
        }
        
        private System.IAsyncResult OnBeginLoad_Global_Settings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLoad_Global_Settings(callback, asyncState);
        }
        
        private object[] OnEndLoad_Global_Settings(System.IAsyncResult result) {
            this.EndLoad_Global_Settings(result);
            return null;
        }
        
        private void OnLoad_Global_SettingsCompleted(object state) {
            if ((this.Load_Global_SettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Load_Global_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Load_Global_SettingsAsync() {
            this.Load_Global_SettingsAsync(null);
        }
        
        public void Load_Global_SettingsAsync(object userState) {
            if ((this.onBeginLoad_Global_SettingsDelegate == null)) {
                this.onBeginLoad_Global_SettingsDelegate = new BeginOperationDelegate(this.OnBeginLoad_Global_Settings);
            }
            if ((this.onEndLoad_Global_SettingsDelegate == null)) {
                this.onEndLoad_Global_SettingsDelegate = new EndOperationDelegate(this.OnEndLoad_Global_Settings);
            }
            if ((this.onLoad_Global_SettingsCompletedDelegate == null)) {
                this.onLoad_Global_SettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoad_Global_SettingsCompleted);
            }
            base.InvokeAsync(this.onBeginLoad_Global_SettingsDelegate, null, this.onEndLoad_Global_SettingsDelegate, this.onLoad_Global_SettingsCompletedDelegate, userState);
        }
        
        public void Save_Global_Settings() {
            base.Channel.Save_Global_Settings();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSave_Global_Settings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSave_Global_Settings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSave_Global_Settings(System.IAsyncResult result) {
            base.Channel.EndSave_Global_Settings(result);
        }
        
        private System.IAsyncResult OnBeginSave_Global_Settings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSave_Global_Settings(callback, asyncState);
        }
        
        private object[] OnEndSave_Global_Settings(System.IAsyncResult result) {
            this.EndSave_Global_Settings(result);
            return null;
        }
        
        private void OnSave_Global_SettingsCompleted(object state) {
            if ((this.Save_Global_SettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Save_Global_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Save_Global_SettingsAsync() {
            this.Save_Global_SettingsAsync(null);
        }
        
        public void Save_Global_SettingsAsync(object userState) {
            if ((this.onBeginSave_Global_SettingsDelegate == null)) {
                this.onBeginSave_Global_SettingsDelegate = new BeginOperationDelegate(this.OnBeginSave_Global_Settings);
            }
            if ((this.onEndSave_Global_SettingsDelegate == null)) {
                this.onEndSave_Global_SettingsDelegate = new EndOperationDelegate(this.OnEndSave_Global_Settings);
            }
            if ((this.onSave_Global_SettingsCompletedDelegate == null)) {
                this.onSave_Global_SettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSave_Global_SettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSave_Global_SettingsDelegate, null, this.onEndSave_Global_SettingsDelegate, this.onSave_Global_SettingsCompletedDelegate, userState);
        }
        
        public System.Data.DataTable Test(string sql) {
            return base.Channel.Test(sql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTest(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTest(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndTest(System.IAsyncResult result) {
            return base.Channel.EndTest(result);
        }
        
        private System.IAsyncResult OnBeginTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return this.BeginTest(sql, callback, asyncState);
        }
        
        private object[] OnEndTest(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestCompleted(object state) {
            if ((this.TestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestCompleted(this, new TestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestAsync(string sql) {
            this.TestAsync(sql, null);
        }
        
        public void TestAsync(string sql, object userState) {
            if ((this.onBeginTestDelegate == null)) {
                this.onBeginTestDelegate = new BeginOperationDelegate(this.OnBeginTest);
            }
            if ((this.onEndTestDelegate == null)) {
                this.onEndTestDelegate = new EndOperationDelegate(this.OnEndTest);
            }
            if ((this.onTestCompletedDelegate == null)) {
                this.onTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCompleted);
            }
            base.InvokeAsync(this.onBeginTestDelegate, new object[] {
                        sql}, this.onEndTestDelegate, this.onTestCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSectorByIndustry(string industryCode) {
            return base.Channel.GetBizSubSectorByIndustry(industryCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSectorByIndustry(string industryCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSectorByIndustry(industryCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSectorByIndustry(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSectorByIndustry(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSectorByIndustry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string industryCode = ((string)(inValues[0]));
            return this.BeginGetBizSubSectorByIndustry(industryCode, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSectorByIndustry(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSectorByIndustry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSectorByIndustryCompleted(object state) {
            if ((this.GetBizSubSectorByIndustryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSectorByIndustryCompleted(this, new GetBizSubSectorByIndustryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSectorByIndustryAsync(string industryCode) {
            this.GetBizSubSectorByIndustryAsync(industryCode, null);
        }
        
        public void GetBizSubSectorByIndustryAsync(string industryCode, object userState) {
            if ((this.onBeginGetBizSubSectorByIndustryDelegate == null)) {
                this.onBeginGetBizSubSectorByIndustryDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSectorByIndustry);
            }
            if ((this.onEndGetBizSubSectorByIndustryDelegate == null)) {
                this.onEndGetBizSubSectorByIndustryDelegate = new EndOperationDelegate(this.OnEndGetBizSubSectorByIndustry);
            }
            if ((this.onGetBizSubSectorByIndustryCompletedDelegate == null)) {
                this.onGetBizSubSectorByIndustryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSectorByIndustryCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSectorByIndustryDelegate, new object[] {
                        industryCode}, this.onEndGetBizSubSectorByIndustryDelegate, this.onGetBizSubSectorByIndustryCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSector(string superSectorCode) {
            return base.Channel.GetBizSubSectorBySuperSector(superSectorCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSectorBySuperSector(string superSectorCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSectorBySuperSector(superSectorCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSectorBySuperSector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSectorBySuperSector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSectorBySuperSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string superSectorCode = ((string)(inValues[0]));
            return this.BeginGetBizSubSectorBySuperSector(superSectorCode, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSectorBySuperSector(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSectorBySuperSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSectorBySuperSectorCompleted(object state) {
            if ((this.GetBizSubSectorBySuperSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSectorBySuperSectorCompleted(this, new GetBizSubSectorBySuperSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSectorBySuperSectorAsync(string superSectorCode) {
            this.GetBizSubSectorBySuperSectorAsync(superSectorCode, null);
        }
        
        public void GetBizSubSectorBySuperSectorAsync(string superSectorCode, object userState) {
            if ((this.onBeginGetBizSubSectorBySuperSectorDelegate == null)) {
                this.onBeginGetBizSubSectorBySuperSectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSectorBySuperSector);
            }
            if ((this.onEndGetBizSubSectorBySuperSectorDelegate == null)) {
                this.onEndGetBizSubSectorBySuperSectorDelegate = new EndOperationDelegate(this.OnEndGetBizSubSectorBySuperSector);
            }
            if ((this.onGetBizSubSectorBySuperSectorCompletedDelegate == null)) {
                this.onGetBizSubSectorBySuperSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSectorBySuperSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSectorBySuperSectorDelegate, new object[] {
                        superSectorCode}, this.onEndGetBizSubSectorBySuperSectorDelegate, this.onGetBizSubSectorBySuperSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSectorBySector(string sectorCode) {
            return base.Channel.GetBizSubSectorBySector(sectorCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSectorBySector(string sectorCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSectorBySector(sectorCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSectorBySector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSectorBySector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSectorBySector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sectorCode = ((string)(inValues[0]));
            return this.BeginGetBizSubSectorBySector(sectorCode, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSectorBySector(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSectorBySector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSectorBySectorCompleted(object state) {
            if ((this.GetBizSubSectorBySectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSectorBySectorCompleted(this, new GetBizSubSectorBySectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSectorBySectorAsync(string sectorCode) {
            this.GetBizSubSectorBySectorAsync(sectorCode, null);
        }
        
        public void GetBizSubSectorBySectorAsync(string sectorCode, object userState) {
            if ((this.onBeginGetBizSubSectorBySectorDelegate == null)) {
                this.onBeginGetBizSubSectorBySectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSectorBySector);
            }
            if ((this.onEndGetBizSubSectorBySectorDelegate == null)) {
                this.onEndGetBizSubSectorBySectorDelegate = new EndOperationDelegate(this.OnEndGetBizSubSectorBySector);
            }
            if ((this.onGetBizSubSectorBySectorCompletedDelegate == null)) {
                this.onGetBizSubSectorBySectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSectorBySectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSectorBySectorDelegate, new object[] {
                        sectorCode}, this.onEndGetBizSubSectorBySectorDelegate, this.onGetBizSubSectorBySectorCompletedDelegate, userState);
        }
        
        public data.baseDS.countryDataTable GetCountry() {
            return base.Channel.GetCountry();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCountry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.countryDataTable EndGetCountry(System.IAsyncResult result) {
            return base.Channel.EndGetCountry(result);
        }
        
        private System.IAsyncResult OnBeginGetCountry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCountry(callback, asyncState);
        }
        
        private object[] OnEndGetCountry(System.IAsyncResult result) {
            data.baseDS.countryDataTable retVal = this.EndGetCountry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountryCompleted(object state) {
            if ((this.GetCountryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountryCompleted(this, new GetCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountryAsync() {
            this.GetCountryAsync(null);
        }
        
        public void GetCountryAsync(object userState) {
            if ((this.onBeginGetCountryDelegate == null)) {
                this.onBeginGetCountryDelegate = new BeginOperationDelegate(this.OnBeginGetCountry);
            }
            if ((this.onEndGetCountryDelegate == null)) {
                this.onEndGetCountryDelegate = new EndOperationDelegate(this.OnEndGetCountry);
            }
            if ((this.onGetCountryCompletedDelegate == null)) {
                this.onGetCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountryDelegate, null, this.onEndGetCountryDelegate, this.onGetCountryCompletedDelegate, userState);
        }
        
        public data.baseDS.currencyDataTable GetCurrency() {
            return base.Channel.GetCurrency();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrency(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrency(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.currencyDataTable EndGetCurrency(System.IAsyncResult result) {
            return base.Channel.EndGetCurrency(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrency(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCurrency(callback, asyncState);
        }
        
        private object[] OnEndGetCurrency(System.IAsyncResult result) {
            data.baseDS.currencyDataTable retVal = this.EndGetCurrency(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrencyCompleted(object state) {
            if ((this.GetCurrencyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrencyCompleted(this, new GetCurrencyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrencyAsync() {
            this.GetCurrencyAsync(null);
        }
        
        public void GetCurrencyAsync(object userState) {
            if ((this.onBeginGetCurrencyDelegate == null)) {
                this.onBeginGetCurrencyDelegate = new BeginOperationDelegate(this.OnBeginGetCurrency);
            }
            if ((this.onEndGetCurrencyDelegate == null)) {
                this.onEndGetCurrencyDelegate = new EndOperationDelegate(this.OnEndGetCurrency);
            }
            if ((this.onGetCurrencyCompletedDelegate == null)) {
                this.onGetCurrencyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrencyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrencyDelegate, null, this.onEndGetCurrencyDelegate, this.onGetCurrencyCompletedDelegate, userState);
        }
        
        public data.baseDS.investorCatDataTable GetInvestorCat() {
            return base.Channel.GetInvestorCat();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInvestorCat(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvestorCat(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.investorCatDataTable EndGetInvestorCat(System.IAsyncResult result) {
            return base.Channel.EndGetInvestorCat(result);
        }
        
        private System.IAsyncResult OnBeginGetInvestorCat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetInvestorCat(callback, asyncState);
        }
        
        private object[] OnEndGetInvestorCat(System.IAsyncResult result) {
            data.baseDS.investorCatDataTable retVal = this.EndGetInvestorCat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvestorCatCompleted(object state) {
            if ((this.GetInvestorCatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvestorCatCompleted(this, new GetInvestorCatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvestorCatAsync() {
            this.GetInvestorCatAsync(null);
        }
        
        public void GetInvestorCatAsync(object userState) {
            if ((this.onBeginGetInvestorCatDelegate == null)) {
                this.onBeginGetInvestorCatDelegate = new BeginOperationDelegate(this.OnBeginGetInvestorCat);
            }
            if ((this.onEndGetInvestorCatDelegate == null)) {
                this.onEndGetInvestorCatDelegate = new EndOperationDelegate(this.OnEndGetInvestorCat);
            }
            if ((this.onGetInvestorCatCompletedDelegate == null)) {
                this.onGetInvestorCatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvestorCatCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvestorCatDelegate, null, this.onEndGetInvestorCatDelegate, this.onGetInvestorCatCompletedDelegate, userState);
        }
        
        public data.baseDS.sysCodeDataTable GetSysCode(string catCode) {
            return base.Channel.GetSysCode(catCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSysCode(string catCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSysCode(catCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.sysCodeDataTable EndGetSysCode(System.IAsyncResult result) {
            return base.Channel.EndGetSysCode(result);
        }
        
        private System.IAsyncResult OnBeginGetSysCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string catCode = ((string)(inValues[0]));
            return this.BeginGetSysCode(catCode, callback, asyncState);
        }
        
        private object[] OnEndGetSysCode(System.IAsyncResult result) {
            data.baseDS.sysCodeDataTable retVal = this.EndGetSysCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSysCodeCompleted(object state) {
            if ((this.GetSysCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSysCodeCompleted(this, new GetSysCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSysCodeAsync(string catCode) {
            this.GetSysCodeAsync(catCode, null);
        }
        
        public void GetSysCodeAsync(string catCode, object userState) {
            if ((this.onBeginGetSysCodeDelegate == null)) {
                this.onBeginGetSysCodeDelegate = new BeginOperationDelegate(this.OnBeginGetSysCode);
            }
            if ((this.onEndGetSysCodeDelegate == null)) {
                this.onEndGetSysCodeDelegate = new EndOperationDelegate(this.OnEndGetSysCode);
            }
            if ((this.onGetSysCodeCompletedDelegate == null)) {
                this.onGetSysCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSysCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSysCodeDelegate, new object[] {
                        catCode}, this.onEndGetSysCodeDelegate, this.onGetSysCodeCompletedDelegate, userState);
        }
        
        public data.baseDS.sysCodeCatDataTable GetSysCodeCat() {
            return base.Channel.GetSysCodeCat();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSysCodeCat(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSysCodeCat(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.sysCodeCatDataTable EndGetSysCodeCat(System.IAsyncResult result) {
            return base.Channel.EndGetSysCodeCat(result);
        }
        
        private System.IAsyncResult OnBeginGetSysCodeCat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSysCodeCat(callback, asyncState);
        }
        
        private object[] OnEndGetSysCodeCat(System.IAsyncResult result) {
            data.baseDS.sysCodeCatDataTable retVal = this.EndGetSysCodeCat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSysCodeCatCompleted(object state) {
            if ((this.GetSysCodeCatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSysCodeCatCompleted(this, new GetSysCodeCatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSysCodeCatAsync() {
            this.GetSysCodeCatAsync(null);
        }
        
        public void GetSysCodeCatAsync(object userState) {
            if ((this.onBeginGetSysCodeCatDelegate == null)) {
                this.onBeginGetSysCodeCatDelegate = new BeginOperationDelegate(this.OnBeginGetSysCodeCat);
            }
            if ((this.onEndGetSysCodeCatDelegate == null)) {
                this.onEndGetSysCodeCatDelegate = new EndOperationDelegate(this.OnEndGetSysCodeCat);
            }
            if ((this.onGetSysCodeCatCompletedDelegate == null)) {
                this.onGetSysCodeCatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSysCodeCatCompleted);
            }
            base.InvokeAsync(this.onBeginGetSysCodeCatDelegate, null, this.onEndGetSysCodeCatDelegate, this.onGetSysCodeCatCompletedDelegate, userState);
        }
        
        public data.baseDS.investorDataTable GetInvestor_ByCode(string code) {
            return base.Channel.GetInvestor_ByCode(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInvestor_ByCode(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvestor_ByCode(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.investorDataTable EndGetInvestor_ByCode(System.IAsyncResult result) {
            return base.Channel.EndGetInvestor_ByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetInvestor_ByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetInvestor_ByCode(code, callback, asyncState);
        }
        
        private object[] OnEndGetInvestor_ByCode(System.IAsyncResult result) {
            data.baseDS.investorDataTable retVal = this.EndGetInvestor_ByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvestor_ByCodeCompleted(object state) {
            if ((this.GetInvestor_ByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvestor_ByCodeCompleted(this, new GetInvestor_ByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvestor_ByCodeAsync(string code) {
            this.GetInvestor_ByCodeAsync(code, null);
        }
        
        public void GetInvestor_ByCodeAsync(string code, object userState) {
            if ((this.onBeginGetInvestor_ByCodeDelegate == null)) {
                this.onBeginGetInvestor_ByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetInvestor_ByCode);
            }
            if ((this.onEndGetInvestor_ByCodeDelegate == null)) {
                this.onEndGetInvestor_ByCodeDelegate = new EndOperationDelegate(this.OnEndGetInvestor_ByCode);
            }
            if ((this.onGetInvestor_ByCodeCompletedDelegate == null)) {
                this.onGetInvestor_ByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvestor_ByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvestor_ByCodeDelegate, new object[] {
                        code}, this.onEndGetInvestor_ByCodeDelegate, this.onGetInvestor_ByCodeCompletedDelegate, userState);
        }
        
        public data.baseDS.investorDataTable GetInvestor_BySQL(string sql) {
            return base.Channel.GetInvestor_BySQL(sql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInvestor_BySQL(string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvestor_BySQL(sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.investorDataTable EndGetInvestor_BySQL(System.IAsyncResult result) {
            return base.Channel.EndGetInvestor_BySQL(result);
        }
        
        private System.IAsyncResult OnBeginGetInvestor_BySQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sql = ((string)(inValues[0]));
            return this.BeginGetInvestor_BySQL(sql, callback, asyncState);
        }
        
        private object[] OnEndGetInvestor_BySQL(System.IAsyncResult result) {
            data.baseDS.investorDataTable retVal = this.EndGetInvestor_BySQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvestor_BySQLCompleted(object state) {
            if ((this.GetInvestor_BySQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvestor_BySQLCompleted(this, new GetInvestor_BySQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvestor_BySQLAsync(string sql) {
            this.GetInvestor_BySQLAsync(sql, null);
        }
        
        public void GetInvestor_BySQLAsync(string sql, object userState) {
            if ((this.onBeginGetInvestor_BySQLDelegate == null)) {
                this.onBeginGetInvestor_BySQLDelegate = new BeginOperationDelegate(this.OnBeginGetInvestor_BySQL);
            }
            if ((this.onEndGetInvestor_BySQLDelegate == null)) {
                this.onEndGetInvestor_BySQLDelegate = new EndOperationDelegate(this.OnEndGetInvestor_BySQL);
            }
            if ((this.onGetInvestor_BySQLCompletedDelegate == null)) {
                this.onGetInvestor_BySQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvestor_BySQLCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvestor_BySQLDelegate, new object[] {
                        sql}, this.onEndGetInvestor_BySQLDelegate, this.onGetInvestor_BySQLCompletedDelegate, userState);
        }
        
        public data.tmpDS.stockCodeDataTable GetStock_InPortfolio(string[] portfolios) {
            return base.Channel.GetStock_InPortfolio(portfolios);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStock_InPortfolio(string[] portfolios, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStock_InPortfolio(portfolios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.tmpDS.stockCodeDataTable EndGetStock_InPortfolio(System.IAsyncResult result) {
            return base.Channel.EndGetStock_InPortfolio(result);
        }
        
        private System.IAsyncResult OnBeginGetStock_InPortfolio(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] portfolios = ((string[])(inValues[0]));
            return this.BeginGetStock_InPortfolio(portfolios, callback, asyncState);
        }
        
        private object[] OnEndGetStock_InPortfolio(System.IAsyncResult result) {
            data.tmpDS.stockCodeDataTable retVal = this.EndGetStock_InPortfolio(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStock_InPortfolioCompleted(object state) {
            if ((this.GetStock_InPortfolioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStock_InPortfolioCompleted(this, new GetStock_InPortfolioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStock_InPortfolioAsync(string[] portfolios) {
            this.GetStock_InPortfolioAsync(portfolios, null);
        }
        
        public void GetStock_InPortfolioAsync(string[] portfolios, object userState) {
            if ((this.onBeginGetStock_InPortfolioDelegate == null)) {
                this.onBeginGetStock_InPortfolioDelegate = new BeginOperationDelegate(this.OnBeginGetStock_InPortfolio);
            }
            if ((this.onEndGetStock_InPortfolioDelegate == null)) {
                this.onEndGetStock_InPortfolioDelegate = new EndOperationDelegate(this.OnEndGetStock_InPortfolio);
            }
            if ((this.onGetStock_InPortfolioCompletedDelegate == null)) {
                this.onGetStock_InPortfolioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStock_InPortfolioCompleted);
            }
            base.InvokeAsync(this.onBeginGetStock_InPortfolioDelegate, new object[] {
                        portfolios}, this.onEndGetStock_InPortfolioDelegate, this.onGetStock_InPortfolioCompletedDelegate, userState);
        }
        
        public data.tmpDS.stockCodeDataTable GetStock_ByBizSector(string[] bizSector) {
            return base.Channel.GetStock_ByBizSector(bizSector);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStock_ByBizSector(string[] bizSector, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStock_ByBizSector(bizSector, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.tmpDS.stockCodeDataTable EndGetStock_ByBizSector(System.IAsyncResult result) {
            return base.Channel.EndGetStock_ByBizSector(result);
        }
        
        private System.IAsyncResult OnBeginGetStock_ByBizSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] bizSector = ((string[])(inValues[0]));
            return this.BeginGetStock_ByBizSector(bizSector, callback, asyncState);
        }
        
        private object[] OnEndGetStock_ByBizSector(System.IAsyncResult result) {
            data.tmpDS.stockCodeDataTable retVal = this.EndGetStock_ByBizSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStock_ByBizSectorCompleted(object state) {
            if ((this.GetStock_ByBizSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStock_ByBizSectorCompleted(this, new GetStock_ByBizSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStock_ByBizSectorAsync(string[] bizSector) {
            this.GetStock_ByBizSectorAsync(bizSector, null);
        }
        
        public void GetStock_ByBizSectorAsync(string[] bizSector, object userState) {
            if ((this.onBeginGetStock_ByBizSectorDelegate == null)) {
                this.onBeginGetStock_ByBizSectorDelegate = new BeginOperationDelegate(this.OnBeginGetStock_ByBizSector);
            }
            if ((this.onEndGetStock_ByBizSectorDelegate == null)) {
                this.onEndGetStock_ByBizSectorDelegate = new EndOperationDelegate(this.OnEndGetStock_ByBizSector);
            }
            if ((this.onGetStock_ByBizSectorCompletedDelegate == null)) {
                this.onGetStock_ByBizSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStock_ByBizSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetStock_ByBizSectorDelegate, new object[] {
                        bizSector}, this.onEndGetStock_ByBizSectorDelegate, this.onGetStock_ByBizSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustry(string code) {
            return base.Channel.GetBizSubSector_ByIndustry(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSector_ByIndustry(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSector_ByIndustry(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSector_ByIndustry(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSector_ByIndustry(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSector_ByIndustry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetBizSubSector_ByIndustry(code, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSector_ByIndustry(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSector_ByIndustry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSector_ByIndustryCompleted(object state) {
            if ((this.GetBizSubSector_ByIndustryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSector_ByIndustryCompleted(this, new GetBizSubSector_ByIndustryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSector_ByIndustryAsync(string code) {
            this.GetBizSubSector_ByIndustryAsync(code, null);
        }
        
        public void GetBizSubSector_ByIndustryAsync(string code, object userState) {
            if ((this.onBeginGetBizSubSector_ByIndustryDelegate == null)) {
                this.onBeginGetBizSubSector_ByIndustryDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSector_ByIndustry);
            }
            if ((this.onEndGetBizSubSector_ByIndustryDelegate == null)) {
                this.onEndGetBizSubSector_ByIndustryDelegate = new EndOperationDelegate(this.OnEndGetBizSubSector_ByIndustry);
            }
            if ((this.onGetBizSubSector_ByIndustryCompletedDelegate == null)) {
                this.onGetBizSubSector_ByIndustryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSector_ByIndustryCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSector_ByIndustryDelegate, new object[] {
                        code}, this.onEndGetBizSubSector_ByIndustryDelegate, this.onGetBizSubSector_ByIndustryCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSector(string code) {
            return base.Channel.GetBizSubSector_BySuperSector(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSector_BySuperSector(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSector_BySuperSector(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSector_BySuperSector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSector_BySuperSector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSector_BySuperSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetBizSubSector_BySuperSector(code, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSector_BySuperSector(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSector_BySuperSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSector_BySuperSectorCompleted(object state) {
            if ((this.GetBizSubSector_BySuperSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSector_BySuperSectorCompleted(this, new GetBizSubSector_BySuperSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSector_BySuperSectorAsync(string code) {
            this.GetBizSubSector_BySuperSectorAsync(code, null);
        }
        
        public void GetBizSubSector_BySuperSectorAsync(string code, object userState) {
            if ((this.onBeginGetBizSubSector_BySuperSectorDelegate == null)) {
                this.onBeginGetBizSubSector_BySuperSectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSector_BySuperSector);
            }
            if ((this.onEndGetBizSubSector_BySuperSectorDelegate == null)) {
                this.onEndGetBizSubSector_BySuperSectorDelegate = new EndOperationDelegate(this.OnEndGetBizSubSector_BySuperSector);
            }
            if ((this.onGetBizSubSector_BySuperSectorCompletedDelegate == null)) {
                this.onGetBizSubSector_BySuperSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSector_BySuperSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSector_BySuperSectorDelegate, new object[] {
                        code}, this.onEndGetBizSubSector_BySuperSectorDelegate, this.onGetBizSubSector_BySuperSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSector_BySector(string code) {
            return base.Channel.GetBizSubSector_BySector(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSector_BySector(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSector_BySector(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSector_BySector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSector_BySector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSector_BySector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginGetBizSubSector_BySector(code, callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSector_BySector(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSector_BySector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSector_BySectorCompleted(object state) {
            if ((this.GetBizSubSector_BySectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSector_BySectorCompleted(this, new GetBizSubSector_BySectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSector_BySectorAsync(string code) {
            this.GetBizSubSector_BySectorAsync(code, null);
        }
        
        public void GetBizSubSector_BySectorAsync(string code, object userState) {
            if ((this.onBeginGetBizSubSector_BySectorDelegate == null)) {
                this.onBeginGetBizSubSector_BySectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSector_BySector);
            }
            if ((this.onEndGetBizSubSector_BySectorDelegate == null)) {
                this.onEndGetBizSubSector_BySectorDelegate = new EndOperationDelegate(this.OnEndGetBizSubSector_BySector);
            }
            if ((this.onGetBizSubSector_BySectorCompletedDelegate == null)) {
                this.onGetBizSubSector_BySectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSector_BySectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSector_BySectorDelegate, new object[] {
                        code}, this.onEndGetBizSubSector_BySectorDelegate, this.onGetBizSubSector_BySectorCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDataTable GetPortfolio_ByInvestorAndType(string investorCode, commonClass.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByInvestorAndType(investorCode, type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolio_ByInvestorAndType(string investorCode, commonClass.AppTypes.PortfolioTypes type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolio_ByInvestorAndType(investorCode, type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDataTable EndGetPortfolio_ByInvestorAndType(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolio_ByInvestorAndType(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolio_ByInvestorAndType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string investorCode = ((string)(inValues[0]));
            commonClass.AppTypes.PortfolioTypes type = ((commonClass.AppTypes.PortfolioTypes)(inValues[1]));
            return this.BeginGetPortfolio_ByInvestorAndType(investorCode, type, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolio_ByInvestorAndType(System.IAsyncResult result) {
            data.baseDS.portfolioDataTable retVal = this.EndGetPortfolio_ByInvestorAndType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolio_ByInvestorAndTypeCompleted(object state) {
            if ((this.GetPortfolio_ByInvestorAndTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolio_ByInvestorAndTypeCompleted(this, new GetPortfolio_ByInvestorAndTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolio_ByInvestorAndTypeAsync(string investorCode, commonClass.AppTypes.PortfolioTypes type) {
            this.GetPortfolio_ByInvestorAndTypeAsync(investorCode, type, null);
        }
        
        public void GetPortfolio_ByInvestorAndTypeAsync(string investorCode, commonClass.AppTypes.PortfolioTypes type, object userState) {
            if ((this.onBeginGetPortfolio_ByInvestorAndTypeDelegate == null)) {
                this.onBeginGetPortfolio_ByInvestorAndTypeDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolio_ByInvestorAndType);
            }
            if ((this.onEndGetPortfolio_ByInvestorAndTypeDelegate == null)) {
                this.onEndGetPortfolio_ByInvestorAndTypeDelegate = new EndOperationDelegate(this.OnEndGetPortfolio_ByInvestorAndType);
            }
            if ((this.onGetPortfolio_ByInvestorAndTypeCompletedDelegate == null)) {
                this.onGetPortfolio_ByInvestorAndTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolio_ByInvestorAndTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolio_ByInvestorAndTypeDelegate, new object[] {
                        investorCode,
                        type}, this.onEndGetPortfolio_ByInvestorAndTypeDelegate, this.onGetPortfolio_ByInvestorAndTypeCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDataTable GetPortfolio_ByType(commonClass.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByType(type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolio_ByType(commonClass.AppTypes.PortfolioTypes type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolio_ByType(type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDataTable EndGetPortfolio_ByType(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolio_ByType(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolio_ByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.PortfolioTypes type = ((commonClass.AppTypes.PortfolioTypes)(inValues[0]));
            return this.BeginGetPortfolio_ByType(type, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolio_ByType(System.IAsyncResult result) {
            data.baseDS.portfolioDataTable retVal = this.EndGetPortfolio_ByType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolio_ByTypeCompleted(object state) {
            if ((this.GetPortfolio_ByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolio_ByTypeCompleted(this, new GetPortfolio_ByTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolio_ByTypeAsync(commonClass.AppTypes.PortfolioTypes type) {
            this.GetPortfolio_ByTypeAsync(type, null);
        }
        
        public void GetPortfolio_ByTypeAsync(commonClass.AppTypes.PortfolioTypes type, object userState) {
            if ((this.onBeginGetPortfolio_ByTypeDelegate == null)) {
                this.onBeginGetPortfolio_ByTypeDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolio_ByType);
            }
            if ((this.onEndGetPortfolio_ByTypeDelegate == null)) {
                this.onEndGetPortfolio_ByTypeDelegate = new EndOperationDelegate(this.OnEndGetPortfolio_ByType);
            }
            if ((this.onGetPortfolio_ByTypeCompletedDelegate == null)) {
                this.onGetPortfolio_ByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolio_ByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolio_ByTypeDelegate, new object[] {
                        type}, this.onEndGetPortfolio_ByTypeDelegate, this.onGetPortfolio_ByTypeCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDataTable GetPortfolio_ByCode(string portfolioCode) {
            return base.Channel.GetPortfolio_ByCode(portfolioCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolio_ByCode(string portfolioCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolio_ByCode(portfolioCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDataTable EndGetPortfolio_ByCode(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolio_ByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolio_ByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string portfolioCode = ((string)(inValues[0]));
            return this.BeginGetPortfolio_ByCode(portfolioCode, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolio_ByCode(System.IAsyncResult result) {
            data.baseDS.portfolioDataTable retVal = this.EndGetPortfolio_ByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolio_ByCodeCompleted(object state) {
            if ((this.GetPortfolio_ByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolio_ByCodeCompleted(this, new GetPortfolio_ByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolio_ByCodeAsync(string portfolioCode) {
            this.GetPortfolio_ByCodeAsync(portfolioCode, null);
        }
        
        public void GetPortfolio_ByCodeAsync(string portfolioCode, object userState) {
            if ((this.onBeginGetPortfolio_ByCodeDelegate == null)) {
                this.onBeginGetPortfolio_ByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolio_ByCode);
            }
            if ((this.onEndGetPortfolio_ByCodeDelegate == null)) {
                this.onEndGetPortfolio_ByCodeDelegate = new EndOperationDelegate(this.OnEndGetPortfolio_ByCode);
            }
            if ((this.onGetPortfolio_ByCodeCompletedDelegate == null)) {
                this.onGetPortfolio_ByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolio_ByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolio_ByCodeDelegate, new object[] {
                        portfolioCode}, this.onEndGetPortfolio_ByCodeDelegate, this.onGetPortfolio_ByCodeCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDataTable GetPortfolio_ByInvestor(string investorCode) {
            return base.Channel.GetPortfolio_ByInvestor(investorCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolio_ByInvestor(string investorCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolio_ByInvestor(investorCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDataTable EndGetPortfolio_ByInvestor(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolio_ByInvestor(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolio_ByInvestor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string investorCode = ((string)(inValues[0]));
            return this.BeginGetPortfolio_ByInvestor(investorCode, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolio_ByInvestor(System.IAsyncResult result) {
            data.baseDS.portfolioDataTable retVal = this.EndGetPortfolio_ByInvestor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolio_ByInvestorCompleted(object state) {
            if ((this.GetPortfolio_ByInvestorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolio_ByInvestorCompleted(this, new GetPortfolio_ByInvestorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolio_ByInvestorAsync(string investorCode) {
            this.GetPortfolio_ByInvestorAsync(investorCode, null);
        }
        
        public void GetPortfolio_ByInvestorAsync(string investorCode, object userState) {
            if ((this.onBeginGetPortfolio_ByInvestorDelegate == null)) {
                this.onBeginGetPortfolio_ByInvestorDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolio_ByInvestor);
            }
            if ((this.onEndGetPortfolio_ByInvestorDelegate == null)) {
                this.onEndGetPortfolio_ByInvestorDelegate = new EndOperationDelegate(this.OnEndGetPortfolio_ByInvestor);
            }
            if ((this.onGetPortfolio_ByInvestorCompletedDelegate == null)) {
                this.onGetPortfolio_ByInvestorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolio_ByInvestorCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolio_ByInvestorDelegate, new object[] {
                        investorCode}, this.onEndGetPortfolio_ByInvestorDelegate, this.onGetPortfolio_ByInvestorCompletedDelegate, userState);
        }
        
        public data.baseDS.tradeAlertDataTable GetTradeAlert_BySQL(string alertSql) {
            return base.Channel.GetTradeAlert_BySQL(alertSql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTradeAlert_BySQL(string alertSql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTradeAlert_BySQL(alertSql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.tradeAlertDataTable EndGetTradeAlert_BySQL(System.IAsyncResult result) {
            return base.Channel.EndGetTradeAlert_BySQL(result);
        }
        
        private System.IAsyncResult OnBeginGetTradeAlert_BySQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string alertSql = ((string)(inValues[0]));
            return this.BeginGetTradeAlert_BySQL(alertSql, callback, asyncState);
        }
        
        private object[] OnEndGetTradeAlert_BySQL(System.IAsyncResult result) {
            data.baseDS.tradeAlertDataTable retVal = this.EndGetTradeAlert_BySQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTradeAlert_BySQLCompleted(object state) {
            if ((this.GetTradeAlert_BySQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTradeAlert_BySQLCompleted(this, new GetTradeAlert_BySQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTradeAlert_BySQLAsync(string alertSql) {
            this.GetTradeAlert_BySQLAsync(alertSql, null);
        }
        
        public void GetTradeAlert_BySQLAsync(string alertSql, object userState) {
            if ((this.onBeginGetTradeAlert_BySQLDelegate == null)) {
                this.onBeginGetTradeAlert_BySQLDelegate = new BeginOperationDelegate(this.OnBeginGetTradeAlert_BySQL);
            }
            if ((this.onEndGetTradeAlert_BySQLDelegate == null)) {
                this.onEndGetTradeAlert_BySQLDelegate = new EndOperationDelegate(this.OnEndGetTradeAlert_BySQL);
            }
            if ((this.onGetTradeAlert_BySQLCompletedDelegate == null)) {
                this.onGetTradeAlert_BySQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTradeAlert_BySQLCompleted);
            }
            base.InvokeAsync(this.onBeginGetTradeAlert_BySQLDelegate, new object[] {
                        alertSql}, this.onEndGetTradeAlert_BySQLDelegate, this.onGetTradeAlert_BySQLCompletedDelegate, userState);
        }
        
        public data.baseDS.transactionsDataTable GetTransaction_BySQL(string transSql) {
            return base.Channel.GetTransaction_BySQL(transSql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTransaction_BySQL(string transSql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransaction_BySQL(transSql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.transactionsDataTable EndGetTransaction_BySQL(System.IAsyncResult result) {
            return base.Channel.EndGetTransaction_BySQL(result);
        }
        
        private System.IAsyncResult OnBeginGetTransaction_BySQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string transSql = ((string)(inValues[0]));
            return this.BeginGetTransaction_BySQL(transSql, callback, asyncState);
        }
        
        private object[] OnEndGetTransaction_BySQL(System.IAsyncResult result) {
            data.baseDS.transactionsDataTable retVal = this.EndGetTransaction_BySQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransaction_BySQLCompleted(object state) {
            if ((this.GetTransaction_BySQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransaction_BySQLCompleted(this, new GetTransaction_BySQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransaction_BySQLAsync(string transSql) {
            this.GetTransaction_BySQLAsync(transSql, null);
        }
        
        public void GetTransaction_BySQLAsync(string transSql, object userState) {
            if ((this.onBeginGetTransaction_BySQLDelegate == null)) {
                this.onBeginGetTransaction_BySQLDelegate = new BeginOperationDelegate(this.OnBeginGetTransaction_BySQL);
            }
            if ((this.onEndGetTransaction_BySQLDelegate == null)) {
                this.onEndGetTransaction_BySQLDelegate = new EndOperationDelegate(this.OnEndGetTransaction_BySQL);
            }
            if ((this.onGetTransaction_BySQLCompletedDelegate == null)) {
                this.onGetTransaction_BySQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransaction_BySQLCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransaction_BySQLDelegate, new object[] {
                        transSql}, this.onEndGetTransaction_BySQLDelegate, this.onGetTransaction_BySQLCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByType(commonClass.AppTypes.PortfolioTypes[] types) {
            return base.Channel.GetPortfolioDetail_ByType(types);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolioDetail_ByType(commonClass.AppTypes.PortfolioTypes[] types, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolioDetail_ByType(types, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDetailDataTable EndGetPortfolioDetail_ByType(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolioDetail_ByType(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolioDetail_ByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.PortfolioTypes[] types = ((commonClass.AppTypes.PortfolioTypes[])(inValues[0]));
            return this.BeginGetPortfolioDetail_ByType(types, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolioDetail_ByType(System.IAsyncResult result) {
            data.baseDS.portfolioDetailDataTable retVal = this.EndGetPortfolioDetail_ByType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolioDetail_ByTypeCompleted(object state) {
            if ((this.GetPortfolioDetail_ByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolioDetail_ByTypeCompleted(this, new GetPortfolioDetail_ByTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolioDetail_ByTypeAsync(commonClass.AppTypes.PortfolioTypes[] types) {
            this.GetPortfolioDetail_ByTypeAsync(types, null);
        }
        
        public void GetPortfolioDetail_ByTypeAsync(commonClass.AppTypes.PortfolioTypes[] types, object userState) {
            if ((this.onBeginGetPortfolioDetail_ByTypeDelegate == null)) {
                this.onBeginGetPortfolioDetail_ByTypeDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolioDetail_ByType);
            }
            if ((this.onEndGetPortfolioDetail_ByTypeDelegate == null)) {
                this.onEndGetPortfolioDetail_ByTypeDelegate = new EndOperationDelegate(this.OnEndGetPortfolioDetail_ByType);
            }
            if ((this.onGetPortfolioDetail_ByTypeCompletedDelegate == null)) {
                this.onGetPortfolioDetail_ByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolioDetail_ByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolioDetail_ByTypeDelegate, new object[] {
                        types}, this.onEndGetPortfolioDetail_ByTypeDelegate, this.onGetPortfolioDetail_ByTypeCompletedDelegate, userState);
        }
        
        public data.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCode(string portfolioCode) {
            return base.Channel.GetPortfolioDetail_ByCode(portfolioCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPortfolioDetail_ByCode(string portfolioCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPortfolioDetail_ByCode(portfolioCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.portfolioDetailDataTable EndGetPortfolioDetail_ByCode(System.IAsyncResult result) {
            return base.Channel.EndGetPortfolioDetail_ByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetPortfolioDetail_ByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string portfolioCode = ((string)(inValues[0]));
            return this.BeginGetPortfolioDetail_ByCode(portfolioCode, callback, asyncState);
        }
        
        private object[] OnEndGetPortfolioDetail_ByCode(System.IAsyncResult result) {
            data.baseDS.portfolioDetailDataTable retVal = this.EndGetPortfolioDetail_ByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPortfolioDetail_ByCodeCompleted(object state) {
            if ((this.GetPortfolioDetail_ByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPortfolioDetail_ByCodeCompleted(this, new GetPortfolioDetail_ByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPortfolioDetail_ByCodeAsync(string portfolioCode) {
            this.GetPortfolioDetail_ByCodeAsync(portfolioCode, null);
        }
        
        public void GetPortfolioDetail_ByCodeAsync(string portfolioCode, object userState) {
            if ((this.onBeginGetPortfolioDetail_ByCodeDelegate == null)) {
                this.onBeginGetPortfolioDetail_ByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetPortfolioDetail_ByCode);
            }
            if ((this.onEndGetPortfolioDetail_ByCodeDelegate == null)) {
                this.onEndGetPortfolioDetail_ByCodeDelegate = new EndOperationDelegate(this.OnEndGetPortfolioDetail_ByCode);
            }
            if ((this.onGetPortfolioDetail_ByCodeCompletedDelegate == null)) {
                this.onGetPortfolioDetail_ByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPortfolioDetail_ByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPortfolioDetail_ByCodeDelegate, new object[] {
                        portfolioCode}, this.onEndGetPortfolioDetail_ByCodeDelegate, this.onGetPortfolioDetail_ByCodeCompletedDelegate, userState);
        }
        
        public data.baseDS.investorStockDataTable GetOwnedStock(string portfolioCode) {
            return base.Channel.GetOwnedStock(portfolioCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOwnedStock(string portfolioCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOwnedStock(portfolioCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.investorStockDataTable EndGetOwnedStock(System.IAsyncResult result) {
            return base.Channel.EndGetOwnedStock(result);
        }
        
        private System.IAsyncResult OnBeginGetOwnedStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string portfolioCode = ((string)(inValues[0]));
            return this.BeginGetOwnedStock(portfolioCode, callback, asyncState);
        }
        
        private object[] OnEndGetOwnedStock(System.IAsyncResult result) {
            data.baseDS.investorStockDataTable retVal = this.EndGetOwnedStock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOwnedStockCompleted(object state) {
            if ((this.GetOwnedStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOwnedStockCompleted(this, new GetOwnedStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOwnedStockAsync(string portfolioCode) {
            this.GetOwnedStockAsync(portfolioCode, null);
        }
        
        public void GetOwnedStockAsync(string portfolioCode, object userState) {
            if ((this.onBeginGetOwnedStockDelegate == null)) {
                this.onBeginGetOwnedStockDelegate = new BeginOperationDelegate(this.OnBeginGetOwnedStock);
            }
            if ((this.onEndGetOwnedStockDelegate == null)) {
                this.onEndGetOwnedStockDelegate = new EndOperationDelegate(this.OnEndGetOwnedStock);
            }
            if ((this.onGetOwnedStockCompletedDelegate == null)) {
                this.onGetOwnedStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOwnedStockCompleted);
            }
            base.InvokeAsync(this.onBeginGetOwnedStockDelegate, new object[] {
                        portfolioCode}, this.onEndGetOwnedStockDelegate, this.onGetOwnedStockCompletedDelegate, userState);
        }
        
        public data.baseDS.lastPriceDataDataTable GetLastPrice(commonClass.PriceDataType type) {
            return base.Channel.GetLastPrice(type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastPrice(commonClass.PriceDataType type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastPrice(type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.lastPriceDataDataTable EndGetLastPrice(System.IAsyncResult result) {
            return base.Channel.EndGetLastPrice(result);
        }
        
        private System.IAsyncResult OnBeginGetLastPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.PriceDataType type = ((commonClass.PriceDataType)(inValues[0]));
            return this.BeginGetLastPrice(type, callback, asyncState);
        }
        
        private object[] OnEndGetLastPrice(System.IAsyncResult result) {
            data.baseDS.lastPriceDataDataTable retVal = this.EndGetLastPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastPriceCompleted(object state) {
            if ((this.GetLastPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastPriceCompleted(this, new GetLastPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastPriceAsync(commonClass.PriceDataType type) {
            this.GetLastPriceAsync(type, null);
        }
        
        public void GetLastPriceAsync(commonClass.PriceDataType type, object userState) {
            if ((this.onBeginGetLastPriceDelegate == null)) {
                this.onBeginGetLastPriceDelegate = new BeginOperationDelegate(this.OnBeginGetLastPrice);
            }
            if ((this.onEndGetLastPriceDelegate == null)) {
                this.onEndGetLastPriceDelegate = new EndOperationDelegate(this.OnEndGetLastPrice);
            }
            if ((this.onGetLastPriceCompletedDelegate == null)) {
                this.onGetLastPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastPriceCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastPriceDelegate, new object[] {
                        type}, this.onEndGetLastPriceDelegate, this.onGetLastPriceCompletedDelegate, userState);
        }
        
        public System.DateTime GetLastAlertTime(string investorCode) {
            return base.Channel.GetLastAlertTime(investorCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastAlertTime(string investorCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastAlertTime(investorCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLastAlertTime(System.IAsyncResult result) {
            return base.Channel.EndGetLastAlertTime(result);
        }
        
        private System.IAsyncResult OnBeginGetLastAlertTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string investorCode = ((string)(inValues[0]));
            return this.BeginGetLastAlertTime(investorCode, callback, asyncState);
        }
        
        private object[] OnEndGetLastAlertTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLastAlertTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastAlertTimeCompleted(object state) {
            if ((this.GetLastAlertTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastAlertTimeCompleted(this, new GetLastAlertTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastAlertTimeAsync(string investorCode) {
            this.GetLastAlertTimeAsync(investorCode, null);
        }
        
        public void GetLastAlertTimeAsync(string investorCode, object userState) {
            if ((this.onBeginGetLastAlertTimeDelegate == null)) {
                this.onBeginGetLastAlertTimeDelegate = new BeginOperationDelegate(this.OnBeginGetLastAlertTime);
            }
            if ((this.onEndGetLastAlertTimeDelegate == null)) {
                this.onEndGetLastAlertTimeDelegate = new EndOperationDelegate(this.OnEndGetLastAlertTime);
            }
            if ((this.onGetLastAlertTimeCompletedDelegate == null)) {
                this.onGetLastAlertTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastAlertTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastAlertTimeDelegate, new object[] {
                        investorCode}, this.onEndGetLastAlertTimeDelegate, this.onGetLastAlertTimeCompletedDelegate, userState);
        }
        
        public data.baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            return base.Channel.GetData_ByTimeScale_Code_FrDate(timeScaleCode, stockCode, fromDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData_ByTimeScale_Code_FrDate(timeScaleCode, stockCode, fromDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.priceDataDataTable EndGetData_ByTimeScale_Code_FrDate(System.IAsyncResult result) {
            return base.Channel.EndGetData_ByTimeScale_Code_FrDate(result);
        }
        
        private System.IAsyncResult OnBeginGetData_ByTimeScale_Code_FrDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string timeScaleCode = ((string)(inValues[0]));
            string stockCode = ((string)(inValues[1]));
            System.DateTime fromDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetData_ByTimeScale_Code_FrDate(timeScaleCode, stockCode, fromDate, callback, asyncState);
        }
        
        private object[] OnEndGetData_ByTimeScale_Code_FrDate(System.IAsyncResult result) {
            data.baseDS.priceDataDataTable retVal = this.EndGetData_ByTimeScale_Code_FrDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetData_ByTimeScale_Code_FrDateCompleted(object state) {
            if ((this.GetData_ByTimeScale_Code_FrDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetData_ByTimeScale_Code_FrDateCompleted(this, new GetData_ByTimeScale_Code_FrDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetData_ByTimeScale_Code_FrDateAsync(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            this.GetData_ByTimeScale_Code_FrDateAsync(timeScaleCode, stockCode, fromDate, null);
        }
        
        public void GetData_ByTimeScale_Code_FrDateAsync(string timeScaleCode, string stockCode, System.DateTime fromDate, object userState) {
            if ((this.onBeginGetData_ByTimeScale_Code_FrDateDelegate == null)) {
                this.onBeginGetData_ByTimeScale_Code_FrDateDelegate = new BeginOperationDelegate(this.OnBeginGetData_ByTimeScale_Code_FrDate);
            }
            if ((this.onEndGetData_ByTimeScale_Code_FrDateDelegate == null)) {
                this.onEndGetData_ByTimeScale_Code_FrDateDelegate = new EndOperationDelegate(this.OnEndGetData_ByTimeScale_Code_FrDate);
            }
            if ((this.onGetData_ByTimeScale_Code_FrDateCompletedDelegate == null)) {
                this.onGetData_ByTimeScale_Code_FrDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetData_ByTimeScale_Code_FrDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetData_ByTimeScale_Code_FrDateDelegate, new object[] {
                        timeScaleCode,
                        stockCode,
                        fromDate}, this.onEndGetData_ByTimeScale_Code_FrDateDelegate, this.onGetData_ByTimeScale_Code_FrDateCompletedDelegate, userState);
        }
        
        public data.baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_ByTimeScale_Code_DateRange(timeScaleCode, stockCode, frDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData_ByTimeScale_Code_DateRange(timeScaleCode, stockCode, frDate, toDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.priceDataDataTable EndGetData_ByTimeScale_Code_DateRange(System.IAsyncResult result) {
            return base.Channel.EndGetData_ByTimeScale_Code_DateRange(result);
        }
        
        private System.IAsyncResult OnBeginGetData_ByTimeScale_Code_DateRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string timeScaleCode = ((string)(inValues[0]));
            string stockCode = ((string)(inValues[1]));
            System.DateTime frDate = ((System.DateTime)(inValues[2]));
            System.DateTime toDate = ((System.DateTime)(inValues[3]));
            return this.BeginGetData_ByTimeScale_Code_DateRange(timeScaleCode, stockCode, frDate, toDate, callback, asyncState);
        }
        
        private object[] OnEndGetData_ByTimeScale_Code_DateRange(System.IAsyncResult result) {
            data.baseDS.priceDataDataTable retVal = this.EndGetData_ByTimeScale_Code_DateRange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetData_ByTimeScale_Code_DateRangeCompleted(object state) {
            if ((this.GetData_ByTimeScale_Code_DateRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetData_ByTimeScale_Code_DateRangeCompleted(this, new GetData_ByTimeScale_Code_DateRangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetData_ByTimeScale_Code_DateRangeAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            this.GetData_ByTimeScale_Code_DateRangeAsync(timeScaleCode, stockCode, frDate, toDate, null);
        }
        
        public void GetData_ByTimeScale_Code_DateRangeAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, object userState) {
            if ((this.onBeginGetData_ByTimeScale_Code_DateRangeDelegate == null)) {
                this.onBeginGetData_ByTimeScale_Code_DateRangeDelegate = new BeginOperationDelegate(this.OnBeginGetData_ByTimeScale_Code_DateRange);
            }
            if ((this.onEndGetData_ByTimeScale_Code_DateRangeDelegate == null)) {
                this.onEndGetData_ByTimeScale_Code_DateRangeDelegate = new EndOperationDelegate(this.OnEndGetData_ByTimeScale_Code_DateRange);
            }
            if ((this.onGetData_ByTimeScale_Code_DateRangeCompletedDelegate == null)) {
                this.onGetData_ByTimeScale_Code_DateRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetData_ByTimeScale_Code_DateRangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetData_ByTimeScale_Code_DateRangeDelegate, new object[] {
                        timeScaleCode,
                        stockCode,
                        frDate,
                        toDate}, this.onEndGetData_ByTimeScale_Code_DateRangeDelegate, this.onGetData_ByTimeScale_Code_DateRangeCompletedDelegate, userState);
        }
        
        public data.tmpDS.marketDataDataTable GetMarketData_BySQL(string sqlCmd) {
            return base.Channel.GetMarketData_BySQL(sqlCmd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMarketData_BySQL(string sqlCmd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMarketData_BySQL(sqlCmd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.tmpDS.marketDataDataTable EndGetMarketData_BySQL(System.IAsyncResult result) {
            return base.Channel.EndGetMarketData_BySQL(result);
        }
        
        private System.IAsyncResult OnBeginGetMarketData_BySQL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlCmd = ((string)(inValues[0]));
            return this.BeginGetMarketData_BySQL(sqlCmd, callback, asyncState);
        }
        
        private object[] OnEndGetMarketData_BySQL(System.IAsyncResult result) {
            data.tmpDS.marketDataDataTable retVal = this.EndGetMarketData_BySQL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMarketData_BySQLCompleted(object state) {
            if ((this.GetMarketData_BySQLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMarketData_BySQLCompleted(this, new GetMarketData_BySQLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMarketData_BySQLAsync(string sqlCmd) {
            this.GetMarketData_BySQLAsync(sqlCmd, null);
        }
        
        public void GetMarketData_BySQLAsync(string sqlCmd, object userState) {
            if ((this.onBeginGetMarketData_BySQLDelegate == null)) {
                this.onBeginGetMarketData_BySQLDelegate = new BeginOperationDelegate(this.OnBeginGetMarketData_BySQL);
            }
            if ((this.onEndGetMarketData_BySQLDelegate == null)) {
                this.onEndGetMarketData_BySQLDelegate = new EndOperationDelegate(this.OnEndGetMarketData_BySQL);
            }
            if ((this.onGetMarketData_BySQLCompletedDelegate == null)) {
                this.onGetMarketData_BySQLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMarketData_BySQLCompleted);
            }
            base.InvokeAsync(this.onBeginGetMarketData_BySQLDelegate, new object[] {
                        sqlCmd}, this.onEndGetMarketData_BySQLDelegate, this.onGetMarketData_BySQLCompletedDelegate, userState);
        }
        
        public int GetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_TotalRow(timeScaleCode, stockCode, frDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData_TotalRow(timeScaleCode, stockCode, frDate, toDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetData_TotalRow(System.IAsyncResult result) {
            return base.Channel.EndGetData_TotalRow(result);
        }
        
        private System.IAsyncResult OnBeginGetData_TotalRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string timeScaleCode = ((string)(inValues[0]));
            string stockCode = ((string)(inValues[1]));
            System.DateTime frDate = ((System.DateTime)(inValues[2]));
            System.DateTime toDate = ((System.DateTime)(inValues[3]));
            return this.BeginGetData_TotalRow(timeScaleCode, stockCode, frDate, toDate, callback, asyncState);
        }
        
        private object[] OnEndGetData_TotalRow(System.IAsyncResult result) {
            int retVal = this.EndGetData_TotalRow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetData_TotalRowCompleted(object state) {
            if ((this.GetData_TotalRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetData_TotalRowCompleted(this, new GetData_TotalRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetData_TotalRowAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            this.GetData_TotalRowAsync(timeScaleCode, stockCode, frDate, toDate, null);
        }
        
        public void GetData_TotalRowAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate, object userState) {
            if ((this.onBeginGetData_TotalRowDelegate == null)) {
                this.onBeginGetData_TotalRowDelegate = new BeginOperationDelegate(this.OnBeginGetData_TotalRow);
            }
            if ((this.onEndGetData_TotalRowDelegate == null)) {
                this.onEndGetData_TotalRowDelegate = new EndOperationDelegate(this.OnEndGetData_TotalRow);
            }
            if ((this.onGetData_TotalRowCompletedDelegate == null)) {
                this.onGetData_TotalRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetData_TotalRowCompleted);
            }
            base.InvokeAsync(this.onBeginGetData_TotalRowDelegate, new object[] {
                        timeScaleCode,
                        stockCode,
                        frDate,
                        toDate}, this.onEndGetData_TotalRowDelegate, this.onGetData_TotalRowCompletedDelegate, userState);
        }
        
        public bool GetTransactionInfo(ref commonClass.TransactionInfo transInfo) {
            return base.Channel.GetTransactionInfo(ref transInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTransactionInfo(ref commonClass.TransactionInfo transInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransactionInfo(ref transInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetTransactionInfo(ref commonClass.TransactionInfo transInfo, System.IAsyncResult result) {
            return base.Channel.EndGetTransactionInfo(ref transInfo, result);
        }
        
        private System.IAsyncResult OnBeginGetTransactionInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.TransactionInfo transInfo = ((commonClass.TransactionInfo)(inValues[0]));
            return this.BeginGetTransactionInfo(ref transInfo, callback, asyncState);
        }
        
        private object[] OnEndGetTransactionInfo(System.IAsyncResult result) {
            commonClass.TransactionInfo transInfo = this.GetDefaultValueForInitialization<commonClass.TransactionInfo>();
            bool retVal = this.EndGetTransactionInfo(ref transInfo, result);
            return new object[] {
                    transInfo,
                    retVal};
        }
        
        private void OnGetTransactionInfoCompleted(object state) {
            if ((this.GetTransactionInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransactionInfoCompleted(this, new GetTransactionInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransactionInfoAsync(commonClass.TransactionInfo transInfo) {
            this.GetTransactionInfoAsync(transInfo, null);
        }
        
        public void GetTransactionInfoAsync(commonClass.TransactionInfo transInfo, object userState) {
            if ((this.onBeginGetTransactionInfoDelegate == null)) {
                this.onBeginGetTransactionInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTransactionInfo);
            }
            if ((this.onEndGetTransactionInfoDelegate == null)) {
                this.onEndGetTransactionInfoDelegate = new EndOperationDelegate(this.OnEndGetTransactionInfo);
            }
            if ((this.onGetTransactionInfoCompletedDelegate == null)) {
                this.onGetTransactionInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransactionInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransactionInfoDelegate, new object[] {
                        transInfo}, this.onEndGetTransactionInfoDelegate, this.onGetTransactionInfoCompletedDelegate, userState);
        }
        
        public object[] GetPriceByCode(string stockCode) {
            return base.Channel.GetPriceByCode(stockCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPriceByCode(string stockCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPriceByCode(stockCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public object[] EndGetPriceByCode(System.IAsyncResult result) {
            return base.Channel.EndGetPriceByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetPriceByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stockCode = ((string)(inValues[0]));
            return this.BeginGetPriceByCode(stockCode, callback, asyncState);
        }
        
        private object[] OnEndGetPriceByCode(System.IAsyncResult result) {
            object[] retVal = this.EndGetPriceByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPriceByCodeCompleted(object state) {
            if ((this.GetPriceByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPriceByCodeCompleted(this, new GetPriceByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPriceByCodeAsync(string stockCode) {
            this.GetPriceByCodeAsync(stockCode, null);
        }
        
        public void GetPriceByCodeAsync(string stockCode, object userState) {
            if ((this.onBeginGetPriceByCodeDelegate == null)) {
                this.onBeginGetPriceByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetPriceByCode);
            }
            if ((this.onEndGetPriceByCodeDelegate == null)) {
                this.onEndGetPriceByCodeDelegate = new EndOperationDelegate(this.OnEndGetPriceByCode);
            }
            if ((this.onGetPriceByCodeCompletedDelegate == null)) {
                this.onGetPriceByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPriceByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetPriceByCodeDelegate, new object[] {
                        stockCode}, this.onEndGetPriceByCodeDelegate, this.onGetPriceByCodeCompletedDelegate, userState);
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReset(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReset(System.IAsyncResult result) {
            base.Channel.EndReset(result);
        }
        
        private System.IAsyncResult OnBeginReset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginReset(callback, asyncState);
        }
        
        private object[] OnEndReset(System.IAsyncResult result) {
            this.EndReset(result);
            return null;
        }
        
        private void OnResetCompleted(object state) {
            if ((this.ResetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetAsync() {
            this.ResetAsync(null);
        }
        
        public void ResetAsync(object userState) {
            if ((this.onBeginResetDelegate == null)) {
                this.onBeginResetDelegate = new BeginOperationDelegate(this.OnBeginReset);
            }
            if ((this.onEndResetDelegate == null)) {
                this.onEndResetDelegate = new EndOperationDelegate(this.OnEndReset);
            }
            if ((this.onResetCompletedDelegate == null)) {
                this.onResetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetCompleted);
            }
            base.InvokeAsync(this.onBeginResetDelegate, null, this.onEndResetDelegate, this.onResetCompletedDelegate, userState);
        }
        
        public void ClearCache() {
            base.Channel.ClearCache();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearCache(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearCache(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndClearCache(System.IAsyncResult result) {
            base.Channel.EndClearCache(result);
        }
        
        private System.IAsyncResult OnBeginClearCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginClearCache(callback, asyncState);
        }
        
        private object[] OnEndClearCache(System.IAsyncResult result) {
            this.EndClearCache(result);
            return null;
        }
        
        private void OnClearCacheCompleted(object state) {
            if ((this.ClearCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearCacheAsync() {
            this.ClearCacheAsync(null);
        }
        
        public void ClearCacheAsync(object userState) {
            if ((this.onBeginClearCacheDelegate == null)) {
                this.onBeginClearCacheDelegate = new BeginOperationDelegate(this.OnBeginClearCache);
            }
            if ((this.onEndClearCacheDelegate == null)) {
                this.onEndClearCacheDelegate = new EndOperationDelegate(this.OnEndClearCache);
            }
            if ((this.onClearCacheCompletedDelegate == null)) {
                this.onClearCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearCacheCompleted);
            }
            base.InvokeAsync(this.onBeginClearCacheDelegate, null, this.onEndClearCacheDelegate, this.onClearCacheCompletedDelegate, userState);
        }
        
        public void DeleteCache(string cacheName) {
            base.Channel.DeleteCache(cacheName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCache(string cacheName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCache(cacheName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCache(System.IAsyncResult result) {
            base.Channel.EndDeleteCache(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cacheName = ((string)(inValues[0]));
            return this.BeginDeleteCache(cacheName, callback, asyncState);
        }
        
        private object[] OnEndDeleteCache(System.IAsyncResult result) {
            this.EndDeleteCache(result);
            return null;
        }
        
        private void OnDeleteCacheCompleted(object state) {
            if ((this.DeleteCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCacheAsync(string cacheName) {
            this.DeleteCacheAsync(cacheName, null);
        }
        
        public void DeleteCacheAsync(string cacheName, object userState) {
            if ((this.onBeginDeleteCacheDelegate == null)) {
                this.onBeginDeleteCacheDelegate = new BeginOperationDelegate(this.OnBeginDeleteCache);
            }
            if ((this.onEndDeleteCacheDelegate == null)) {
                this.onEndDeleteCacheDelegate = new EndOperationDelegate(this.OnEndDeleteCache);
            }
            if ((this.onDeleteCacheCompletedDelegate == null)) {
                this.onDeleteCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCacheCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCacheDelegate, new object[] {
                        cacheName}, this.onEndDeleteCacheDelegate, this.onDeleteCacheCompletedDelegate, userState);
        }
        
        public System.DateTime GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerDateTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerDateTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetServerDateTime(System.IAsyncResult result) {
            return base.Channel.EndGetServerDateTime(result);
        }
        
        private System.IAsyncResult OnBeginGetServerDateTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerDateTime(callback, asyncState);
        }
        
        private object[] OnEndGetServerDateTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetServerDateTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerDateTimeCompleted(object state) {
            if ((this.GetServerDateTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        public void GetServerDateTimeAsync(object userState) {
            if ((this.onBeginGetServerDateTimeDelegate == null)) {
                this.onBeginGetServerDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetServerDateTime);
            }
            if ((this.onEndGetServerDateTimeDelegate == null)) {
                this.onEndGetServerDateTimeDelegate = new EndOperationDelegate(this.OnEndGetServerDateTime);
            }
            if ((this.onGetServerDateTimeCompletedDelegate == null)) {
                this.onGetServerDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerDateTimeDelegate, null, this.onEndGetServerDateTimeDelegate, this.onGetServerDateTimeCompletedDelegate, userState);
        }
        
        public void UpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            base.Channel.UpdateSysCodeCat(ref sysCodeCatTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSysCodeCat(ref sysCodeCatTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSysCodeCat(ref data.baseDS.sysCodeCatDataTable sysCodeCatTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateSysCodeCat(ref sysCodeCatTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateSysCodeCat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.sysCodeCatDataTable sysCodeCatTbl = ((data.baseDS.sysCodeCatDataTable)(inValues[0]));
            return this.BeginUpdateSysCodeCat(ref sysCodeCatTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateSysCodeCat(System.IAsyncResult result) {
            data.baseDS.sysCodeCatDataTable sysCodeCatTbl = this.GetDefaultValueForInitialization<data.baseDS.sysCodeCatDataTable>();
            this.EndUpdateSysCodeCat(ref sysCodeCatTbl, result);
            return new object[] {
                    sysCodeCatTbl};
        }
        
        private void OnUpdateSysCodeCatCompleted(object state) {
            if ((this.UpdateSysCodeCatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSysCodeCatCompleted(this, new UpdateSysCodeCatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSysCodeCatAsync(data.baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            this.UpdateSysCodeCatAsync(sysCodeCatTbl, null);
        }
        
        public void UpdateSysCodeCatAsync(data.baseDS.sysCodeCatDataTable sysCodeCatTbl, object userState) {
            if ((this.onBeginUpdateSysCodeCatDelegate == null)) {
                this.onBeginUpdateSysCodeCatDelegate = new BeginOperationDelegate(this.OnBeginUpdateSysCodeCat);
            }
            if ((this.onEndUpdateSysCodeCatDelegate == null)) {
                this.onEndUpdateSysCodeCatDelegate = new EndOperationDelegate(this.OnEndUpdateSysCodeCat);
            }
            if ((this.onUpdateSysCodeCatCompletedDelegate == null)) {
                this.onUpdateSysCodeCatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSysCodeCatCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSysCodeCatDelegate, new object[] {
                        sysCodeCatTbl}, this.onEndUpdateSysCodeCatDelegate, this.onUpdateSysCodeCatCompletedDelegate, userState);
        }
        
        public void UpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl) {
            base.Channel.UpdateSysCode(ref sysCodeTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSysCode(ref sysCodeTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSysCode(ref data.baseDS.sysCodeDataTable sysCodeTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateSysCode(ref sysCodeTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateSysCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.sysCodeDataTable sysCodeTbl = ((data.baseDS.sysCodeDataTable)(inValues[0]));
            return this.BeginUpdateSysCode(ref sysCodeTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateSysCode(System.IAsyncResult result) {
            data.baseDS.sysCodeDataTable sysCodeTbl = this.GetDefaultValueForInitialization<data.baseDS.sysCodeDataTable>();
            this.EndUpdateSysCode(ref sysCodeTbl, result);
            return new object[] {
                    sysCodeTbl};
        }
        
        private void OnUpdateSysCodeCompleted(object state) {
            if ((this.UpdateSysCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSysCodeCompleted(this, new UpdateSysCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSysCodeAsync(data.baseDS.sysCodeDataTable sysCodeTbl) {
            this.UpdateSysCodeAsync(sysCodeTbl, null);
        }
        
        public void UpdateSysCodeAsync(data.baseDS.sysCodeDataTable sysCodeTbl, object userState) {
            if ((this.onBeginUpdateSysCodeDelegate == null)) {
                this.onBeginUpdateSysCodeDelegate = new BeginOperationDelegate(this.OnBeginUpdateSysCode);
            }
            if ((this.onEndUpdateSysCodeDelegate == null)) {
                this.onEndUpdateSysCodeDelegate = new EndOperationDelegate(this.OnEndUpdateSysCode);
            }
            if ((this.onUpdateSysCodeCompletedDelegate == null)) {
                this.onUpdateSysCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSysCodeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSysCodeDelegate, new object[] {
                        sysCodeTbl}, this.onEndUpdateSysCodeDelegate, this.onUpdateSysCodeCompletedDelegate, userState);
        }
        
        public void UpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl) {
            base.Channel.UpdateStock(ref stockCodeTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStock(ref stockCodeTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateStock(ref data.baseDS.stockCodeDataTable stockCodeTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateStock(ref stockCodeTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.stockCodeDataTable stockCodeTbl = ((data.baseDS.stockCodeDataTable)(inValues[0]));
            return this.BeginUpdateStock(ref stockCodeTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateStock(System.IAsyncResult result) {
            data.baseDS.stockCodeDataTable stockCodeTbl = this.GetDefaultValueForInitialization<data.baseDS.stockCodeDataTable>();
            this.EndUpdateStock(ref stockCodeTbl, result);
            return new object[] {
                    stockCodeTbl};
        }
        
        private void OnUpdateStockCompleted(object state) {
            if ((this.UpdateStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStockCompleted(this, new UpdateStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStockAsync(data.baseDS.stockCodeDataTable stockCodeTbl) {
            this.UpdateStockAsync(stockCodeTbl, null);
        }
        
        public void UpdateStockAsync(data.baseDS.stockCodeDataTable stockCodeTbl, object userState) {
            if ((this.onBeginUpdateStockDelegate == null)) {
                this.onBeginUpdateStockDelegate = new BeginOperationDelegate(this.OnBeginUpdateStock);
            }
            if ((this.onEndUpdateStockDelegate == null)) {
                this.onEndUpdateStockDelegate = new EndOperationDelegate(this.OnEndUpdateStock);
            }
            if ((this.onUpdateStockCompletedDelegate == null)) {
                this.onUpdateStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStockCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStockDelegate, new object[] {
                        stockCodeTbl}, this.onEndUpdateStockDelegate, this.onUpdateStockCompletedDelegate, userState);
        }
        
        public void UpdateInvestor(ref data.baseDS.investorDataTable investorTbl) {
            base.Channel.UpdateInvestor(ref investorTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateInvestor(ref data.baseDS.investorDataTable investorTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateInvestor(ref investorTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateInvestor(ref data.baseDS.investorDataTable investorTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateInvestor(ref investorTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateInvestor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.investorDataTable investorTbl = ((data.baseDS.investorDataTable)(inValues[0]));
            return this.BeginUpdateInvestor(ref investorTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateInvestor(System.IAsyncResult result) {
            data.baseDS.investorDataTable investorTbl = this.GetDefaultValueForInitialization<data.baseDS.investorDataTable>();
            this.EndUpdateInvestor(ref investorTbl, result);
            return new object[] {
                    investorTbl};
        }
        
        private void OnUpdateInvestorCompleted(object state) {
            if ((this.UpdateInvestorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateInvestorCompleted(this, new UpdateInvestorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateInvestorAsync(data.baseDS.investorDataTable investorTbl) {
            this.UpdateInvestorAsync(investorTbl, null);
        }
        
        public void UpdateInvestorAsync(data.baseDS.investorDataTable investorTbl, object userState) {
            if ((this.onBeginUpdateInvestorDelegate == null)) {
                this.onBeginUpdateInvestorDelegate = new BeginOperationDelegate(this.OnBeginUpdateInvestor);
            }
            if ((this.onEndUpdateInvestorDelegate == null)) {
                this.onEndUpdateInvestorDelegate = new EndOperationDelegate(this.OnEndUpdateInvestor);
            }
            if ((this.onUpdateInvestorCompletedDelegate == null)) {
                this.onUpdateInvestorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateInvestorCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateInvestorDelegate, new object[] {
                        investorTbl}, this.onEndUpdateInvestorDelegate, this.onUpdateInvestorCompletedDelegate, userState);
        }
        
        public void UpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl) {
            base.Channel.UpdatePortfolio(ref portfolioTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePortfolio(ref portfolioTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePortfolio(ref data.baseDS.portfolioDataTable portfolioTbl, System.IAsyncResult result) {
            base.Channel.EndUpdatePortfolio(ref portfolioTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdatePortfolio(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.portfolioDataTable portfolioTbl = ((data.baseDS.portfolioDataTable)(inValues[0]));
            return this.BeginUpdatePortfolio(ref portfolioTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdatePortfolio(System.IAsyncResult result) {
            data.baseDS.portfolioDataTable portfolioTbl = this.GetDefaultValueForInitialization<data.baseDS.portfolioDataTable>();
            this.EndUpdatePortfolio(ref portfolioTbl, result);
            return new object[] {
                    portfolioTbl};
        }
        
        private void OnUpdatePortfolioCompleted(object state) {
            if ((this.UpdatePortfolioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePortfolioCompleted(this, new UpdatePortfolioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePortfolioAsync(data.baseDS.portfolioDataTable portfolioTbl) {
            this.UpdatePortfolioAsync(portfolioTbl, null);
        }
        
        public void UpdatePortfolioAsync(data.baseDS.portfolioDataTable portfolioTbl, object userState) {
            if ((this.onBeginUpdatePortfolioDelegate == null)) {
                this.onBeginUpdatePortfolioDelegate = new BeginOperationDelegate(this.OnBeginUpdatePortfolio);
            }
            if ((this.onEndUpdatePortfolioDelegate == null)) {
                this.onEndUpdatePortfolioDelegate = new EndOperationDelegate(this.OnEndUpdatePortfolio);
            }
            if ((this.onUpdatePortfolioCompletedDelegate == null)) {
                this.onUpdatePortfolioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePortfolioCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePortfolioDelegate, new object[] {
                        portfolioTbl}, this.onEndUpdatePortfolioDelegate, this.onUpdatePortfolioCompletedDelegate, userState);
        }
        
        public void UpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            base.Channel.UpdatePortfolioDetail(ref portfolioDetailTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePortfolioDetail(ref portfolioDetailTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePortfolioDetail(ref data.baseDS.portfolioDetailDataTable portfolioDetailTbl, System.IAsyncResult result) {
            base.Channel.EndUpdatePortfolioDetail(ref portfolioDetailTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdatePortfolioDetail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.portfolioDetailDataTable portfolioDetailTbl = ((data.baseDS.portfolioDetailDataTable)(inValues[0]));
            return this.BeginUpdatePortfolioDetail(ref portfolioDetailTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdatePortfolioDetail(System.IAsyncResult result) {
            data.baseDS.portfolioDetailDataTable portfolioDetailTbl = this.GetDefaultValueForInitialization<data.baseDS.portfolioDetailDataTable>();
            this.EndUpdatePortfolioDetail(ref portfolioDetailTbl, result);
            return new object[] {
                    portfolioDetailTbl};
        }
        
        private void OnUpdatePortfolioDetailCompleted(object state) {
            if ((this.UpdatePortfolioDetailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePortfolioDetailCompleted(this, new UpdatePortfolioDetailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePortfolioDetailAsync(data.baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            this.UpdatePortfolioDetailAsync(portfolioDetailTbl, null);
        }
        
        public void UpdatePortfolioDetailAsync(data.baseDS.portfolioDetailDataTable portfolioDetailTbl, object userState) {
            if ((this.onBeginUpdatePortfolioDetailDelegate == null)) {
                this.onBeginUpdatePortfolioDetailDelegate = new BeginOperationDelegate(this.OnBeginUpdatePortfolioDetail);
            }
            if ((this.onEndUpdatePortfolioDetailDelegate == null)) {
                this.onEndUpdatePortfolioDetailDelegate = new EndOperationDelegate(this.OnEndUpdatePortfolioDetail);
            }
            if ((this.onUpdatePortfolioDetailCompletedDelegate == null)) {
                this.onUpdatePortfolioDetailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePortfolioDetailCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePortfolioDetailDelegate, new object[] {
                        portfolioDetailTbl}, this.onEndUpdatePortfolioDetailDelegate, this.onUpdatePortfolioDetailCompletedDelegate, userState);
        }
        
        public void UpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl) {
            base.Channel.UpdateStockExchange(ref stockExchangeTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateStockExchange(ref stockExchangeTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateStockExchange(ref data.baseDS.stockExchangeDataTable stockExchangeTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateStockExchange(ref stockExchangeTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateStockExchange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.stockExchangeDataTable stockExchangeTbl = ((data.baseDS.stockExchangeDataTable)(inValues[0]));
            return this.BeginUpdateStockExchange(ref stockExchangeTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateStockExchange(System.IAsyncResult result) {
            data.baseDS.stockExchangeDataTable stockExchangeTbl = this.GetDefaultValueForInitialization<data.baseDS.stockExchangeDataTable>();
            this.EndUpdateStockExchange(ref stockExchangeTbl, result);
            return new object[] {
                    stockExchangeTbl};
        }
        
        private void OnUpdateStockExchangeCompleted(object state) {
            if ((this.UpdateStockExchangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateStockExchangeCompleted(this, new UpdateStockExchangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateStockExchangeAsync(data.baseDS.stockExchangeDataTable stockExchangeTbl) {
            this.UpdateStockExchangeAsync(stockExchangeTbl, null);
        }
        
        public void UpdateStockExchangeAsync(data.baseDS.stockExchangeDataTable stockExchangeTbl, object userState) {
            if ((this.onBeginUpdateStockExchangeDelegate == null)) {
                this.onBeginUpdateStockExchangeDelegate = new BeginOperationDelegate(this.OnBeginUpdateStockExchange);
            }
            if ((this.onEndUpdateStockExchangeDelegate == null)) {
                this.onEndUpdateStockExchangeDelegate = new EndOperationDelegate(this.OnEndUpdateStockExchange);
            }
            if ((this.onUpdateStockExchangeCompletedDelegate == null)) {
                this.onUpdateStockExchangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStockExchangeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateStockExchangeDelegate, new object[] {
                        stockExchangeTbl}, this.onEndUpdateStockExchangeDelegate, this.onUpdateStockExchangeCompletedDelegate, userState);
        }
        
        public void UpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl) {
            base.Channel.UpdateTransactions(ref transactionsTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTransactions(ref transactionsTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTransactions(ref data.baseDS.transactionsDataTable transactionsTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateTransactions(ref transactionsTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.transactionsDataTable transactionsTbl = ((data.baseDS.transactionsDataTable)(inValues[0]));
            return this.BeginUpdateTransactions(ref transactionsTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateTransactions(System.IAsyncResult result) {
            data.baseDS.transactionsDataTable transactionsTbl = this.GetDefaultValueForInitialization<data.baseDS.transactionsDataTable>();
            this.EndUpdateTransactions(ref transactionsTbl, result);
            return new object[] {
                    transactionsTbl};
        }
        
        private void OnUpdateTransactionsCompleted(object state) {
            if ((this.UpdateTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTransactionsCompleted(this, new UpdateTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTransactionsAsync(data.baseDS.transactionsDataTable transactionsTbl) {
            this.UpdateTransactionsAsync(transactionsTbl, null);
        }
        
        public void UpdateTransactionsAsync(data.baseDS.transactionsDataTable transactionsTbl, object userState) {
            if ((this.onBeginUpdateTransactionsDelegate == null)) {
                this.onBeginUpdateTransactionsDelegate = new BeginOperationDelegate(this.OnBeginUpdateTransactions);
            }
            if ((this.onEndUpdateTransactionsDelegate == null)) {
                this.onEndUpdateTransactionsDelegate = new EndOperationDelegate(this.OnEndUpdateTransactions);
            }
            if ((this.onUpdateTransactionsCompletedDelegate == null)) {
                this.onUpdateTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTransactionsDelegate, new object[] {
                        transactionsTbl}, this.onEndUpdateTransactionsDelegate, this.onUpdateTransactionsCompletedDelegate, userState);
        }
        
        public void UpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl) {
            base.Channel.UpdateInvestorStock(ref investorStockTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateInvestorStock(ref investorStockTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateInvestorStock(ref data.baseDS.investorStockDataTable investorStockTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateInvestorStock(ref investorStockTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateInvestorStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.investorStockDataTable investorStockTbl = ((data.baseDS.investorStockDataTable)(inValues[0]));
            return this.BeginUpdateInvestorStock(ref investorStockTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateInvestorStock(System.IAsyncResult result) {
            data.baseDS.investorStockDataTable investorStockTbl = this.GetDefaultValueForInitialization<data.baseDS.investorStockDataTable>();
            this.EndUpdateInvestorStock(ref investorStockTbl, result);
            return new object[] {
                    investorStockTbl};
        }
        
        private void OnUpdateInvestorStockCompleted(object state) {
            if ((this.UpdateInvestorStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateInvestorStockCompleted(this, new UpdateInvestorStockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateInvestorStockAsync(data.baseDS.investorStockDataTable investorStockTbl) {
            this.UpdateInvestorStockAsync(investorStockTbl, null);
        }
        
        public void UpdateInvestorStockAsync(data.baseDS.investorStockDataTable investorStockTbl, object userState) {
            if ((this.onBeginUpdateInvestorStockDelegate == null)) {
                this.onBeginUpdateInvestorStockDelegate = new BeginOperationDelegate(this.OnBeginUpdateInvestorStock);
            }
            if ((this.onEndUpdateInvestorStockDelegate == null)) {
                this.onEndUpdateInvestorStockDelegate = new EndOperationDelegate(this.OnEndUpdateInvestorStock);
            }
            if ((this.onUpdateInvestorStockCompletedDelegate == null)) {
                this.onUpdateInvestorStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateInvestorStockCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateInvestorStockDelegate, new object[] {
                        investorStockTbl}, this.onEndUpdateInvestorStockDelegate, this.onUpdateInvestorStockCompletedDelegate, userState);
        }
        
        public void UpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl) {
            base.Channel.UpdateTradeAlert(ref tradeAlertTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTradeAlert(ref tradeAlertTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTradeAlert(ref data.baseDS.tradeAlertDataTable tradeAlertTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateTradeAlert(ref tradeAlertTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateTradeAlert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.tradeAlertDataTable tradeAlertTbl = ((data.baseDS.tradeAlertDataTable)(inValues[0]));
            return this.BeginUpdateTradeAlert(ref tradeAlertTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateTradeAlert(System.IAsyncResult result) {
            data.baseDS.tradeAlertDataTable tradeAlertTbl = this.GetDefaultValueForInitialization<data.baseDS.tradeAlertDataTable>();
            this.EndUpdateTradeAlert(ref tradeAlertTbl, result);
            return new object[] {
                    tradeAlertTbl};
        }
        
        private void OnUpdateTradeAlertCompleted(object state) {
            if ((this.UpdateTradeAlertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTradeAlertCompleted(this, new UpdateTradeAlertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTradeAlertAsync(data.baseDS.tradeAlertDataTable tradeAlertTbl) {
            this.UpdateTradeAlertAsync(tradeAlertTbl, null);
        }
        
        public void UpdateTradeAlertAsync(data.baseDS.tradeAlertDataTable tradeAlertTbl, object userState) {
            if ((this.onBeginUpdateTradeAlertDelegate == null)) {
                this.onBeginUpdateTradeAlertDelegate = new BeginOperationDelegate(this.OnBeginUpdateTradeAlert);
            }
            if ((this.onEndUpdateTradeAlertDelegate == null)) {
                this.onEndUpdateTradeAlertDelegate = new EndOperationDelegate(this.OnEndUpdateTradeAlert);
            }
            if ((this.onUpdateTradeAlertCompletedDelegate == null)) {
                this.onUpdateTradeAlertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTradeAlertCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTradeAlertDelegate, new object[] {
                        tradeAlertTbl}, this.onEndUpdateTradeAlertDelegate, this.onUpdateTradeAlertCompletedDelegate, userState);
        }
        
        public void UpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            base.Channel.UpdateSysAutoKeyPending(ref sysAutoKeyPendingTbl);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSysAutoKeyPending(ref sysAutoKeyPendingTbl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSysAutoKeyPending(ref data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl, System.IAsyncResult result) {
            base.Channel.EndUpdateSysAutoKeyPending(ref sysAutoKeyPendingTbl, result);
        }
        
        private System.IAsyncResult OnBeginUpdateSysAutoKeyPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl = ((data.baseDS.sysAutoKeyPendingDataTable)(inValues[0]));
            return this.BeginUpdateSysAutoKeyPending(ref sysAutoKeyPendingTbl, callback, asyncState);
        }
        
        private object[] OnEndUpdateSysAutoKeyPending(System.IAsyncResult result) {
            data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl = this.GetDefaultValueForInitialization<data.baseDS.sysAutoKeyPendingDataTable>();
            this.EndUpdateSysAutoKeyPending(ref sysAutoKeyPendingTbl, result);
            return new object[] {
                    sysAutoKeyPendingTbl};
        }
        
        private void OnUpdateSysAutoKeyPendingCompleted(object state) {
            if ((this.UpdateSysAutoKeyPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSysAutoKeyPendingCompleted(this, new UpdateSysAutoKeyPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSysAutoKeyPendingAsync(data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            this.UpdateSysAutoKeyPendingAsync(sysAutoKeyPendingTbl, null);
        }
        
        public void UpdateSysAutoKeyPendingAsync(data.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl, object userState) {
            if ((this.onBeginUpdateSysAutoKeyPendingDelegate == null)) {
                this.onBeginUpdateSysAutoKeyPendingDelegate = new BeginOperationDelegate(this.OnBeginUpdateSysAutoKeyPending);
            }
            if ((this.onEndUpdateSysAutoKeyPendingDelegate == null)) {
                this.onEndUpdateSysAutoKeyPendingDelegate = new EndOperationDelegate(this.OnEndUpdateSysAutoKeyPending);
            }
            if ((this.onUpdateSysAutoKeyPendingCompletedDelegate == null)) {
                this.onUpdateSysAutoKeyPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSysAutoKeyPendingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSysAutoKeyPendingDelegate, new object[] {
                        sysAutoKeyPendingTbl}, this.onEndUpdateSysAutoKeyPendingDelegate, this.onUpdateSysAutoKeyPendingCompletedDelegate, userState);
        }
        
        public void DeleteStock(string stockCode) {
            base.Channel.DeleteStock(stockCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteStock(string stockCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStock(stockCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteStock(System.IAsyncResult result) {
            base.Channel.EndDeleteStock(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stockCode = ((string)(inValues[0]));
            return this.BeginDeleteStock(stockCode, callback, asyncState);
        }
        
        private object[] OnEndDeleteStock(System.IAsyncResult result) {
            this.EndDeleteStock(result);
            return null;
        }
        
        private void OnDeleteStockCompleted(object state) {
            if ((this.DeleteStockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStockAsync(string stockCode) {
            this.DeleteStockAsync(stockCode, null);
        }
        
        public void DeleteStockAsync(string stockCode, object userState) {
            if ((this.onBeginDeleteStockDelegate == null)) {
                this.onBeginDeleteStockDelegate = new BeginOperationDelegate(this.OnBeginDeleteStock);
            }
            if ((this.onEndDeleteStockDelegate == null)) {
                this.onEndDeleteStockDelegate = new EndOperationDelegate(this.OnEndDeleteStock);
            }
            if ((this.onDeleteStockCompletedDelegate == null)) {
                this.onDeleteStockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStockCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStockDelegate, new object[] {
                        stockCode}, this.onEndDeleteStockDelegate, this.onDeleteStockCompletedDelegate, userState);
        }
        
        public void DeleteStockExchange(string code) {
            base.Channel.DeleteStockExchange(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteStockExchange(string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStockExchange(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteStockExchange(System.IAsyncResult result) {
            base.Channel.EndDeleteStockExchange(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStockExchange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            return this.BeginDeleteStockExchange(code, callback, asyncState);
        }
        
        private object[] OnEndDeleteStockExchange(System.IAsyncResult result) {
            this.EndDeleteStockExchange(result);
            return null;
        }
        
        private void OnDeleteStockExchangeCompleted(object state) {
            if ((this.DeleteStockExchangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStockExchangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStockExchangeAsync(string code) {
            this.DeleteStockExchangeAsync(code, null);
        }
        
        public void DeleteStockExchangeAsync(string code, object userState) {
            if ((this.onBeginDeleteStockExchangeDelegate == null)) {
                this.onBeginDeleteStockExchangeDelegate = new BeginOperationDelegate(this.OnBeginDeleteStockExchange);
            }
            if ((this.onEndDeleteStockExchangeDelegate == null)) {
                this.onEndDeleteStockExchangeDelegate = new EndOperationDelegate(this.OnEndDeleteStockExchange);
            }
            if ((this.onDeleteStockExchangeCompletedDelegate == null)) {
                this.onDeleteStockExchangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStockExchangeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStockExchangeDelegate, new object[] {
                        code}, this.onEndDeleteStockExchangeDelegate, this.onDeleteStockExchangeCompletedDelegate, userState);
        }
        
        public void DeleteInvestor(string investorCode) {
            base.Channel.DeleteInvestor(investorCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteInvestor(string investorCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInvestor(investorCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteInvestor(System.IAsyncResult result) {
            base.Channel.EndDeleteInvestor(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInvestor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string investorCode = ((string)(inValues[0]));
            return this.BeginDeleteInvestor(investorCode, callback, asyncState);
        }
        
        private object[] OnEndDeleteInvestor(System.IAsyncResult result) {
            this.EndDeleteInvestor(result);
            return null;
        }
        
        private void OnDeleteInvestorCompleted(object state) {
            if ((this.DeleteInvestorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInvestorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInvestorAsync(string investorCode) {
            this.DeleteInvestorAsync(investorCode, null);
        }
        
        public void DeleteInvestorAsync(string investorCode, object userState) {
            if ((this.onBeginDeleteInvestorDelegate == null)) {
                this.onBeginDeleteInvestorDelegate = new BeginOperationDelegate(this.OnBeginDeleteInvestor);
            }
            if ((this.onEndDeleteInvestorDelegate == null)) {
                this.onEndDeleteInvestorDelegate = new EndOperationDelegate(this.OnEndDeleteInvestor);
            }
            if ((this.onDeleteInvestorCompletedDelegate == null)) {
                this.onDeleteInvestorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInvestorCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInvestorDelegate, new object[] {
                        investorCode}, this.onEndDeleteInvestorDelegate, this.onDeleteInvestorCompletedDelegate, userState);
        }
        
        public void DeletePortfolio(string portfolioCode) {
            base.Channel.DeletePortfolio(portfolioCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePortfolio(string portfolioCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePortfolio(portfolioCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePortfolio(System.IAsyncResult result) {
            base.Channel.EndDeletePortfolio(result);
        }
        
        private System.IAsyncResult OnBeginDeletePortfolio(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string portfolioCode = ((string)(inValues[0]));
            return this.BeginDeletePortfolio(portfolioCode, callback, asyncState);
        }
        
        private object[] OnEndDeletePortfolio(System.IAsyncResult result) {
            this.EndDeletePortfolio(result);
            return null;
        }
        
        private void OnDeletePortfolioCompleted(object state) {
            if ((this.DeletePortfolioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePortfolioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePortfolioAsync(string portfolioCode) {
            this.DeletePortfolioAsync(portfolioCode, null);
        }
        
        public void DeletePortfolioAsync(string portfolioCode, object userState) {
            if ((this.onBeginDeletePortfolioDelegate == null)) {
                this.onBeginDeletePortfolioDelegate = new BeginOperationDelegate(this.OnBeginDeletePortfolio);
            }
            if ((this.onEndDeletePortfolioDelegate == null)) {
                this.onEndDeletePortfolioDelegate = new EndOperationDelegate(this.OnEndDeletePortfolio);
            }
            if ((this.onDeletePortfolioCompletedDelegate == null)) {
                this.onDeletePortfolioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePortfolioCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePortfolioDelegate, new object[] {
                        portfolioCode}, this.onEndDeletePortfolioDelegate, this.onDeletePortfolioCompletedDelegate, userState);
        }
        
        public void DeleteSysCodeCat(string catCode) {
            base.Channel.DeleteSysCodeCat(catCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSysCodeCat(string catCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSysCodeCat(catCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSysCodeCat(System.IAsyncResult result) {
            base.Channel.EndDeleteSysCodeCat(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSysCodeCat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string catCode = ((string)(inValues[0]));
            return this.BeginDeleteSysCodeCat(catCode, callback, asyncState);
        }
        
        private object[] OnEndDeleteSysCodeCat(System.IAsyncResult result) {
            this.EndDeleteSysCodeCat(result);
            return null;
        }
        
        private void OnDeleteSysCodeCatCompleted(object state) {
            if ((this.DeleteSysCodeCatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSysCodeCatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSysCodeCatAsync(string catCode) {
            this.DeleteSysCodeCatAsync(catCode, null);
        }
        
        public void DeleteSysCodeCatAsync(string catCode, object userState) {
            if ((this.onBeginDeleteSysCodeCatDelegate == null)) {
                this.onBeginDeleteSysCodeCatDelegate = new BeginOperationDelegate(this.OnBeginDeleteSysCodeCat);
            }
            if ((this.onEndDeleteSysCodeCatDelegate == null)) {
                this.onEndDeleteSysCodeCatDelegate = new EndOperationDelegate(this.OnEndDeleteSysCodeCat);
            }
            if ((this.onDeleteSysCodeCatCompletedDelegate == null)) {
                this.onDeleteSysCodeCatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSysCodeCatCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSysCodeCatDelegate, new object[] {
                        catCode}, this.onEndDeleteSysCodeCatDelegate, this.onDeleteSysCodeCatCompletedDelegate, userState);
        }
        
        public void DeleteSysCode(string catCode, string code) {
            base.Channel.DeleteSysCode(catCode, code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSysCode(string catCode, string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSysCode(catCode, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSysCode(System.IAsyncResult result) {
            base.Channel.EndDeleteSysCode(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSysCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string catCode = ((string)(inValues[0]));
            string code = ((string)(inValues[1]));
            return this.BeginDeleteSysCode(catCode, code, callback, asyncState);
        }
        
        private object[] OnEndDeleteSysCode(System.IAsyncResult result) {
            this.EndDeleteSysCode(result);
            return null;
        }
        
        private void OnDeleteSysCodeCompleted(object state) {
            if ((this.DeleteSysCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSysCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSysCodeAsync(string catCode, string code) {
            this.DeleteSysCodeAsync(catCode, code, null);
        }
        
        public void DeleteSysCodeAsync(string catCode, string code, object userState) {
            if ((this.onBeginDeleteSysCodeDelegate == null)) {
                this.onBeginDeleteSysCodeDelegate = new BeginOperationDelegate(this.OnBeginDeleteSysCode);
            }
            if ((this.onEndDeleteSysCodeDelegate == null)) {
                this.onEndDeleteSysCodeDelegate = new EndOperationDelegate(this.OnEndDeleteSysCode);
            }
            if ((this.onDeleteSysCodeCompletedDelegate == null)) {
                this.onDeleteSysCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSysCodeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSysCodeDelegate, new object[] {
                        catCode,
                        code}, this.onEndDeleteSysCodeDelegate, this.onDeleteSysCodeCompletedDelegate, userState);
        }
        
        public void DeleteTradeAlert(int alertId) {
            base.Channel.DeleteTradeAlert(alertId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTradeAlert(int alertId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTradeAlert(alertId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTradeAlert(System.IAsyncResult result) {
            base.Channel.EndDeleteTradeAlert(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTradeAlert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int alertId = ((int)(inValues[0]));
            return this.BeginDeleteTradeAlert(alertId, callback, asyncState);
        }
        
        private object[] OnEndDeleteTradeAlert(System.IAsyncResult result) {
            this.EndDeleteTradeAlert(result);
            return null;
        }
        
        private void OnDeleteTradeAlertCompleted(object state) {
            if ((this.DeleteTradeAlertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTradeAlertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTradeAlertAsync(int alertId) {
            this.DeleteTradeAlertAsync(alertId, null);
        }
        
        public void DeleteTradeAlertAsync(int alertId, object userState) {
            if ((this.onBeginDeleteTradeAlertDelegate == null)) {
                this.onBeginDeleteTradeAlertDelegate = new BeginOperationDelegate(this.OnBeginDeleteTradeAlert);
            }
            if ((this.onEndDeleteTradeAlertDelegate == null)) {
                this.onEndDeleteTradeAlertDelegate = new EndOperationDelegate(this.OnEndDeleteTradeAlert);
            }
            if ((this.onDeleteTradeAlertCompletedDelegate == null)) {
                this.onDeleteTradeAlertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTradeAlertCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTradeAlertDelegate, new object[] {
                        alertId}, this.onEndDeleteTradeAlertDelegate, this.onDeleteTradeAlertCompletedDelegate, userState);
        }
        
        public data.tmpDS.stockCodeDataTable GetStockByStatus(commonClass.AppTypes.CommonStatus status) {
            return base.Channel.GetStockByStatus(status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStockByStatus(commonClass.AppTypes.CommonStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStockByStatus(status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.tmpDS.stockCodeDataTable EndGetStockByStatus(System.IAsyncResult result) {
            return base.Channel.EndGetStockByStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetStockByStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            commonClass.AppTypes.CommonStatus status = ((commonClass.AppTypes.CommonStatus)(inValues[0]));
            return this.BeginGetStockByStatus(status, callback, asyncState);
        }
        
        private object[] OnEndGetStockByStatus(System.IAsyncResult result) {
            data.tmpDS.stockCodeDataTable retVal = this.EndGetStockByStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStockByStatusCompleted(object state) {
            if ((this.GetStockByStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStockByStatusCompleted(this, new GetStockByStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStockByStatusAsync(commonClass.AppTypes.CommonStatus status) {
            this.GetStockByStatusAsync(status, null);
        }
        
        public void GetStockByStatusAsync(commonClass.AppTypes.CommonStatus status, object userState) {
            if ((this.onBeginGetStockByStatusDelegate == null)) {
                this.onBeginGetStockByStatusDelegate = new BeginOperationDelegate(this.OnBeginGetStockByStatus);
            }
            if ((this.onEndGetStockByStatusDelegate == null)) {
                this.onEndGetStockByStatusDelegate = new EndOperationDelegate(this.OnEndGetStockByStatus);
            }
            if ((this.onGetStockByStatusCompletedDelegate == null)) {
                this.onGetStockByStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStockByStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetStockByStatusDelegate, new object[] {
                        status}, this.onEndGetStockByStatusDelegate, this.onGetStockByStatusCompletedDelegate, userState);
        }
        
        public data.baseDS.stockCodeDataTable GetStockFull() {
            return base.Channel.GetStockFull();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStockFull(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStockFull(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.stockCodeDataTable EndGetStockFull(System.IAsyncResult result) {
            return base.Channel.EndGetStockFull(result);
        }
        
        private System.IAsyncResult OnBeginGetStockFull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStockFull(callback, asyncState);
        }
        
        private object[] OnEndGetStockFull(System.IAsyncResult result) {
            data.baseDS.stockCodeDataTable retVal = this.EndGetStockFull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStockFullCompleted(object state) {
            if ((this.GetStockFullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStockFullCompleted(this, new GetStockFullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStockFullAsync() {
            this.GetStockFullAsync(null);
        }
        
        public void GetStockFullAsync(object userState) {
            if ((this.onBeginGetStockFullDelegate == null)) {
                this.onBeginGetStockFullDelegate = new BeginOperationDelegate(this.OnBeginGetStockFull);
            }
            if ((this.onEndGetStockFullDelegate == null)) {
                this.onEndGetStockFullDelegate = new EndOperationDelegate(this.OnEndGetStockFull);
            }
            if ((this.onGetStockFullCompletedDelegate == null)) {
                this.onGetStockFullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStockFullCompleted);
            }
            base.InvokeAsync(this.onBeginGetStockFullDelegate, null, this.onEndGetStockFullDelegate, this.onGetStockFullCompletedDelegate, userState);
        }
        
        public string[] GetStockList_ByWatchList(string[] watchList) {
            return base.Channel.GetStockList_ByWatchList(watchList);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStockList_ByWatchList(string[] watchList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStockList_ByWatchList(watchList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetStockList_ByWatchList(System.IAsyncResult result) {
            return base.Channel.EndGetStockList_ByWatchList(result);
        }
        
        private System.IAsyncResult OnBeginGetStockList_ByWatchList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] watchList = ((string[])(inValues[0]));
            return this.BeginGetStockList_ByWatchList(watchList, callback, asyncState);
        }
        
        private object[] OnEndGetStockList_ByWatchList(System.IAsyncResult result) {
            string[] retVal = this.EndGetStockList_ByWatchList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStockList_ByWatchListCompleted(object state) {
            if ((this.GetStockList_ByWatchListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStockList_ByWatchListCompleted(this, new GetStockList_ByWatchListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStockList_ByWatchListAsync(string[] watchList) {
            this.GetStockList_ByWatchListAsync(watchList, null);
        }
        
        public void GetStockList_ByWatchListAsync(string[] watchList, object userState) {
            if ((this.onBeginGetStockList_ByWatchListDelegate == null)) {
                this.onBeginGetStockList_ByWatchListDelegate = new BeginOperationDelegate(this.OnBeginGetStockList_ByWatchList);
            }
            if ((this.onEndGetStockList_ByWatchListDelegate == null)) {
                this.onEndGetStockList_ByWatchListDelegate = new EndOperationDelegate(this.OnEndGetStockList_ByWatchList);
            }
            if ((this.onGetStockList_ByWatchListCompletedDelegate == null)) {
                this.onGetStockList_ByWatchListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStockList_ByWatchListCompleted);
            }
            base.InvokeAsync(this.onBeginGetStockList_ByWatchListDelegate, new object[] {
                        watchList}, this.onEndGetStockList_ByWatchListDelegate, this.onGetStockList_ByWatchListCompletedDelegate, userState);
        }
        
        public string[] GetStockList_ByBizSector(string[] sectors) {
            return base.Channel.GetStockList_ByBizSector(sectors);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStockList_ByBizSector(string[] sectors, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStockList_ByBizSector(sectors, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetStockList_ByBizSector(System.IAsyncResult result) {
            return base.Channel.EndGetStockList_ByBizSector(result);
        }
        
        private System.IAsyncResult OnBeginGetStockList_ByBizSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] sectors = ((string[])(inValues[0]));
            return this.BeginGetStockList_ByBizSector(sectors, callback, asyncState);
        }
        
        private object[] OnEndGetStockList_ByBizSector(System.IAsyncResult result) {
            string[] retVal = this.EndGetStockList_ByBizSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStockList_ByBizSectorCompleted(object state) {
            if ((this.GetStockList_ByBizSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStockList_ByBizSectorCompleted(this, new GetStockList_ByBizSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStockList_ByBizSectorAsync(string[] sectors) {
            this.GetStockList_ByBizSectorAsync(sectors, null);
        }
        
        public void GetStockList_ByBizSectorAsync(string[] sectors, object userState) {
            if ((this.onBeginGetStockList_ByBizSectorDelegate == null)) {
                this.onBeginGetStockList_ByBizSectorDelegate = new BeginOperationDelegate(this.OnBeginGetStockList_ByBizSector);
            }
            if ((this.onEndGetStockList_ByBizSectorDelegate == null)) {
                this.onEndGetStockList_ByBizSectorDelegate = new EndOperationDelegate(this.OnEndGetStockList_ByBizSector);
            }
            if ((this.onGetStockList_ByBizSectorCompletedDelegate == null)) {
                this.onGetStockList_ByBizSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStockList_ByBizSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetStockList_ByBizSectorDelegate, new object[] {
                        sectors}, this.onEndGetStockList_ByBizSectorDelegate, this.onGetStockList_ByBizSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.stockExchangeDataTable GetStockExchange() {
            return base.Channel.GetStockExchange();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStockExchange(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStockExchange(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.stockExchangeDataTable EndGetStockExchange(System.IAsyncResult result) {
            return base.Channel.EndGetStockExchange(result);
        }
        
        private System.IAsyncResult OnBeginGetStockExchange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStockExchange(callback, asyncState);
        }
        
        private object[] OnEndGetStockExchange(System.IAsyncResult result) {
            data.baseDS.stockExchangeDataTable retVal = this.EndGetStockExchange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStockExchangeCompleted(object state) {
            if ((this.GetStockExchangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStockExchangeCompleted(this, new GetStockExchangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStockExchangeAsync() {
            this.GetStockExchangeAsync(null);
        }
        
        public void GetStockExchangeAsync(object userState) {
            if ((this.onBeginGetStockExchangeDelegate == null)) {
                this.onBeginGetStockExchangeDelegate = new BeginOperationDelegate(this.OnBeginGetStockExchange);
            }
            if ((this.onEndGetStockExchangeDelegate == null)) {
                this.onEndGetStockExchangeDelegate = new EndOperationDelegate(this.OnEndGetStockExchange);
            }
            if ((this.onGetStockExchangeCompletedDelegate == null)) {
                this.onGetStockExchangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStockExchangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetStockExchangeDelegate, null, this.onEndGetStockExchangeDelegate, this.onGetStockExchangeCompletedDelegate, userState);
        }
        
        public data.baseDS.employeeRangeDataTable GetEmployeeRange() {
            return base.Channel.GetEmployeeRange();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmployeeRange(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeeRange(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.employeeRangeDataTable EndGetEmployeeRange(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeeRange(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeeRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetEmployeeRange(callback, asyncState);
        }
        
        private object[] OnEndGetEmployeeRange(System.IAsyncResult result) {
            data.baseDS.employeeRangeDataTable retVal = this.EndGetEmployeeRange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeRangeCompleted(object state) {
            if ((this.GetEmployeeRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeRangeCompleted(this, new GetEmployeeRangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeRangeAsync() {
            this.GetEmployeeRangeAsync(null);
        }
        
        public void GetEmployeeRangeAsync(object userState) {
            if ((this.onBeginGetEmployeeRangeDelegate == null)) {
                this.onBeginGetEmployeeRangeDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeeRange);
            }
            if ((this.onEndGetEmployeeRangeDelegate == null)) {
                this.onEndGetEmployeeRangeDelegate = new EndOperationDelegate(this.OnEndGetEmployeeRange);
            }
            if ((this.onGetEmployeeRangeCompletedDelegate == null)) {
                this.onGetEmployeeRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeRangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeRangeDelegate, null, this.onEndGetEmployeeRangeDelegate, this.onGetEmployeeRangeCompletedDelegate, userState);
        }
        
        public data.baseDS.bizIndustryDataTable GetBizIndustry() {
            return base.Channel.GetBizIndustry();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizIndustry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizIndustry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizIndustryDataTable EndGetBizIndustry(System.IAsyncResult result) {
            return base.Channel.EndGetBizIndustry(result);
        }
        
        private System.IAsyncResult OnBeginGetBizIndustry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBizIndustry(callback, asyncState);
        }
        
        private object[] OnEndGetBizIndustry(System.IAsyncResult result) {
            data.baseDS.bizIndustryDataTable retVal = this.EndGetBizIndustry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizIndustryCompleted(object state) {
            if ((this.GetBizIndustryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizIndustryCompleted(this, new GetBizIndustryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizIndustryAsync() {
            this.GetBizIndustryAsync(null);
        }
        
        public void GetBizIndustryAsync(object userState) {
            if ((this.onBeginGetBizIndustryDelegate == null)) {
                this.onBeginGetBizIndustryDelegate = new BeginOperationDelegate(this.OnBeginGetBizIndustry);
            }
            if ((this.onEndGetBizIndustryDelegate == null)) {
                this.onEndGetBizIndustryDelegate = new EndOperationDelegate(this.OnEndGetBizIndustry);
            }
            if ((this.onGetBizIndustryCompletedDelegate == null)) {
                this.onGetBizIndustryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizIndustryCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizIndustryDelegate, null, this.onEndGetBizIndustryDelegate, this.onGetBizIndustryCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSuperSectorDataTable GetBizSuperSector() {
            return base.Channel.GetBizSuperSector();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSuperSector(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSuperSector(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSuperSectorDataTable EndGetBizSuperSector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSuperSector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSuperSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBizSuperSector(callback, asyncState);
        }
        
        private object[] OnEndGetBizSuperSector(System.IAsyncResult result) {
            data.baseDS.bizSuperSectorDataTable retVal = this.EndGetBizSuperSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSuperSectorCompleted(object state) {
            if ((this.GetBizSuperSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSuperSectorCompleted(this, new GetBizSuperSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSuperSectorAsync() {
            this.GetBizSuperSectorAsync(null);
        }
        
        public void GetBizSuperSectorAsync(object userState) {
            if ((this.onBeginGetBizSuperSectorDelegate == null)) {
                this.onBeginGetBizSuperSectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSuperSector);
            }
            if ((this.onEndGetBizSuperSectorDelegate == null)) {
                this.onEndGetBizSuperSectorDelegate = new EndOperationDelegate(this.OnEndGetBizSuperSector);
            }
            if ((this.onGetBizSuperSectorCompletedDelegate == null)) {
                this.onGetBizSuperSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSuperSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSuperSectorDelegate, null, this.onEndGetBizSuperSectorDelegate, this.onGetBizSuperSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSectorDataTable GetBizSector() {
            return base.Channel.GetBizSector();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSector(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSector(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSectorDataTable EndGetBizSector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBizSector(callback, asyncState);
        }
        
        private object[] OnEndGetBizSector(System.IAsyncResult result) {
            data.baseDS.bizSectorDataTable retVal = this.EndGetBizSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSectorCompleted(object state) {
            if ((this.GetBizSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSectorCompleted(this, new GetBizSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSectorAsync() {
            this.GetBizSectorAsync(null);
        }
        
        public void GetBizSectorAsync(object userState) {
            if ((this.onBeginGetBizSectorDelegate == null)) {
                this.onBeginGetBizSectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSector);
            }
            if ((this.onEndGetBizSectorDelegate == null)) {
                this.onEndGetBizSectorDelegate = new EndOperationDelegate(this.OnEndGetBizSector);
            }
            if ((this.onGetBizSectorCompletedDelegate == null)) {
                this.onGetBizSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSectorDelegate, null, this.onEndGetBizSectorDelegate, this.onGetBizSectorCompletedDelegate, userState);
        }
        
        public data.baseDS.bizSubSectorDataTable GetBizSubSector() {
            return base.Channel.GetBizSubSector();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBizSubSector(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBizSubSector(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public data.baseDS.bizSubSectorDataTable EndGetBizSubSector(System.IAsyncResult result) {
            return base.Channel.EndGetBizSubSector(result);
        }
        
        private System.IAsyncResult OnBeginGetBizSubSector(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetBizSubSector(callback, asyncState);
        }
        
        private object[] OnEndGetBizSubSector(System.IAsyncResult result) {
            data.baseDS.bizSubSectorDataTable retVal = this.EndGetBizSubSector(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBizSubSectorCompleted(object state) {
            if ((this.GetBizSubSectorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBizSubSectorCompleted(this, new GetBizSubSectorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBizSubSectorAsync() {
            this.GetBizSubSectorAsync(null);
        }
        
        public void GetBizSubSectorAsync(object userState) {
            if ((this.onBeginGetBizSubSectorDelegate == null)) {
                this.onBeginGetBizSubSectorDelegate = new BeginOperationDelegate(this.OnBeginGetBizSubSector);
            }
            if ((this.onEndGetBizSubSectorDelegate == null)) {
                this.onEndGetBizSubSectorDelegate = new EndOperationDelegate(this.OnEndGetBizSubSector);
            }
            if ((this.onGetBizSubSectorCompletedDelegate == null)) {
                this.onGetBizSubSectorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBizSubSectorCompleted);
            }
            base.InvokeAsync(this.onBeginGetBizSubSectorDelegate, null, this.onEndGetBizSubSectorDelegate, this.onGetBizSubSectorCompletedDelegate, userState);
        }
    }
}
