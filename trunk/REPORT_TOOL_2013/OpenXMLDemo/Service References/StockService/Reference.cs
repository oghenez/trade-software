//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenXMLDemo.StockService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockService.IStockService")]
    public interface IStockService {
        
        // CODEGEN: Parameter 'AnalysisResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Analysis", ReplyAction="http://tempuri.org/IStockService/AnalysisResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.AnalysisResponse Analysis(OpenXMLDemo.StockService.AnalysisRequest request);
        
        // CODEGEN: Parameter 'MakeTransactionResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/MakeTransaction", ReplyAction="http://tempuri.org/IStockService/MakeTransactionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.MakeTransactionResponse MakeTransaction(OpenXMLDemo.StockService.MakeTransactionRequest request);
        
        // CODEGEN: Parameter 'GetTradePointWithEstimationDetailResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradePointWithEstimationDetail", ReplyAction="http://tempuri.org/IStockService/GetTradePointWithEstimationDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTradePointWithEstimationDetailResponse GetTradePointWithEstimationDetail(OpenXMLDemo.StockService.GetTradePointWithEstimationDetailRequest request);
        
        // CODEGEN: Parameter 'DiagnosePrice_CloseAndNextOpenResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpen", ReplyAction="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenResponse DiagnosePrice_CloseAndNextOpen(OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenRequest request);
        
        // CODEGEN: Parameter 'code' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ReAggregatePriceData", ReplyAction="http://tempuri.org/IStockService/ReAggregatePriceDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.ReAggregatePriceDataResponse ReAggregatePriceData(OpenXMLDemo.StockService.ReAggregatePriceDataRequest request);
        
        // CODEGEN: Parameter 'GetXmlDoc2StringSTRATEGYResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGY", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGYResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYResponse GetXmlDoc2StringSTRATEGY(OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYRequest request);
        
        // CODEGEN: Parameter 'GetXmlDoc2StringINDICATORResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATOR", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATORResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORResponse GetXmlDoc2StringINDICATOR(OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORRequest request);
        
        // CODEGEN: Parameter 'settings' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Load_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Load_Global_SettingsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.Load_Global_SettingsResponse Load_Global_Settings(OpenXMLDemo.StockService.Load_Global_SettingsRequest request);
        
        // CODEGEN: Parameter 'settings' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Save_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Save_Global_SettingsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.Save_Global_SettingsResponse Save_Global_Settings(OpenXMLDemo.StockService.Save_Global_SettingsRequest request);
        
        // CODEGEN: Parameter 'investorCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteLog", ReplyAction="http://tempuri.org/IStockService/WriteLogResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.WriteLogResponse WriteLog(OpenXMLDemo.StockService.WriteLogRequest request);
        
        // CODEGEN: Parameter 'investorCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteExcptionLog", ReplyAction="http://tempuri.org/IStockService/WriteExcptionLogResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.WriteExcptionLogResponse WriteExcptionLog(OpenXMLDemo.StockService.WriteExcptionLogRequest request);
        
        // CODEGEN: Parameter 'GetTopPriceVarrianceMarketResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceMarket", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceMarketResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTopPriceVarrianceMarketResponse GetTopPriceVarrianceMarket(OpenXMLDemo.StockService.GetTopPriceVarrianceMarketRequest request);
        
        // CODEGEN: Parameter 'GetTopPriceVarrianceUserResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTopPriceVarrianceUserResponse GetTopPriceVarrianceUser(OpenXMLDemo.StockService.GetTopPriceVarrianceUserRequest request);
        
        // CODEGEN: Parameter 'GetTopPriceVarrianceOfUserResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserResponse GetTopPriceVarrianceOfUser(OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserRequest request);
        
        // CODEGEN: Parameter 'GetTopPriceVarrianceResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarriance", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTopPriceVarrianceResponse GetTopPriceVarriance(OpenXMLDemo.StockService.GetTopPriceVarrianceRequest request);
        
        // CODEGEN: Parameter 'GetLastPriceResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPrice", ReplyAction="http://tempuri.org/IStockService/GetLastPriceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetLastPriceResponse GetLastPrice(OpenXMLDemo.StockService.GetLastPriceRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSector_BySuperSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySuperSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorResponse GetBizSubSector_BySuperSector(OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSector_BySectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSector_BySectorResponse GetBizSubSector_BySector(OpenXMLDemo.StockService.GetBizSubSector_BySectorRequest request);
        
        // CODEGEN: Parameter 'GetPortfolio_ByInvestorAndTypeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeResponse GetPortfolio_ByInvestorAndType(OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeRequest request);
        
        // CODEGEN: Parameter 'GetPortfolio_ByTypeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolio_ByTypeResponse GetPortfolio_ByType(OpenXMLDemo.StockService.GetPortfolio_ByTypeRequest request);
        
        // CODEGEN: Parameter 'GetPortfolio_ByCodeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolio_ByCodeResponse GetPortfolio_ByCode(OpenXMLDemo.StockService.GetPortfolio_ByCodeRequest request);
        
        // CODEGEN: Parameter 'GetPortfolio_ByInvestorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolio_ByInvestorResponse GetPortfolio_ByInvestor(OpenXMLDemo.StockService.GetPortfolio_ByInvestorRequest request);
        
        // CODEGEN: Parameter 'GetTradeAlertResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert", ReplyAction="http://tempuri.org/IStockService/GetTradeAlertResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTradeAlertResponse GetTradeAlert(OpenXMLDemo.StockService.GetTradeAlertRequest request);
        
        // CODEGEN: Parameter 'GetTradeAlert_BySQLResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTradeAlert_BySQLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTradeAlert_BySQLResponse GetTradeAlert_BySQL(OpenXMLDemo.StockService.GetTradeAlert_BySQLRequest request);
        
        // CODEGEN: Parameter 'GetTransaction_BySQLResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransaction_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTransaction_BySQLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTransaction_BySQLResponse GetTransaction_BySQL(OpenXMLDemo.StockService.GetTransaction_BySQLRequest request);
        
        // CODEGEN: Parameter 'GetPortfolioDetail_ByTypeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeResponse GetPortfolioDetail_ByType(OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeRequest request);
        
        // CODEGEN: Parameter 'GetPortfolioDetail_ByCodeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeResponse GetPortfolioDetail_ByCode(OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeRequest request);
        
        // CODEGEN: Parameter 'GetOwnedStockSum_ByInvestorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorResponse GetOwnedStockSum_ByInvestor(OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorRequest request);
        
        // CODEGEN: Parameter 'GetOwnedStock_ByPortfolioResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolio", ReplyAction="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolioResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioResponse GetOwnedStock_ByPortfolio(OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioRequest request);
        
        // CODEGEN: Parameter 'GetLastPriceSumResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPriceSum", ReplyAction="http://tempuri.org/IStockService/GetLastPriceSumResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetLastPriceSumResponse GetLastPriceSum(OpenXMLDemo.StockService.GetLastPriceSumRequest request);
        
        // CODEGEN: Parameter 'GetPriceDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceData", ReplyAction="http://tempuri.org/IStockService/GetPriceDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetPriceDataResponse GetPriceData(OpenXMLDemo.StockService.GetPriceDataRequest request);
        
        // CODEGEN: Parameter 'investorCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastAlertTime", ReplyAction="http://tempuri.org/IStockService/GetLastAlertTimeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetLastAlertTimeResponse GetLastAlertTime(OpenXMLDemo.StockService.GetLastAlertTimeRequest request);
        
        // CODEGEN: Parameter 'GetData_ByTimeScale_Code_FrDateResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDate", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateResponse GetData_ByTimeScale_Code_FrDate(OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateRequest request);
        
        // CODEGEN: Parameter 'GetData_ByTimeScale_Code_DateRangeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRange", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRangeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeResponse GetData_ByTimeScale_Code_DateRange(OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeRequest request);
        
        // CODEGEN: Parameter 'timeScaleCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_TotalRow", ReplyAction="http://tempuri.org/IStockService/GetData_TotalRowResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetData_TotalRowResponse GetData_TotalRow(OpenXMLDemo.StockService.GetData_TotalRowRequest request);
        
        // CODEGEN: Parameter 'transInfo' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransactionInfo", ReplyAction="http://tempuri.org/IStockService/GetTransactionInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetTransactionInfoResponse GetTransactionInfo(OpenXMLDemo.StockService.GetTransactionInfoRequest request);
        
        // CODEGEN: Parameter 'GetMesssage_ByDateResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_ByDate", ReplyAction="http://tempuri.org/IStockService/GetMesssage_ByDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetMesssage_ByDateResponse GetMesssage_ByDate(OpenXMLDemo.StockService.GetMesssage_ByDateRequest request);
        
        // CODEGEN: Parameter 'GetMesssage_BySqlResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_BySql", ReplyAction="http://tempuri.org/IStockService/GetMesssage_BySqlResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetMesssage_BySqlResponse GetMesssage_BySql(OpenXMLDemo.StockService.GetMesssage_BySqlRequest request);
        
        // CODEGEN: Parameter 'LoadAnalysisDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/LoadAnalysisData", ReplyAction="http://tempuri.org/IStockService/LoadAnalysisDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.LoadAnalysisDataResponse LoadAnalysisData(OpenXMLDemo.StockService.LoadAnalysisDataRequest request);
        
        // CODEGEN: Parameter 'GetAnalysis_Data_ByKeyResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data_ByKey", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_Data_ByKeyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyResponse GetAnalysis_Data_ByKey(OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyRequest request);
        
        // CODEGEN: Parameter 'GetAnalysis_DataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_DataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetAnalysis_DataResponse GetAnalysis_Data(OpenXMLDemo.StockService.GetAnalysis_DataRequest request);
        
        // CODEGEN: Parameter 'GetIndicatorDataResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetIndicatorData", ReplyAction="http://tempuri.org/IStockService/GetIndicatorDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetIndicatorDataResponse GetIndicatorData(OpenXMLDemo.StockService.GetIndicatorDataRequest request);
        
        // CODEGEN: Parameter 'Estimate_Matrix_ProfitResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_Profit", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_ProfitResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.Estimate_Matrix_ProfitResponse Estimate_Matrix_Profit(OpenXMLDemo.StockService.Estimate_Matrix_ProfitRequest request);
        
        // CODEGEN: Parameter 'Estimate_Matrix_LastBizWeightResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeight", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeightResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightResponse Estimate_Matrix_LastBizWeight(OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightRequest request);
        
        // CODEGEN: Parameter 'GetSyslog_ByDateResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_ByDate", ReplyAction="http://tempuri.org/IStockService/GetSyslog_ByDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetSyslog_ByDateResponse GetSyslog_ByDate(OpenXMLDemo.StockService.GetSyslog_ByDateRequest request);
        
        // CODEGEN: Parameter 'GetSyslog_BySQLResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_BySQL", ReplyAction="http://tempuri.org/IStockService/GetSyslog_BySQLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetSyslog_BySQLResponse GetSyslog_BySQL(OpenXMLDemo.StockService.GetSyslog_BySQLRequest request);
        
        // CODEGEN: Parameter 'GetStockFullResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockFull", ReplyAction="http://tempuri.org/IStockService/GetStockFullResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStockFullResponse GetStockFull(OpenXMLDemo.StockService.GetStockFullRequest request);
        
        // CODEGEN: Parameter 'GetStockList_ByWatchListResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByWatchList", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByWatchListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStockList_ByWatchListResponse GetStockList_ByWatchList(OpenXMLDemo.StockService.GetStockList_ByWatchListRequest request);
        
        // CODEGEN: Parameter 'GetStockList_ByBizSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByBizSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStockList_ByBizSectorResponse GetStockList_ByBizSector(OpenXMLDemo.StockService.GetStockList_ByBizSectorRequest request);
        
        // CODEGEN: Parameter 'GetStockExchangeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockExchange", ReplyAction="http://tempuri.org/IStockService/GetStockExchangeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStockExchangeResponse GetStockExchange(OpenXMLDemo.StockService.GetStockExchangeRequest request);
        
        // CODEGEN: Parameter 'GetExchangeDetailResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetExchangeDetail", ReplyAction="http://tempuri.org/IStockService/GetExchangeDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetExchangeDetailResponse GetExchangeDetail(OpenXMLDemo.StockService.GetExchangeDetailRequest request);
        
        // CODEGEN: Parameter 'GetEmployeeRangeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetEmployeeRange", ReplyAction="http://tempuri.org/IStockService/GetEmployeeRangeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetEmployeeRangeResponse GetEmployeeRange(OpenXMLDemo.StockService.GetEmployeeRangeRequest request);
        
        // CODEGEN: Parameter 'GetBizIndustryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizIndustryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizIndustryResponse GetBizIndustry(OpenXMLDemo.StockService.GetBizIndustryRequest request);
        
        // CODEGEN: Parameter 'GetBizSuperSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSuperSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSuperSectorResponse GetBizSuperSector(OpenXMLDemo.StockService.GetBizSuperSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSector", ReplyAction="http://tempuri.org/IStockService/GetBizSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSectorResponse GetBizSector(OpenXMLDemo.StockService.GetBizSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSectorResponse GetBizSubSector(OpenXMLDemo.StockService.GetBizSubSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSectorByIndustryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorByIndustryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSectorByIndustryResponse GetBizSubSectorByIndustry(OpenXMLDemo.StockService.GetBizSubSectorByIndustryRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSectorBySuperSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySuperSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorResponse GetBizSubSectorBySuperSector(OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSectorBySectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSectorBySectorResponse GetBizSubSectorBySector(OpenXMLDemo.StockService.GetBizSubSectorBySectorRequest request);
        
        // CODEGEN: Parameter 'GetFeedbackCatResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetFeedbackCat", ReplyAction="http://tempuri.org/IStockService/GetFeedbackCatResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetFeedbackCatResponse GetFeedbackCat(OpenXMLDemo.StockService.GetFeedbackCatRequest request);
        
        // CODEGEN: Parameter 'GetCountryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCountry", ReplyAction="http://tempuri.org/IStockService/GetCountryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetCountryResponse GetCountry(OpenXMLDemo.StockService.GetCountryRequest request);
        
        // CODEGEN: Parameter 'GetCurrencyResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCurrency", ReplyAction="http://tempuri.org/IStockService/GetCurrencyResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetCurrencyResponse GetCurrency(OpenXMLDemo.StockService.GetCurrencyRequest request);
        
        // CODEGEN: Parameter 'GetInvestorCatResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorCat", ReplyAction="http://tempuri.org/IStockService/GetInvestorCatResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestorCatResponse GetInvestorCat(OpenXMLDemo.StockService.GetInvestorCatRequest request);
        
        // CODEGEN: Parameter 'GetSysCodeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCode", ReplyAction="http://tempuri.org/IStockService/GetSysCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetSysCodeResponse GetSysCode(OpenXMLDemo.StockService.GetSysCodeRequest request);
        
        // CODEGEN: Parameter 'GetSysCodeCatResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCodeCat", ReplyAction="http://tempuri.org/IStockService/GetSysCodeCatResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetSysCodeCatResponse GetSysCodeCat(OpenXMLDemo.StockService.GetSysCodeCatRequest request);
        
        // CODEGEN: Parameter 'GetInvestor_ByAccountResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByAccount", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestor_ByAccountResponse GetInvestor_ByAccount(OpenXMLDemo.StockService.GetInvestor_ByAccountRequest request);
        
        // CODEGEN: Parameter 'GetInvestor_ByCodeResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByCode", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestor_ByCodeResponse GetInvestor_ByCode(OpenXMLDemo.StockService.GetInvestor_ByCodeRequest request);
        
        // CODEGEN: Parameter 'GetInvestor_ByEmailResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByEmail", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByEmailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestor_ByEmailResponse GetInvestor_ByEmail(OpenXMLDemo.StockService.GetInvestor_ByEmailRequest request);
        
        // CODEGEN: Parameter 'GetInvestor_BySQLResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_BySQL", ReplyAction="http://tempuri.org/IStockService/GetInvestor_BySQLResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestor_BySQLResponse GetInvestor_BySQL(OpenXMLDemo.StockService.GetInvestor_BySQLRequest request);
        
        // CODEGEN: Parameter 'GetStock_InPortfolioResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_InPortfolio", ReplyAction="http://tempuri.org/IStockService/GetStock_InPortfolioResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStock_InPortfolioResponse GetStock_InPortfolio(OpenXMLDemo.StockService.GetStock_InPortfolioRequest request);
        
        // CODEGEN: Parameter 'GetStock_ByBizSectorResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStock_ByBizSectorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStock_ByBizSectorResponse GetStock_ByBizSector(OpenXMLDemo.StockService.GetStock_ByBizSectorRequest request);
        
        // CODEGEN: Parameter 'GetBizSubSector_ByIndustryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_ByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_ByIndustryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetBizSubSector_ByIndustryResponse GetBizSubSector_ByIndustry(OpenXMLDemo.StockService.GetBizSubSector_ByIndustryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Reset", ReplyAction="http://tempuri.org/IStockService/ResetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ClearCache", ReplyAction="http://tempuri.org/IStockService/ClearCacheResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void ClearCache();
        
        // CODEGEN: Parameter 'cacheName' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteCache", ReplyAction="http://tempuri.org/IStockService/DeleteCacheResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteCacheResponse DeleteCache(OpenXMLDemo.StockService.DeleteCacheRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetServerDateTime", ReplyAction="http://tempuri.org/IStockService/GetServerDateTimeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.DateTime GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/IsWorking", ReplyAction="http://tempuri.org/IStockService/IsWorkingResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool IsWorking();
        
        // CODEGEN: Parameter 'messageTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateMessage", ReplyAction="http://tempuri.org/IStockService/UpdateMessageResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateMessageResponse UpdateMessage(OpenXMLDemo.StockService.UpdateMessageRequest request);
        
        // CODEGEN: Parameter 'priceDataTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePriceData", ReplyAction="http://tempuri.org/IStockService/UpdatePriceDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdatePriceDataResponse UpdatePriceData(OpenXMLDemo.StockService.UpdatePriceDataRequest request);
        
        // CODEGEN: Parameter 'sysCodeCatTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCodeCat", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeCatResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateSysCodeCatResponse UpdateSysCodeCat(OpenXMLDemo.StockService.UpdateSysCodeCatRequest request);
        
        // CODEGEN: Parameter 'sysCodeTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCode", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateSysCodeResponse UpdateSysCode(OpenXMLDemo.StockService.UpdateSysCodeRequest request);
        
        // CODEGEN: Parameter 'stockCodeTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStock", ReplyAction="http://tempuri.org/IStockService/UpdateStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateStockResponse UpdateStock(OpenXMLDemo.StockService.UpdateStockRequest request);
        
        // CODEGEN: Parameter 'investorTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestor", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateInvestorResponse UpdateInvestor(OpenXMLDemo.StockService.UpdateInvestorRequest request);
        
        // CODEGEN: Parameter 'portfolioTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolio", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdatePortfolioResponse UpdatePortfolio(OpenXMLDemo.StockService.UpdatePortfolioRequest request);
        
        // CODEGEN: Parameter 'portfolioDetailTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolioDetail", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdatePortfolioDetailResponse UpdatePortfolioDetail(OpenXMLDemo.StockService.UpdatePortfolioDetailRequest request);
        
        // CODEGEN: Parameter 'stockExchangeTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStockExchange", ReplyAction="http://tempuri.org/IStockService/UpdateStockExchangeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateStockExchangeResponse UpdateStockExchange(OpenXMLDemo.StockService.UpdateStockExchangeRequest request);
        
        // CODEGEN: Parameter 'exchangeDetailTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateExchangeDetail", ReplyAction="http://tempuri.org/IStockService/UpdateExchangeDetailResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateExchangeDetailResponse UpdateExchangeDetail(OpenXMLDemo.StockService.UpdateExchangeDetailRequest request);
        
        // CODEGEN: Parameter 'transactionsTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTransactions", ReplyAction="http://tempuri.org/IStockService/UpdateTransactionsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateTransactionsResponse UpdateTransactions(OpenXMLDemo.StockService.UpdateTransactionsRequest request);
        
        // CODEGEN: Parameter 'investorStockTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestorStock", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateInvestorStockResponse UpdateInvestorStock(OpenXMLDemo.StockService.UpdateInvestorStockRequest request);
        
        // CODEGEN: Parameter 'tradeAlertTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTradeAlert", ReplyAction="http://tempuri.org/IStockService/UpdateTradeAlertResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateTradeAlertResponse UpdateTradeAlert(OpenXMLDemo.StockService.UpdateTradeAlertRequest request);
        
        // CODEGEN: Parameter 'sysAutoKeyPendingTbl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysAutoKeyPending", ReplyAction="http://tempuri.org/IStockService/UpdateSysAutoKeyPendingResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.UpdateSysAutoKeyPendingResponse UpdateSysAutoKeyPending(OpenXMLDemo.StockService.UpdateSysAutoKeyPendingRequest request);
        
        // CODEGEN: Parameter 'stockCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStock", ReplyAction="http://tempuri.org/IStockService/DeleteStockResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteStockResponse DeleteStock(OpenXMLDemo.StockService.DeleteStockRequest request);
        
        // CODEGEN: Parameter 'code' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStockExchange", ReplyAction="http://tempuri.org/IStockService/DeleteStockExchangeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteStockExchangeResponse DeleteStockExchange(OpenXMLDemo.StockService.DeleteStockExchangeRequest request);
        
        // CODEGEN: Parameter 'investorCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteInvestor", ReplyAction="http://tempuri.org/IStockService/DeleteInvestorResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteInvestorResponse DeleteInvestor(OpenXMLDemo.StockService.DeleteInvestorRequest request);
        
        // CODEGEN: Parameter 'portfolioCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeletePortfolio", ReplyAction="http://tempuri.org/IStockService/DeletePortfolioResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeletePortfolioResponse DeletePortfolio(OpenXMLDemo.StockService.DeletePortfolioRequest request);
        
        // CODEGEN: Parameter 'catCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCodeCat", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeCatResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteSysCodeCatResponse DeleteSysCodeCat(OpenXMLDemo.StockService.DeleteSysCodeCatRequest request);
        
        // CODEGEN: Parameter 'catCode' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCode", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.DeleteSysCodeResponse DeleteSysCode(OpenXMLDemo.StockService.DeleteSysCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteTradeAlert", ReplyAction="http://tempuri.org/IStockService/DeleteTradeAlertResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void DeleteTradeAlert(int alertId);
        
        // CODEGEN: Parameter 'GetStockByStatusResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockByStatus", ReplyAction="http://tempuri.org/IStockService/GetStockByStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetStockByStatusResponse GetStockByStatus(OpenXMLDemo.StockService.GetStockByStatusRequest request);
        
        // CODEGEN: Parameter 'GetInvestorShortListResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorShortList", ReplyAction="http://tempuri.org/IStockService/GetInvestorShortListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OpenXMLDemo.StockService.GetInvestorShortListResponse GetInvestorShortList(OpenXMLDemo.StockService.GetInvestorShortListRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class TradePointInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BusinessInfo businessInfoField;
        
        private int dataIdxField;
        
        private bool dataIdxFieldSpecified;
        
        private AppTypesTradeActions tradeActionField;
        
        private bool tradeActionFieldSpecified;
        
        private bool isValidField;
        
        private bool isValidFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public BusinessInfo BusinessInfo {
            get {
                return this.businessInfoField;
            }
            set {
                this.businessInfoField = value;
                this.RaisePropertyChanged("BusinessInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int DataIdx {
            get {
                return this.dataIdxField;
            }
            set {
                this.dataIdxField = value;
                this.RaisePropertyChanged("DataIdx");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataIdxSpecified {
            get {
                return this.dataIdxFieldSpecified;
            }
            set {
                this.dataIdxFieldSpecified = value;
                this.RaisePropertyChanged("DataIdxSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public AppTypesTradeActions TradeAction {
            get {
                return this.tradeActionField;
            }
            set {
                this.tradeActionField = value;
                this.RaisePropertyChanged("TradeAction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TradeActionSpecified {
            get {
                return this.tradeActionFieldSpecified;
            }
            set {
                this.tradeActionFieldSpecified = value;
                this.RaisePropertyChanged("TradeActionSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool isValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
                this.RaisePropertyChanged("isValid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isValidSpecified {
            get {
                return this.isValidFieldSpecified;
            }
            set {
                this.isValidFieldSpecified = value;
                this.RaisePropertyChanged("isValidSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class BusinessInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AppTypesMarketTrend longTermTrendField;
        
        private bool longTermTrendFieldSpecified;
        
        private AppTypesMarketTrend mediumTermTrendField;
        
        private bool mediumTermTrendFieldSpecified;
        
        private AppTypesMarketTrend shortTermTrendField;
        
        private bool shortTermTrendFieldSpecified;
        
        private double short_ResistanceField;
        
        private bool short_ResistanceFieldSpecified;
        
        private double short_SupportField;
        
        private bool short_SupportFieldSpecified;
        
        private double short_TargetField;
        
        private bool short_TargetFieldSpecified;
        
        private double stop_LossField;
        
        private bool stop_LossFieldSpecified;
        
        private double weightField;
        
        private bool weightFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AppTypesMarketTrend LongTermTrend {
            get {
                return this.longTermTrendField;
            }
            set {
                this.longTermTrendField = value;
                this.RaisePropertyChanged("LongTermTrend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongTermTrendSpecified {
            get {
                return this.longTermTrendFieldSpecified;
            }
            set {
                this.longTermTrendFieldSpecified = value;
                this.RaisePropertyChanged("LongTermTrendSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public AppTypesMarketTrend MediumTermTrend {
            get {
                return this.mediumTermTrendField;
            }
            set {
                this.mediumTermTrendField = value;
                this.RaisePropertyChanged("MediumTermTrend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MediumTermTrendSpecified {
            get {
                return this.mediumTermTrendFieldSpecified;
            }
            set {
                this.mediumTermTrendFieldSpecified = value;
                this.RaisePropertyChanged("MediumTermTrendSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public AppTypesMarketTrend ShortTermTrend {
            get {
                return this.shortTermTrendField;
            }
            set {
                this.shortTermTrendField = value;
                this.RaisePropertyChanged("ShortTermTrend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortTermTrendSpecified {
            get {
                return this.shortTermTrendFieldSpecified;
            }
            set {
                this.shortTermTrendFieldSpecified = value;
                this.RaisePropertyChanged("ShortTermTrendSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Short_Resistance {
            get {
                return this.short_ResistanceField;
            }
            set {
                this.short_ResistanceField = value;
                this.RaisePropertyChanged("Short_Resistance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Short_ResistanceSpecified {
            get {
                return this.short_ResistanceFieldSpecified;
            }
            set {
                this.short_ResistanceFieldSpecified = value;
                this.RaisePropertyChanged("Short_ResistanceSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Short_Support {
            get {
                return this.short_SupportField;
            }
            set {
                this.short_SupportField = value;
                this.RaisePropertyChanged("Short_Support");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Short_SupportSpecified {
            get {
                return this.short_SupportFieldSpecified;
            }
            set {
                this.short_SupportFieldSpecified = value;
                this.RaisePropertyChanged("Short_SupportSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Short_Target {
            get {
                return this.short_TargetField;
            }
            set {
                this.short_TargetField = value;
                this.RaisePropertyChanged("Short_Target");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Short_TargetSpecified {
            get {
                return this.short_TargetFieldSpecified;
            }
            set {
                this.short_TargetFieldSpecified = value;
                this.RaisePropertyChanged("Short_TargetSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Stop_Loss {
            get {
                return this.stop_LossField;
            }
            set {
                this.stop_LossField = value;
                this.RaisePropertyChanged("Stop_Loss");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Stop_LossSpecified {
            get {
                return this.stop_LossFieldSpecified;
            }
            set {
                this.stop_LossFieldSpecified = value;
                this.RaisePropertyChanged("Stop_LossSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
                this.RaisePropertyChanged("Weight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightSpecified {
            get {
                return this.weightFieldSpecified;
            }
            set {
                this.weightFieldSpecified = value;
                this.RaisePropertyChanged("WeightSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.MarketTrend", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesMarketTrend {
        
        /// <remarks/>
        Unspecified,
        
        /// <remarks/>
        Sidebar,
        
        /// <remarks/>
        Upward,
        
        /// <remarks/>
        Downward,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class DataValues : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int firstValidValueField;
        
        private bool firstValidValueFieldSpecified;
        
        private double[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int FirstValidValue {
            get {
                return this.firstValidValueField;
            }
            set {
                this.firstValidValueField = value;
                this.RaisePropertyChanged("FirstValidValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstValidValueSpecified {
            get {
                return this.firstValidValueFieldSpecified;
            }
            set {
                this.firstValidValueFieldSpecified = value;
                this.RaisePropertyChanged("FirstValidValueSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public double[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class TransactionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal availableCashField;
        
        private bool availableCashFieldSpecified;
        
        private string portfolioField;
        
        private decimal priceField;
        
        private bool priceFieldSpecified;
        
        private System.DateTime priceDateField;
        
        private bool priceDateFieldSpecified;
        
        private decimal priceRatioField;
        
        private bool priceRatioFieldSpecified;
        
        private string stockCodeField;
        
        private decimal transFeePercField;
        
        private bool transFeePercFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal availableCash {
            get {
                return this.availableCashField;
            }
            set {
                this.availableCashField = value;
                this.RaisePropertyChanged("availableCash");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool availableCashSpecified {
            get {
                return this.availableCashFieldSpecified;
            }
            set {
                this.availableCashFieldSpecified = value;
                this.RaisePropertyChanged("availableCashSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string portfolio {
            get {
                return this.portfolioField;
            }
            set {
                this.portfolioField = value;
                this.RaisePropertyChanged("portfolio");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
                this.RaisePropertyChanged("price");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
                this.RaisePropertyChanged("priceSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime priceDate {
            get {
                return this.priceDateField;
            }
            set {
                this.priceDateField = value;
                this.RaisePropertyChanged("priceDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceDateSpecified {
            get {
                return this.priceDateFieldSpecified;
            }
            set {
                this.priceDateFieldSpecified = value;
                this.RaisePropertyChanged("priceDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal priceRatio {
            get {
                return this.priceRatioField;
            }
            set {
                this.priceRatioField = value;
                this.RaisePropertyChanged("priceRatio");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceRatioSpecified {
            get {
                return this.priceRatioFieldSpecified;
            }
            set {
                this.priceRatioFieldSpecified = value;
                this.RaisePropertyChanged("priceRatioSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string stockCode {
            get {
                return this.stockCodeField;
            }
            set {
                this.stockCodeField = value;
                this.RaisePropertyChanged("stockCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public decimal transFeePerc {
            get {
                return this.transFeePercField;
            }
            set {
                this.transFeePercField = value;
                this.RaisePropertyChanged("transFeePerc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transFeePercSpecified {
            get {
                return this.transFeePercFieldSpecified;
            }
            set {
                this.transFeePercFieldSpecified = value;
                this.RaisePropertyChanged("transFeePercSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="SysLog.LogData", Namespace="http://schemas.datacontract.org/2004/07/common")]
    public partial class SysLogLogData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private string infoField;
        
        private string messageField;
        
        private string sourceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
                this.RaisePropertyChanged("info");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
                this.RaisePropertyChanged("source");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public partial class GlobalSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short alertDataCountField;
        
        private bool alertDataCountFieldSpecified;
        
        private short autoCheckInSecondsField;
        
        private bool autoCheckInSecondsFieldSpecified;
        
        private int autoEditKeySizeField;
        
        private bool autoEditKeySizeFieldSpecified;
        
        private short chartMaxLoadCount_FIRSTField;
        
        private bool chartMaxLoadCount_FIRSTFieldSpecified;
        
        private short chartMaxLoadCount_MOREField;
        
        private bool chartMaxLoadCount_MOREFieldSpecified;
        
        private short checkAlertInSecondsField;
        
        private bool checkAlertInSecondsFieldSpecified;
        
        private string dataKeyPrefixField;
        
        private int dataKeySizeField;
        
        private bool dataKeySizeFieldSpecified;
        
        private short dayScanForLastPriceField;
        
        private bool dayScanForLastPriceFieldSpecified;
        
        private AppTypesTimeRanges defaultTimeRangeField;
        
        private bool defaultTimeRangeFieldSpecified;
        
        private string defaultTimeScaleCodeField;
        
        private AppTypesLanguageCodes defautLanguageField;
        
        private bool defautLanguageFieldSpecified;
        
        private byte passwordMinLenField;
        
        private bool passwordMinLenFieldSpecified;
        
        private short refreshDataInSecsField;
        
        private bool refreshDataInSecsFieldSpecified;
        
        private short screeningDataCountField;
        
        private bool screeningDataCountFieldSpecified;
        
        private string screeningTimeScaleCodeField;
        
        private int timeOut_AutoKeyField;
        
        private bool timeOut_AutoKeyFieldSpecified;
        
        private short timerIntervalInSecsField;
        
        private bool timerIntervalInSecsFieldSpecified;
        
        private bool useStrongPasswordField;
        
        private bool useStrongPasswordFieldSpecified;
        
        private AppTypesSyslogMedia writeLogAccessField;
        
        private bool writeLogAccessFieldSpecified;
        
        private string smtpAddressField;
        
        private string smtpAuthAccountField;
        
        private string smtpAuthPasswordField;
        
        private int smtpPortField;
        
        private bool smtpPortFieldSpecified;
        
        private bool smtpSSLField;
        
        private bool smtpSSLFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short AlertDataCount {
            get {
                return this.alertDataCountField;
            }
            set {
                this.alertDataCountField = value;
                this.RaisePropertyChanged("AlertDataCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlertDataCountSpecified {
            get {
                return this.alertDataCountFieldSpecified;
            }
            set {
                this.alertDataCountFieldSpecified = value;
                this.RaisePropertyChanged("AlertDataCountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public short AutoCheckInSeconds {
            get {
                return this.autoCheckInSecondsField;
            }
            set {
                this.autoCheckInSecondsField = value;
                this.RaisePropertyChanged("AutoCheckInSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoCheckInSecondsSpecified {
            get {
                return this.autoCheckInSecondsFieldSpecified;
            }
            set {
                this.autoCheckInSecondsFieldSpecified = value;
                this.RaisePropertyChanged("AutoCheckInSecondsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int AutoEditKeySize {
            get {
                return this.autoEditKeySizeField;
            }
            set {
                this.autoEditKeySizeField = value;
                this.RaisePropertyChanged("AutoEditKeySize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoEditKeySizeSpecified {
            get {
                return this.autoEditKeySizeFieldSpecified;
            }
            set {
                this.autoEditKeySizeFieldSpecified = value;
                this.RaisePropertyChanged("AutoEditKeySizeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public short ChartMaxLoadCount_FIRST {
            get {
                return this.chartMaxLoadCount_FIRSTField;
            }
            set {
                this.chartMaxLoadCount_FIRSTField = value;
                this.RaisePropertyChanged("ChartMaxLoadCount_FIRST");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMaxLoadCount_FIRSTSpecified {
            get {
                return this.chartMaxLoadCount_FIRSTFieldSpecified;
            }
            set {
                this.chartMaxLoadCount_FIRSTFieldSpecified = value;
                this.RaisePropertyChanged("ChartMaxLoadCount_FIRSTSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public short ChartMaxLoadCount_MORE {
            get {
                return this.chartMaxLoadCount_MOREField;
            }
            set {
                this.chartMaxLoadCount_MOREField = value;
                this.RaisePropertyChanged("ChartMaxLoadCount_MORE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChartMaxLoadCount_MORESpecified {
            get {
                return this.chartMaxLoadCount_MOREFieldSpecified;
            }
            set {
                this.chartMaxLoadCount_MOREFieldSpecified = value;
                this.RaisePropertyChanged("ChartMaxLoadCount_MORESpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public short CheckAlertInSeconds {
            get {
                return this.checkAlertInSecondsField;
            }
            set {
                this.checkAlertInSecondsField = value;
                this.RaisePropertyChanged("CheckAlertInSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckAlertInSecondsSpecified {
            get {
                return this.checkAlertInSecondsFieldSpecified;
            }
            set {
                this.checkAlertInSecondsFieldSpecified = value;
                this.RaisePropertyChanged("CheckAlertInSecondsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string DataKeyPrefix {
            get {
                return this.dataKeyPrefixField;
            }
            set {
                this.dataKeyPrefixField = value;
                this.RaisePropertyChanged("DataKeyPrefix");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int DataKeySize {
            get {
                return this.dataKeySizeField;
            }
            set {
                this.dataKeySizeField = value;
                this.RaisePropertyChanged("DataKeySize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataKeySizeSpecified {
            get {
                return this.dataKeySizeFieldSpecified;
            }
            set {
                this.dataKeySizeFieldSpecified = value;
                this.RaisePropertyChanged("DataKeySizeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public short DayScanForLastPrice {
            get {
                return this.dayScanForLastPriceField;
            }
            set {
                this.dayScanForLastPriceField = value;
                this.RaisePropertyChanged("DayScanForLastPrice");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DayScanForLastPriceSpecified {
            get {
                return this.dayScanForLastPriceFieldSpecified;
            }
            set {
                this.dayScanForLastPriceFieldSpecified = value;
                this.RaisePropertyChanged("DayScanForLastPriceSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public AppTypesTimeRanges DefaultTimeRange {
            get {
                return this.defaultTimeRangeField;
            }
            set {
                this.defaultTimeRangeField = value;
                this.RaisePropertyChanged("DefaultTimeRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultTimeRangeSpecified {
            get {
                return this.defaultTimeRangeFieldSpecified;
            }
            set {
                this.defaultTimeRangeFieldSpecified = value;
                this.RaisePropertyChanged("DefaultTimeRangeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public string DefaultTimeScaleCode {
            get {
                return this.defaultTimeScaleCodeField;
            }
            set {
                this.defaultTimeScaleCodeField = value;
                this.RaisePropertyChanged("DefaultTimeScaleCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public AppTypesLanguageCodes DefautLanguage {
            get {
                return this.defautLanguageField;
            }
            set {
                this.defautLanguageField = value;
                this.RaisePropertyChanged("DefautLanguage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefautLanguageSpecified {
            get {
                return this.defautLanguageFieldSpecified;
            }
            set {
                this.defautLanguageFieldSpecified = value;
                this.RaisePropertyChanged("DefautLanguageSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public byte PasswordMinLen {
            get {
                return this.passwordMinLenField;
            }
            set {
                this.passwordMinLenField = value;
                this.RaisePropertyChanged("PasswordMinLen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PasswordMinLenSpecified {
            get {
                return this.passwordMinLenFieldSpecified;
            }
            set {
                this.passwordMinLenFieldSpecified = value;
                this.RaisePropertyChanged("PasswordMinLenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public short RefreshDataInSecs {
            get {
                return this.refreshDataInSecsField;
            }
            set {
                this.refreshDataInSecsField = value;
                this.RaisePropertyChanged("RefreshDataInSecs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshDataInSecsSpecified {
            get {
                return this.refreshDataInSecsFieldSpecified;
            }
            set {
                this.refreshDataInSecsFieldSpecified = value;
                this.RaisePropertyChanged("RefreshDataInSecsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public short ScreeningDataCount {
            get {
                return this.screeningDataCountField;
            }
            set {
                this.screeningDataCountField = value;
                this.RaisePropertyChanged("ScreeningDataCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScreeningDataCountSpecified {
            get {
                return this.screeningDataCountFieldSpecified;
            }
            set {
                this.screeningDataCountFieldSpecified = value;
                this.RaisePropertyChanged("ScreeningDataCountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=15)]
        public string ScreeningTimeScaleCode {
            get {
                return this.screeningTimeScaleCodeField;
            }
            set {
                this.screeningTimeScaleCodeField = value;
                this.RaisePropertyChanged("ScreeningTimeScaleCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int TimeOut_AutoKey {
            get {
                return this.timeOut_AutoKeyField;
            }
            set {
                this.timeOut_AutoKeyField = value;
                this.RaisePropertyChanged("TimeOut_AutoKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeOut_AutoKeySpecified {
            get {
                return this.timeOut_AutoKeyFieldSpecified;
            }
            set {
                this.timeOut_AutoKeyFieldSpecified = value;
                this.RaisePropertyChanged("TimeOut_AutoKeySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public short TimerIntervalInSecs {
            get {
                return this.timerIntervalInSecsField;
            }
            set {
                this.timerIntervalInSecsField = value;
                this.RaisePropertyChanged("TimerIntervalInSecs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimerIntervalInSecsSpecified {
            get {
                return this.timerIntervalInSecsFieldSpecified;
            }
            set {
                this.timerIntervalInSecsFieldSpecified = value;
                this.RaisePropertyChanged("TimerIntervalInSecsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool UseStrongPassword {
            get {
                return this.useStrongPasswordField;
            }
            set {
                this.useStrongPasswordField = value;
                this.RaisePropertyChanged("UseStrongPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseStrongPasswordSpecified {
            get {
                return this.useStrongPasswordFieldSpecified;
            }
            set {
                this.useStrongPasswordFieldSpecified = value;
                this.RaisePropertyChanged("UseStrongPasswordSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public AppTypesSyslogMedia WriteLogAccess {
            get {
                return this.writeLogAccessField;
            }
            set {
                this.writeLogAccessField = value;
                this.RaisePropertyChanged("WriteLogAccess");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WriteLogAccessSpecified {
            get {
                return this.writeLogAccessFieldSpecified;
            }
            set {
                this.writeLogAccessFieldSpecified = value;
                this.RaisePropertyChanged("WriteLogAccessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=20)]
        public string smtpAddress {
            get {
                return this.smtpAddressField;
            }
            set {
                this.smtpAddressField = value;
                this.RaisePropertyChanged("smtpAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=21)]
        public string smtpAuthAccount {
            get {
                return this.smtpAuthAccountField;
            }
            set {
                this.smtpAuthAccountField = value;
                this.RaisePropertyChanged("smtpAuthAccount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=22)]
        public string smtpAuthPassword {
            get {
                return this.smtpAuthPasswordField;
            }
            set {
                this.smtpAuthPasswordField = value;
                this.RaisePropertyChanged("smtpAuthPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public int smtpPort {
            get {
                return this.smtpPortField;
            }
            set {
                this.smtpPortField = value;
                this.RaisePropertyChanged("smtpPort");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool smtpPortSpecified {
            get {
                return this.smtpPortFieldSpecified;
            }
            set {
                this.smtpPortFieldSpecified = value;
                this.RaisePropertyChanged("smtpPortSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public bool smtpSSL {
            get {
                return this.smtpSSLField;
            }
            set {
                this.smtpSSLField = value;
                this.RaisePropertyChanged("smtpSSL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool smtpSSLSpecified {
            get {
                return this.smtpSSLFieldSpecified;
            }
            set {
                this.smtpSSLFieldSpecified = value;
                this.RaisePropertyChanged("smtpSSLSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.TimeRanges", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesTimeRanges {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        W1,
        
        /// <remarks/>
        W2,
        
        /// <remarks/>
        W3,
        
        /// <remarks/>
        M1,
        
        /// <remarks/>
        M2,
        
        /// <remarks/>
        M3,
        
        /// <remarks/>
        M4,
        
        /// <remarks/>
        M5,
        
        /// <remarks/>
        M6,
        
        /// <remarks/>
        YTD,
        
        /// <remarks/>
        Y1,
        
        /// <remarks/>
        Y2,
        
        /// <remarks/>
        Y3,
        
        /// <remarks/>
        Y4,
        
        /// <remarks/>
        Y5,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.LanguageCodes", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesLanguageCodes {
        
        /// <remarks/>
        VI,
        
        /// <remarks/>
        EN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.SyslogMedia", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesSyslogMedia {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        File,
        
        /// <remarks/>
        Database,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class EstimateOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal maxBuyAmtPercField;
        
        private bool maxBuyAmtPercFieldSpecified;
        
        private decimal maxBuyQtyPercField;
        
        private bool maxBuyQtyPercFieldSpecified;
        
        private decimal qtyAccumulatePercField;
        
        private bool qtyAccumulatePercFieldSpecified;
        
        private decimal qtyReducePercField;
        
        private bool qtyReducePercFieldSpecified;
        
        private decimal totalCapAmtField;
        
        private bool totalCapAmtFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal MaxBuyAmtPerc {
            get {
                return this.maxBuyAmtPercField;
            }
            set {
                this.maxBuyAmtPercField = value;
                this.RaisePropertyChanged("MaxBuyAmtPerc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxBuyAmtPercSpecified {
            get {
                return this.maxBuyAmtPercFieldSpecified;
            }
            set {
                this.maxBuyAmtPercFieldSpecified = value;
                this.RaisePropertyChanged("MaxBuyAmtPercSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal MaxBuyQtyPerc {
            get {
                return this.maxBuyQtyPercField;
            }
            set {
                this.maxBuyQtyPercField = value;
                this.RaisePropertyChanged("MaxBuyQtyPerc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxBuyQtyPercSpecified {
            get {
                return this.maxBuyQtyPercFieldSpecified;
            }
            set {
                this.maxBuyQtyPercFieldSpecified = value;
                this.RaisePropertyChanged("MaxBuyQtyPercSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal QtyAccumulatePerc {
            get {
                return this.qtyAccumulatePercField;
            }
            set {
                this.qtyAccumulatePercField = value;
                this.RaisePropertyChanged("QtyAccumulatePerc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyAccumulatePercSpecified {
            get {
                return this.qtyAccumulatePercFieldSpecified;
            }
            set {
                this.qtyAccumulatePercFieldSpecified = value;
                this.RaisePropertyChanged("QtyAccumulatePercSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal QtyReducePerc {
            get {
                return this.qtyReducePercField;
            }
            set {
                this.qtyReducePercField = value;
                this.RaisePropertyChanged("QtyReducePerc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtyReducePercSpecified {
            get {
                return this.qtyReducePercFieldSpecified;
            }
            set {
                this.qtyReducePercFieldSpecified = value;
                this.RaisePropertyChanged("QtyReducePercSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal TotalCapAmt {
            get {
                return this.totalCapAmtField;
            }
            set {
                this.totalCapAmtField = value;
                this.RaisePropertyChanged("TotalCapAmt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCapAmtSpecified {
            get {
                return this.totalCapAmtFieldSpecified;
            }
            set {
                this.totalCapAmtFieldSpecified = value;
                this.RaisePropertyChanged("TotalCapAmtSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
    public partial class DataParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int maxDataCountField;
        
        private bool maxDataCountFieldSpecified;
        
        private AppTypesTimeRanges timeRangeField;
        
        private bool timeRangeFieldSpecified;
        
        private string timeScaleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MaxDataCount {
            get {
                return this.maxDataCountField;
            }
            set {
                this.maxDataCountField = value;
                this.RaisePropertyChanged("MaxDataCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxDataCountSpecified {
            get {
                return this.maxDataCountFieldSpecified;
            }
            set {
                this.maxDataCountFieldSpecified = value;
                this.RaisePropertyChanged("MaxDataCountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public AppTypesTimeRanges TimeRange {
            get {
                return this.timeRangeField;
            }
            set {
                this.timeRangeField = value;
                this.RaisePropertyChanged("TimeRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeRangeSpecified {
            get {
                return this.timeRangeFieldSpecified;
            }
            set {
                this.timeRangeFieldSpecified = value;
                this.RaisePropertyChanged("TimeRangeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string TimeScale {
            get {
                return this.timeScaleField;
            }
            set {
                this.timeScaleField = value;
                this.RaisePropertyChanged("TimeScale");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.TradeActions", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesTradeActions {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Buy,
        
        /// <remarks/>
        Sell,
        
        /// <remarks/>
        Accumulate,
        
        /// <remarks/>
        ClearAll,
        
        /// <remarks/>
        Select,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Analysis", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AnalysisRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dataKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strategyCode;
        
        public AnalysisRequest() {
        }
        
        public AnalysisRequest(string dataKey, string strategyCode) {
            this.dataKey = dataKey;
            this.strategyCode = strategyCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AnalysisResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AnalysisResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
        public TradePointInfo[] AnalysisResult;
        
        public AnalysisResponse() {
        }
        
        public AnalysisResponse(TradePointInfo[] AnalysisResult) {
            this.AnalysisResult = AnalysisResult;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("baseDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class baseDS : global::System.Data.DataSet {
        
        private sysLogDataTable tablesysLog;
        
        private stockReportDataTable tablestockReport;
        
        private investorDataTable tableinvestor;
        
        private investorStockDataTable tableinvestorStock;
        
        private transactionsDataTable tabletransactions;
        
        private priceDataDataTable tablepriceData;
        
        private stockCodeDataTable tablestockCode;
        
        private sysCodeDataTable tablesysCode;
        
        private sysCodeCatDataTable tablesysCodeCat;
        
        private sysConfigDataTable tablesysConfig;
        
        private sysAutoKeyDataTable tablesysAutoKey;
        
        private sysAutoKeyPendingDataTable tablesysAutoKeyPending;
        
        private bizSectorDataTable tablebizSector;
        
        private countryDataTable tablecountry;
        
        private currencyDataTable tablecurrency;
        
        private investorCatDataTable tableinvestorCat;
        
        private employeeRangeDataTable tableemployeeRange;
        
        private bizIndustryDataTable tablebizIndustry;
        
        private bizSuperSectorDataTable tablebizSuperSector;
        
        private bizSubSectorDataTable tablebizSubSector;
        
        private portfolioDataTable tableportfolio;
        
        private tradeAlertDataTable tabletradeAlert;
        
        private priceDataSumDataTable tablepriceDataSum;
        
        private portfolioDetailDataTable tableportfolioDetail;
        
        private priceDataStatDataTable tablepriceDataStat;
        
        private lastPriceDataDataTable tablelastPriceData;
        
        private messagesDataTable tablemessages;
        
        private feedbackCatDataTable tablefeedbackCat;
        
        private exchangeDetailDataTable tableexchangeDetail;
        
        private stockExchangeDataTable tablestockExchange;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public baseDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected baseDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["sysLog"] != null)) {
                    base.Tables.Add(new sysLogDataTable(ds.Tables["sysLog"]));
                }
                if ((ds.Tables["stockReport"] != null)) {
                    base.Tables.Add(new stockReportDataTable(ds.Tables["stockReport"]));
                }
                if ((ds.Tables["investor"] != null)) {
                    base.Tables.Add(new investorDataTable(ds.Tables["investor"]));
                }
                if ((ds.Tables["investorStock"] != null)) {
                    base.Tables.Add(new investorStockDataTable(ds.Tables["investorStock"]));
                }
                if ((ds.Tables["transactions"] != null)) {
                    base.Tables.Add(new transactionsDataTable(ds.Tables["transactions"]));
                }
                if ((ds.Tables["priceData"] != null)) {
                    base.Tables.Add(new priceDataDataTable(ds.Tables["priceData"]));
                }
                if ((ds.Tables["stockCode"] != null)) {
                    base.Tables.Add(new stockCodeDataTable(ds.Tables["stockCode"]));
                }
                if ((ds.Tables["sysCode"] != null)) {
                    base.Tables.Add(new sysCodeDataTable(ds.Tables["sysCode"]));
                }
                if ((ds.Tables["sysCodeCat"] != null)) {
                    base.Tables.Add(new sysCodeCatDataTable(ds.Tables["sysCodeCat"]));
                }
                if ((ds.Tables["sysConfig"] != null)) {
                    base.Tables.Add(new sysConfigDataTable(ds.Tables["sysConfig"]));
                }
                if ((ds.Tables["sysAutoKey"] != null)) {
                    base.Tables.Add(new sysAutoKeyDataTable(ds.Tables["sysAutoKey"]));
                }
                if ((ds.Tables["sysAutoKeyPending"] != null)) {
                    base.Tables.Add(new sysAutoKeyPendingDataTable(ds.Tables["sysAutoKeyPending"]));
                }
                if ((ds.Tables["bizSector"] != null)) {
                    base.Tables.Add(new bizSectorDataTable(ds.Tables["bizSector"]));
                }
                if ((ds.Tables["country"] != null)) {
                    base.Tables.Add(new countryDataTable(ds.Tables["country"]));
                }
                if ((ds.Tables["currency"] != null)) {
                    base.Tables.Add(new currencyDataTable(ds.Tables["currency"]));
                }
                if ((ds.Tables["investorCat"] != null)) {
                    base.Tables.Add(new investorCatDataTable(ds.Tables["investorCat"]));
                }
                if ((ds.Tables["employeeRange"] != null)) {
                    base.Tables.Add(new employeeRangeDataTable(ds.Tables["employeeRange"]));
                }
                if ((ds.Tables["bizIndustry"] != null)) {
                    base.Tables.Add(new bizIndustryDataTable(ds.Tables["bizIndustry"]));
                }
                if ((ds.Tables["bizSuperSector"] != null)) {
                    base.Tables.Add(new bizSuperSectorDataTable(ds.Tables["bizSuperSector"]));
                }
                if ((ds.Tables["bizSubSector"] != null)) {
                    base.Tables.Add(new bizSubSectorDataTable(ds.Tables["bizSubSector"]));
                }
                if ((ds.Tables["portfolio"] != null)) {
                    base.Tables.Add(new portfolioDataTable(ds.Tables["portfolio"]));
                }
                if ((ds.Tables["tradeAlert"] != null)) {
                    base.Tables.Add(new tradeAlertDataTable(ds.Tables["tradeAlert"]));
                }
                if ((ds.Tables["priceDataSum"] != null)) {
                    base.Tables.Add(new priceDataSumDataTable(ds.Tables["priceDataSum"]));
                }
                if ((ds.Tables["portfolioDetail"] != null)) {
                    base.Tables.Add(new portfolioDetailDataTable(ds.Tables["portfolioDetail"]));
                }
                if ((ds.Tables["priceDataStat"] != null)) {
                    base.Tables.Add(new priceDataStatDataTable(ds.Tables["priceDataStat"]));
                }
                if ((ds.Tables["lastPriceData"] != null)) {
                    base.Tables.Add(new lastPriceDataDataTable(ds.Tables["lastPriceData"]));
                }
                if ((ds.Tables["messages"] != null)) {
                    base.Tables.Add(new messagesDataTable(ds.Tables["messages"]));
                }
                if ((ds.Tables["feedbackCat"] != null)) {
                    base.Tables.Add(new feedbackCatDataTable(ds.Tables["feedbackCat"]));
                }
                if ((ds.Tables["exchangeDetail"] != null)) {
                    base.Tables.Add(new exchangeDetailDataTable(ds.Tables["exchangeDetail"]));
                }
                if ((ds.Tables["stockExchange"] != null)) {
                    base.Tables.Add(new stockExchangeDataTable(ds.Tables["stockExchange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysLogDataTable sysLog {
            get {
                return this.tablesysLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockReportDataTable stockReport {
            get {
                return this.tablestockReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investorDataTable investor {
            get {
                return this.tableinvestor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investorStockDataTable investorStock {
            get {
                return this.tableinvestorStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public transactionsDataTable transactions {
            get {
                return this.tabletransactions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public priceDataDataTable priceData {
            get {
                return this.tablepriceData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockCodeDataTable stockCode {
            get {
                return this.tablestockCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysCodeDataTable sysCode {
            get {
                return this.tablesysCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysCodeCatDataTable sysCodeCat {
            get {
                return this.tablesysCodeCat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysConfigDataTable sysConfig {
            get {
                return this.tablesysConfig;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysAutoKeyDataTable sysAutoKey {
            get {
                return this.tablesysAutoKey;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sysAutoKeyPendingDataTable sysAutoKeyPending {
            get {
                return this.tablesysAutoKeyPending;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bizSectorDataTable bizSector {
            get {
                return this.tablebizSector;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public countryDataTable country {
            get {
                return this.tablecountry;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public currencyDataTable currency {
            get {
                return this.tablecurrency;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investorCatDataTable investorCat {
            get {
                return this.tableinvestorCat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employeeRangeDataTable employeeRange {
            get {
                return this.tableemployeeRange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bizIndustryDataTable bizIndustry {
            get {
                return this.tablebizIndustry;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bizSuperSectorDataTable bizSuperSector {
            get {
                return this.tablebizSuperSector;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public bizSubSectorDataTable bizSubSector {
            get {
                return this.tablebizSubSector;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public portfolioDataTable portfolio {
            get {
                return this.tableportfolio;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tradeAlertDataTable tradeAlert {
            get {
                return this.tabletradeAlert;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public priceDataSumDataTable priceDataSum {
            get {
                return this.tablepriceDataSum;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public portfolioDetailDataTable portfolioDetail {
            get {
                return this.tableportfolioDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public priceDataStatDataTable priceDataStat {
            get {
                return this.tablepriceDataStat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lastPriceDataDataTable lastPriceData {
            get {
                return this.tablelastPriceData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public messagesDataTable messages {
            get {
                return this.tablemessages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public feedbackCatDataTable feedbackCat {
            get {
                return this.tablefeedbackCat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public exchangeDetailDataTable exchangeDetail {
            get {
                return this.tableexchangeDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockExchangeDataTable stockExchange {
            get {
                return this.tablestockExchange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            baseDS cln = ((baseDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["sysLog"] != null)) {
                    base.Tables.Add(new sysLogDataTable(ds.Tables["sysLog"]));
                }
                if ((ds.Tables["stockReport"] != null)) {
                    base.Tables.Add(new stockReportDataTable(ds.Tables["stockReport"]));
                }
                if ((ds.Tables["investor"] != null)) {
                    base.Tables.Add(new investorDataTable(ds.Tables["investor"]));
                }
                if ((ds.Tables["investorStock"] != null)) {
                    base.Tables.Add(new investorStockDataTable(ds.Tables["investorStock"]));
                }
                if ((ds.Tables["transactions"] != null)) {
                    base.Tables.Add(new transactionsDataTable(ds.Tables["transactions"]));
                }
                if ((ds.Tables["priceData"] != null)) {
                    base.Tables.Add(new priceDataDataTable(ds.Tables["priceData"]));
                }
                if ((ds.Tables["stockCode"] != null)) {
                    base.Tables.Add(new stockCodeDataTable(ds.Tables["stockCode"]));
                }
                if ((ds.Tables["sysCode"] != null)) {
                    base.Tables.Add(new sysCodeDataTable(ds.Tables["sysCode"]));
                }
                if ((ds.Tables["sysCodeCat"] != null)) {
                    base.Tables.Add(new sysCodeCatDataTable(ds.Tables["sysCodeCat"]));
                }
                if ((ds.Tables["sysConfig"] != null)) {
                    base.Tables.Add(new sysConfigDataTable(ds.Tables["sysConfig"]));
                }
                if ((ds.Tables["sysAutoKey"] != null)) {
                    base.Tables.Add(new sysAutoKeyDataTable(ds.Tables["sysAutoKey"]));
                }
                if ((ds.Tables["sysAutoKeyPending"] != null)) {
                    base.Tables.Add(new sysAutoKeyPendingDataTable(ds.Tables["sysAutoKeyPending"]));
                }
                if ((ds.Tables["bizSector"] != null)) {
                    base.Tables.Add(new bizSectorDataTable(ds.Tables["bizSector"]));
                }
                if ((ds.Tables["country"] != null)) {
                    base.Tables.Add(new countryDataTable(ds.Tables["country"]));
                }
                if ((ds.Tables["currency"] != null)) {
                    base.Tables.Add(new currencyDataTable(ds.Tables["currency"]));
                }
                if ((ds.Tables["investorCat"] != null)) {
                    base.Tables.Add(new investorCatDataTable(ds.Tables["investorCat"]));
                }
                if ((ds.Tables["employeeRange"] != null)) {
                    base.Tables.Add(new employeeRangeDataTable(ds.Tables["employeeRange"]));
                }
                if ((ds.Tables["bizIndustry"] != null)) {
                    base.Tables.Add(new bizIndustryDataTable(ds.Tables["bizIndustry"]));
                }
                if ((ds.Tables["bizSuperSector"] != null)) {
                    base.Tables.Add(new bizSuperSectorDataTable(ds.Tables["bizSuperSector"]));
                }
                if ((ds.Tables["bizSubSector"] != null)) {
                    base.Tables.Add(new bizSubSectorDataTable(ds.Tables["bizSubSector"]));
                }
                if ((ds.Tables["portfolio"] != null)) {
                    base.Tables.Add(new portfolioDataTable(ds.Tables["portfolio"]));
                }
                if ((ds.Tables["tradeAlert"] != null)) {
                    base.Tables.Add(new tradeAlertDataTable(ds.Tables["tradeAlert"]));
                }
                if ((ds.Tables["priceDataSum"] != null)) {
                    base.Tables.Add(new priceDataSumDataTable(ds.Tables["priceDataSum"]));
                }
                if ((ds.Tables["portfolioDetail"] != null)) {
                    base.Tables.Add(new portfolioDetailDataTable(ds.Tables["portfolioDetail"]));
                }
                if ((ds.Tables["priceDataStat"] != null)) {
                    base.Tables.Add(new priceDataStatDataTable(ds.Tables["priceDataStat"]));
                }
                if ((ds.Tables["lastPriceData"] != null)) {
                    base.Tables.Add(new lastPriceDataDataTable(ds.Tables["lastPriceData"]));
                }
                if ((ds.Tables["messages"] != null)) {
                    base.Tables.Add(new messagesDataTable(ds.Tables["messages"]));
                }
                if ((ds.Tables["feedbackCat"] != null)) {
                    base.Tables.Add(new feedbackCatDataTable(ds.Tables["feedbackCat"]));
                }
                if ((ds.Tables["exchangeDetail"] != null)) {
                    base.Tables.Add(new exchangeDetailDataTable(ds.Tables["exchangeDetail"]));
                }
                if ((ds.Tables["stockExchange"] != null)) {
                    base.Tables.Add(new stockExchangeDataTable(ds.Tables["stockExchange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablesysLog = ((sysLogDataTable)(base.Tables["sysLog"]));
            if ((initTable == true)) {
                if ((this.tablesysLog != null)) {
                    this.tablesysLog.InitVars();
                }
            }
            this.tablestockReport = ((stockReportDataTable)(base.Tables["stockReport"]));
            if ((initTable == true)) {
                if ((this.tablestockReport != null)) {
                    this.tablestockReport.InitVars();
                }
            }
            this.tableinvestor = ((investorDataTable)(base.Tables["investor"]));
            if ((initTable == true)) {
                if ((this.tableinvestor != null)) {
                    this.tableinvestor.InitVars();
                }
            }
            this.tableinvestorStock = ((investorStockDataTable)(base.Tables["investorStock"]));
            if ((initTable == true)) {
                if ((this.tableinvestorStock != null)) {
                    this.tableinvestorStock.InitVars();
                }
            }
            this.tabletransactions = ((transactionsDataTable)(base.Tables["transactions"]));
            if ((initTable == true)) {
                if ((this.tabletransactions != null)) {
                    this.tabletransactions.InitVars();
                }
            }
            this.tablepriceData = ((priceDataDataTable)(base.Tables["priceData"]));
            if ((initTable == true)) {
                if ((this.tablepriceData != null)) {
                    this.tablepriceData.InitVars();
                }
            }
            this.tablestockCode = ((stockCodeDataTable)(base.Tables["stockCode"]));
            if ((initTable == true)) {
                if ((this.tablestockCode != null)) {
                    this.tablestockCode.InitVars();
                }
            }
            this.tablesysCode = ((sysCodeDataTable)(base.Tables["sysCode"]));
            if ((initTable == true)) {
                if ((this.tablesysCode != null)) {
                    this.tablesysCode.InitVars();
                }
            }
            this.tablesysCodeCat = ((sysCodeCatDataTable)(base.Tables["sysCodeCat"]));
            if ((initTable == true)) {
                if ((this.tablesysCodeCat != null)) {
                    this.tablesysCodeCat.InitVars();
                }
            }
            this.tablesysConfig = ((sysConfigDataTable)(base.Tables["sysConfig"]));
            if ((initTable == true)) {
                if ((this.tablesysConfig != null)) {
                    this.tablesysConfig.InitVars();
                }
            }
            this.tablesysAutoKey = ((sysAutoKeyDataTable)(base.Tables["sysAutoKey"]));
            if ((initTable == true)) {
                if ((this.tablesysAutoKey != null)) {
                    this.tablesysAutoKey.InitVars();
                }
            }
            this.tablesysAutoKeyPending = ((sysAutoKeyPendingDataTable)(base.Tables["sysAutoKeyPending"]));
            if ((initTable == true)) {
                if ((this.tablesysAutoKeyPending != null)) {
                    this.tablesysAutoKeyPending.InitVars();
                }
            }
            this.tablebizSector = ((bizSectorDataTable)(base.Tables["bizSector"]));
            if ((initTable == true)) {
                if ((this.tablebizSector != null)) {
                    this.tablebizSector.InitVars();
                }
            }
            this.tablecountry = ((countryDataTable)(base.Tables["country"]));
            if ((initTable == true)) {
                if ((this.tablecountry != null)) {
                    this.tablecountry.InitVars();
                }
            }
            this.tablecurrency = ((currencyDataTable)(base.Tables["currency"]));
            if ((initTable == true)) {
                if ((this.tablecurrency != null)) {
                    this.tablecurrency.InitVars();
                }
            }
            this.tableinvestorCat = ((investorCatDataTable)(base.Tables["investorCat"]));
            if ((initTable == true)) {
                if ((this.tableinvestorCat != null)) {
                    this.tableinvestorCat.InitVars();
                }
            }
            this.tableemployeeRange = ((employeeRangeDataTable)(base.Tables["employeeRange"]));
            if ((initTable == true)) {
                if ((this.tableemployeeRange != null)) {
                    this.tableemployeeRange.InitVars();
                }
            }
            this.tablebizIndustry = ((bizIndustryDataTable)(base.Tables["bizIndustry"]));
            if ((initTable == true)) {
                if ((this.tablebizIndustry != null)) {
                    this.tablebizIndustry.InitVars();
                }
            }
            this.tablebizSuperSector = ((bizSuperSectorDataTable)(base.Tables["bizSuperSector"]));
            if ((initTable == true)) {
                if ((this.tablebizSuperSector != null)) {
                    this.tablebizSuperSector.InitVars();
                }
            }
            this.tablebizSubSector = ((bizSubSectorDataTable)(base.Tables["bizSubSector"]));
            if ((initTable == true)) {
                if ((this.tablebizSubSector != null)) {
                    this.tablebizSubSector.InitVars();
                }
            }
            this.tableportfolio = ((portfolioDataTable)(base.Tables["portfolio"]));
            if ((initTable == true)) {
                if ((this.tableportfolio != null)) {
                    this.tableportfolio.InitVars();
                }
            }
            this.tabletradeAlert = ((tradeAlertDataTable)(base.Tables["tradeAlert"]));
            if ((initTable == true)) {
                if ((this.tabletradeAlert != null)) {
                    this.tabletradeAlert.InitVars();
                }
            }
            this.tablepriceDataSum = ((priceDataSumDataTable)(base.Tables["priceDataSum"]));
            if ((initTable == true)) {
                if ((this.tablepriceDataSum != null)) {
                    this.tablepriceDataSum.InitVars();
                }
            }
            this.tableportfolioDetail = ((portfolioDetailDataTable)(base.Tables["portfolioDetail"]));
            if ((initTable == true)) {
                if ((this.tableportfolioDetail != null)) {
                    this.tableportfolioDetail.InitVars();
                }
            }
            this.tablepriceDataStat = ((priceDataStatDataTable)(base.Tables["priceDataStat"]));
            if ((initTable == true)) {
                if ((this.tablepriceDataStat != null)) {
                    this.tablepriceDataStat.InitVars();
                }
            }
            this.tablelastPriceData = ((lastPriceDataDataTable)(base.Tables["lastPriceData"]));
            if ((initTable == true)) {
                if ((this.tablelastPriceData != null)) {
                    this.tablelastPriceData.InitVars();
                }
            }
            this.tablemessages = ((messagesDataTable)(base.Tables["messages"]));
            if ((initTable == true)) {
                if ((this.tablemessages != null)) {
                    this.tablemessages.InitVars();
                }
            }
            this.tablefeedbackCat = ((feedbackCatDataTable)(base.Tables["feedbackCat"]));
            if ((initTable == true)) {
                if ((this.tablefeedbackCat != null)) {
                    this.tablefeedbackCat.InitVars();
                }
            }
            this.tableexchangeDetail = ((exchangeDetailDataTable)(base.Tables["exchangeDetail"]));
            if ((initTable == true)) {
                if ((this.tableexchangeDetail != null)) {
                    this.tableexchangeDetail.InitVars();
                }
            }
            this.tablestockExchange = ((stockExchangeDataTable)(base.Tables["stockExchange"]));
            if ((initTable == true)) {
                if ((this.tablestockExchange != null)) {
                    this.tablestockExchange.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "baseDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/masterDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablesysLog = new sysLogDataTable();
            base.Tables.Add(this.tablesysLog);
            this.tablestockReport = new stockReportDataTable();
            base.Tables.Add(this.tablestockReport);
            this.tableinvestor = new investorDataTable();
            base.Tables.Add(this.tableinvestor);
            this.tableinvestorStock = new investorStockDataTable();
            base.Tables.Add(this.tableinvestorStock);
            this.tabletransactions = new transactionsDataTable();
            base.Tables.Add(this.tabletransactions);
            this.tablepriceData = new priceDataDataTable();
            base.Tables.Add(this.tablepriceData);
            this.tablestockCode = new stockCodeDataTable();
            base.Tables.Add(this.tablestockCode);
            this.tablesysCode = new sysCodeDataTable();
            base.Tables.Add(this.tablesysCode);
            this.tablesysCodeCat = new sysCodeCatDataTable();
            base.Tables.Add(this.tablesysCodeCat);
            this.tablesysConfig = new sysConfigDataTable();
            base.Tables.Add(this.tablesysConfig);
            this.tablesysAutoKey = new sysAutoKeyDataTable();
            base.Tables.Add(this.tablesysAutoKey);
            this.tablesysAutoKeyPending = new sysAutoKeyPendingDataTable();
            base.Tables.Add(this.tablesysAutoKeyPending);
            this.tablebizSector = new bizSectorDataTable();
            base.Tables.Add(this.tablebizSector);
            this.tablecountry = new countryDataTable();
            base.Tables.Add(this.tablecountry);
            this.tablecurrency = new currencyDataTable();
            base.Tables.Add(this.tablecurrency);
            this.tableinvestorCat = new investorCatDataTable();
            base.Tables.Add(this.tableinvestorCat);
            this.tableemployeeRange = new employeeRangeDataTable();
            base.Tables.Add(this.tableemployeeRange);
            this.tablebizIndustry = new bizIndustryDataTable();
            base.Tables.Add(this.tablebizIndustry);
            this.tablebizSuperSector = new bizSuperSectorDataTable();
            base.Tables.Add(this.tablebizSuperSector);
            this.tablebizSubSector = new bizSubSectorDataTable();
            base.Tables.Add(this.tablebizSubSector);
            this.tableportfolio = new portfolioDataTable();
            base.Tables.Add(this.tableportfolio);
            this.tabletradeAlert = new tradeAlertDataTable();
            base.Tables.Add(this.tabletradeAlert);
            this.tablepriceDataSum = new priceDataSumDataTable();
            base.Tables.Add(this.tablepriceDataSum);
            this.tableportfolioDetail = new portfolioDetailDataTable();
            base.Tables.Add(this.tableportfolioDetail);
            this.tablepriceDataStat = new priceDataStatDataTable();
            base.Tables.Add(this.tablepriceDataStat);
            this.tablelastPriceData = new lastPriceDataDataTable();
            base.Tables.Add(this.tablelastPriceData);
            this.tablemessages = new messagesDataTable();
            base.Tables.Add(this.tablemessages);
            this.tablefeedbackCat = new feedbackCatDataTable();
            base.Tables.Add(this.tablefeedbackCat);
            this.tableexchangeDetail = new exchangeDetailDataTable();
            base.Tables.Add(this.tableexchangeDetail);
            this.tablestockExchange = new stockExchangeDataTable();
            base.Tables.Add(this.tablestockExchange);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvestor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvestorStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetransactions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepriceData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysCodeCat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysConfig() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysAutoKey() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesysAutoKeyPending() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebizSector() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecountry() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecurrency() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvestorCat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployeeRange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebizIndustry() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebizSuperSector() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebizSubSector() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeportfolio() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetradeAlert() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepriceDataSum() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeportfolioDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepriceDataStat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelastPriceData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemessages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializefeedbackCat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeexchangeDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockExchange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            baseDS ds = new baseDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void sysLogRowChangeEventHandler(object sender, sysLogRowChangeEvent e);
        
        public delegate void stockReportRowChangeEventHandler(object sender, stockReportRowChangeEvent e);
        
        public delegate void investorRowChangeEventHandler(object sender, investorRowChangeEvent e);
        
        public delegate void investorStockRowChangeEventHandler(object sender, investorStockRowChangeEvent e);
        
        public delegate void transactionsRowChangeEventHandler(object sender, transactionsRowChangeEvent e);
        
        public delegate void priceDataRowChangeEventHandler(object sender, priceDataRowChangeEvent e);
        
        public delegate void stockCodeRowChangeEventHandler(object sender, stockCodeRowChangeEvent e);
        
        public delegate void sysCodeRowChangeEventHandler(object sender, sysCodeRowChangeEvent e);
        
        public delegate void sysCodeCatRowChangeEventHandler(object sender, sysCodeCatRowChangeEvent e);
        
        public delegate void sysConfigRowChangeEventHandler(object sender, sysConfigRowChangeEvent e);
        
        public delegate void sysAutoKeyRowChangeEventHandler(object sender, sysAutoKeyRowChangeEvent e);
        
        public delegate void sysAutoKeyPendingRowChangeEventHandler(object sender, sysAutoKeyPendingRowChangeEvent e);
        
        public delegate void bizSectorRowChangeEventHandler(object sender, bizSectorRowChangeEvent e);
        
        public delegate void countryRowChangeEventHandler(object sender, countryRowChangeEvent e);
        
        public delegate void currencyRowChangeEventHandler(object sender, currencyRowChangeEvent e);
        
        public delegate void investorCatRowChangeEventHandler(object sender, investorCatRowChangeEvent e);
        
        public delegate void employeeRangeRowChangeEventHandler(object sender, employeeRangeRowChangeEvent e);
        
        public delegate void bizIndustryRowChangeEventHandler(object sender, bizIndustryRowChangeEvent e);
        
        public delegate void bizSuperSectorRowChangeEventHandler(object sender, bizSuperSectorRowChangeEvent e);
        
        public delegate void bizSubSectorRowChangeEventHandler(object sender, bizSubSectorRowChangeEvent e);
        
        public delegate void portfolioRowChangeEventHandler(object sender, portfolioRowChangeEvent e);
        
        public delegate void tradeAlertRowChangeEventHandler(object sender, tradeAlertRowChangeEvent e);
        
        public delegate void priceDataSumRowChangeEventHandler(object sender, priceDataSumRowChangeEvent e);
        
        public delegate void portfolioDetailRowChangeEventHandler(object sender, portfolioDetailRowChangeEvent e);
        
        public delegate void priceDataStatRowChangeEventHandler(object sender, priceDataStatRowChangeEvent e);
        
        public delegate void lastPriceDataRowChangeEventHandler(object sender, lastPriceDataRowChangeEvent e);
        
        public delegate void messagesRowChangeEventHandler(object sender, messagesRowChangeEvent e);
        
        public delegate void feedbackCatRowChangeEventHandler(object sender, feedbackCatRowChangeEvent e);
        
        public delegate void exchangeDetailRowChangeEventHandler(object sender, exchangeDetailRowChangeEvent e);
        
        public delegate void stockExchangeRowChangeEventHandler(object sender, stockExchangeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysLogDataTable : global::System.Data.TypedTableBase<sysLogRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnsource;
            
            private global::System.Data.DataColumn columnmessage;
            
            private global::System.Data.DataColumn columninvestorCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogDataTable() {
                this.TableName = "sysLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sourceColumn {
                get {
                    return this.columnsource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColumn {
                get {
                    return this.columnmessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn investorCodeColumn {
                get {
                    return this.columninvestorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRow this[int index] {
                get {
                    return ((sysLogRow)(this.Rows[index]));
                }
            }
            
            public event sysLogRowChangeEventHandler sysLogRowChanging;
            
            public event sysLogRowChangeEventHandler sysLogRowChanged;
            
            public event sysLogRowChangeEventHandler sysLogRowDeleting;
            
            public event sysLogRowChangeEventHandler sysLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysLogRow(sysLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRow AddsysLogRow(System.DateTime onDate, byte type, string description, string source, string message, string investorCode) {
                sysLogRow rowsysLogRow = ((sysLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        onDate,
                        type,
                        description,
                        source,
                        message,
                        investorCode};
                rowsysLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysLogRow);
                return rowsysLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRow FindByid(int id) {
                return ((sysLogRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysLogDataTable cln = ((sysLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnonDate = base.Columns["onDate"];
                this.columntype = base.Columns["type"];
                this.columndescription = base.Columns["description"];
                this.columnsource = base.Columns["source"];
                this.columnmessage = base.Columns["message"];
                this.columninvestorCode = base.Columns["investorCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnsource = new global::System.Data.DataColumn("source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsource);
                this.columnmessage = new global::System.Data.DataColumn("message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage);
                this.columninvestorCode = new global::System.Data.DataColumn("investorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvestorCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columntype.AllowDBNull = false;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columnsource.MaxLength = 255;
                this.columnmessage.MaxLength = 1073741823;
                this.columninvestorCode.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRow NewsysLogRow() {
                return ((sysLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysLogRowChanged != null)) {
                    this.sysLogRowChanged(this, new sysLogRowChangeEvent(((sysLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysLogRowChanging != null)) {
                    this.sysLogRowChanging(this, new sysLogRowChangeEvent(((sysLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysLogRowDeleted != null)) {
                    this.sysLogRowDeleted(this, new sysLogRowChangeEvent(((sysLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysLogRowDeleting != null)) {
                    this.sysLogRowDeleting(this, new sysLogRowChangeEvent(((sysLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysLogRow(sysLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockReportDataTable : global::System.Data.TypedTableBase<stockReportRow> {
            
            private global::System.Data.DataColumn columnreportType;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columnreportCode;
            
            private global::System.Data.DataColumn columncurrency;
            
            private global::System.Data.DataColumn columnval0;
            
            private global::System.Data.DataColumn columnval1;
            
            private global::System.Data.DataColumn columnval2;
            
            private global::System.Data.DataColumn columnval3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportDataTable() {
                this.TableName = "stockReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportTypeColumn {
                get {
                    return this.columnreportType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reportCodeColumn {
                get {
                    return this.columnreportCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn currencyColumn {
                get {
                    return this.columncurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val0Column {
                get {
                    return this.columnval0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val1Column {
                get {
                    return this.columnval1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val2Column {
                get {
                    return this.columnval2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val3Column {
                get {
                    return this.columnval3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRow this[int index] {
                get {
                    return ((stockReportRow)(this.Rows[index]));
                }
            }
            
            public event stockReportRowChangeEventHandler stockReportRowChanging;
            
            public event stockReportRowChangeEventHandler stockReportRowChanged;
            
            public event stockReportRowChangeEventHandler stockReportRowDeleting;
            
            public event stockReportRowChangeEventHandler stockReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockReportRow(stockReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRow AddstockReportRow(string reportType, string stockCode, System.DateTime onDate, string reportCode, string currency, decimal val0, decimal val1, decimal val2, decimal val3) {
                stockReportRow rowstockReportRow = ((stockReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        reportType,
                        stockCode,
                        onDate,
                        reportCode,
                        currency,
                        val0,
                        val1,
                        val2,
                        val3};
                rowstockReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockReportRow);
                return rowstockReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRow FindByreportTypestockCodeonDatereportCodecurrency(string reportType, string stockCode, System.DateTime onDate, string reportCode, string currency) {
                return ((stockReportRow)(this.Rows.Find(new object[] {
                            reportType,
                            stockCode,
                            onDate,
                            reportCode,
                            currency})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockReportDataTable cln = ((stockReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnreportType = base.Columns["reportType"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnonDate = base.Columns["onDate"];
                this.columnreportCode = base.Columns["reportCode"];
                this.columncurrency = base.Columns["currency"];
                this.columnval0 = base.Columns["val0"];
                this.columnval1 = base.Columns["val1"];
                this.columnval2 = base.Columns["val2"];
                this.columnval3 = base.Columns["val3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnreportType = new global::System.Data.DataColumn("reportType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportType);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columnreportCode = new global::System.Data.DataColumn("reportCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreportCode);
                this.columncurrency = new global::System.Data.DataColumn("currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrency);
                this.columnval0 = new global::System.Data.DataColumn("val0", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval0);
                this.columnval1 = new global::System.Data.DataColumn("val1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval1);
                this.columnval2 = new global::System.Data.DataColumn("val2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval2);
                this.columnval3 = new global::System.Data.DataColumn("val3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnreportType,
                                this.columnstockCode,
                                this.columnonDate,
                                this.columnreportCode,
                                this.columncurrency}, true));
                this.columnreportType.AllowDBNull = false;
                this.columnreportType.MaxLength = 3;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnonDate.AllowDBNull = false;
                this.columnreportCode.AllowDBNull = false;
                this.columnreportCode.MaxLength = 4;
                this.columncurrency.AllowDBNull = false;
                this.columncurrency.MaxLength = 1;
                this.columnval0.AllowDBNull = false;
                this.columnval1.AllowDBNull = false;
                this.columnval2.AllowDBNull = false;
                this.columnval3.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRow NewstockReportRow() {
                return ((stockReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockReportRowChanged != null)) {
                    this.stockReportRowChanged(this, new stockReportRowChangeEvent(((stockReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockReportRowChanging != null)) {
                    this.stockReportRowChanging(this, new stockReportRowChangeEvent(((stockReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockReportRowDeleted != null)) {
                    this.stockReportRowDeleted(this, new stockReportRowChangeEvent(((stockReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockReportRowDeleting != null)) {
                    this.stockReportRowDeleting(this, new stockReportRowChangeEvent(((stockReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockReportRow(stockReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investorDataTable : global::System.Data.TypedTableBase<investorRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnfirstName;
            
            private global::System.Data.DataColumn columnlastName;
            
            private global::System.Data.DataColumn columndisplayName;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnmobile;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columnaccount;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columncatCode;
            
            private global::System.Data.DataColumn columnexpireDate;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnnote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorDataTable() {
                this.TableName = "investor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected investorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn firstNameColumn {
                get {
                    return this.columnfirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastNameColumn {
                get {
                    return this.columnlastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displayNameColumn {
                get {
                    return this.columndisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mobileColumn {
                get {
                    return this.columnmobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accountColumn {
                get {
                    return this.columnaccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn catCodeColumn {
                get {
                    return this.columncatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expireDateColumn {
                get {
                    return this.columnexpireDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow this[int index] {
                get {
                    return ((investorRow)(this.Rows[index]));
                }
            }
            
            public event investorRowChangeEventHandler investorRowChanging;
            
            public event investorRowChangeEventHandler investorRowChanged;
            
            public event investorRowChangeEventHandler investorRowDeleting;
            
            public event investorRowChangeEventHandler investorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvestorRow(investorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow AddinvestorRow(
                        string code, 
                        byte type, 
                        string firstName, 
                        string lastName, 
                        string displayName, 
                        byte sex, 
                        string address1, 
                        string address2, 
                        string email, 
                        string phone, 
                        string mobile, 
                        string city, 
                        string country, 
                        string account, 
                        string password, 
                        string catCode, 
                        System.DateTime expireDate, 
                        byte status, 
                        string note) {
                investorRow rowinvestorRow = ((investorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        type,
                        firstName,
                        lastName,
                        displayName,
                        sex,
                        address1,
                        address2,
                        email,
                        phone,
                        mobile,
                        city,
                        country,
                        account,
                        password,
                        catCode,
                        expireDate,
                        status,
                        note};
                rowinvestorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestorRow);
                return rowinvestorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow FindBycode(string code) {
                return ((investorRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                investorDataTable cln = ((investorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columntype = base.Columns["type"];
                this.columnfirstName = base.Columns["firstName"];
                this.columnlastName = base.Columns["lastName"];
                this.columndisplayName = base.Columns["displayName"];
                this.columnsex = base.Columns["sex"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columnemail = base.Columns["email"];
                this.columnphone = base.Columns["phone"];
                this.columnmobile = base.Columns["mobile"];
                this.columncity = base.Columns["city"];
                this.columncountry = base.Columns["country"];
                this.columnaccount = base.Columns["account"];
                this.columnpassword = base.Columns["password"];
                this.columncatCode = base.Columns["catCode"];
                this.columnexpireDate = base.Columns["expireDate"];
                this.columnstatus = base.Columns["status"];
                this.columnnote = base.Columns["note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnfirstName = new global::System.Data.DataColumn("firstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirstName);
                this.columnlastName = new global::System.Data.DataColumn("lastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastName);
                this.columndisplayName = new global::System.Data.DataColumn("displayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplayName);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnmobile = new global::System.Data.DataColumn("mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobile);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columnaccount = new global::System.Data.DataColumn("account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columncatCode = new global::System.Data.DataColumn("catCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncatCode);
                this.columnexpireDate = new global::System.Data.DataColumn("expireDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpireDate);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columntype.AllowDBNull = false;
                this.columnfirstName.AllowDBNull = false;
                this.columnfirstName.MaxLength = 20;
                this.columnlastName.AllowDBNull = false;
                this.columnlastName.MaxLength = 30;
                this.columndisplayName.AllowDBNull = false;
                this.columndisplayName.MaxLength = 100;
                this.columnsex.AllowDBNull = false;
                this.columnaddress1.AllowDBNull = false;
                this.columnaddress1.MaxLength = 255;
                this.columnaddress2.MaxLength = 255;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 50;
                this.columnphone.MaxLength = 15;
                this.columnmobile.MaxLength = 15;
                this.columncity.MaxLength = 10;
                this.columncountry.MaxLength = 3;
                this.columnaccount.AllowDBNull = false;
                this.columnaccount.MaxLength = 20;
                this.columnpassword.AllowDBNull = false;
                this.columnpassword.MaxLength = 32;
                this.columncatCode.AllowDBNull = false;
                this.columncatCode.MaxLength = 10;
                this.columnexpireDate.AllowDBNull = false;
                this.columnstatus.AllowDBNull = false;
                this.columnnote.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow NewinvestorRow() {
                return ((investorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(investorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investorRowChanged != null)) {
                    this.investorRowChanged(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investorRowChanging != null)) {
                    this.investorRowChanging(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investorRowDeleted != null)) {
                    this.investorRowDeleted(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investorRowDeleting != null)) {
                    this.investorRowDeleting(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvestorRow(investorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investorStockDataTable : global::System.Data.TypedTableBase<investorStockRow> {
            
            private global::System.Data.DataColumn columnportfolio;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnbuyDate;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnbuyAmt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockDataTable() {
                this.TableName = "investorStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected investorStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioColumn {
                get {
                    return this.columnportfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn buyDateColumn {
                get {
                    return this.columnbuyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn buyAmtColumn {
                get {
                    return this.columnbuyAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow this[int index] {
                get {
                    return ((investorStockRow)(this.Rows[index]));
                }
            }
            
            public event investorStockRowChangeEventHandler investorStockRowChanging;
            
            public event investorStockRowChangeEventHandler investorStockRowChanged;
            
            public event investorStockRowChangeEventHandler investorStockRowDeleting;
            
            public event investorStockRowChangeEventHandler investorStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvestorStockRow(investorStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow AddinvestorStockRow(string portfolio, string stockCode, System.DateTime buyDate, decimal qty, decimal buyAmt) {
                investorStockRow rowinvestorStockRow = ((investorStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        portfolio,
                        stockCode,
                        buyDate,
                        qty,
                        buyAmt};
                rowinvestorStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestorStockRow);
                return rowinvestorStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow FindByportfoliobuyDatestockCode(string portfolio, System.DateTime buyDate, string stockCode) {
                return ((investorStockRow)(this.Rows.Find(new object[] {
                            portfolio,
                            buyDate,
                            stockCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                investorStockDataTable cln = ((investorStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investorStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnportfolio = base.Columns["portfolio"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnbuyDate = base.Columns["buyDate"];
                this.columnqty = base.Columns["qty"];
                this.columnbuyAmt = base.Columns["buyAmt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnportfolio = new global::System.Data.DataColumn("portfolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolio);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnbuyDate = new global::System.Data.DataColumn("buyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuyDate);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnbuyAmt = new global::System.Data.DataColumn("buyAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuyAmt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnportfolio,
                                this.columnbuyDate,
                                this.columnstockCode}, true));
                this.columnportfolio.AllowDBNull = false;
                this.columnportfolio.MaxLength = 10;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnbuyDate.AllowDBNull = false;
                this.columnqty.AllowDBNull = false;
                this.columnbuyAmt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow NewinvestorStockRow() {
                return ((investorStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investorStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(investorStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investorStockRowChanged != null)) {
                    this.investorStockRowChanged(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investorStockRowChanging != null)) {
                    this.investorStockRowChanging(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investorStockRowDeleted != null)) {
                    this.investorStockRowDeleted(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investorStockRowDeleting != null)) {
                    this.investorStockRowDeleting(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvestorStockRow(investorStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investorStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class transactionsDataTable : global::System.Data.TypedTableBase<transactionsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnonTime;
            
            private global::System.Data.DataColumn columntranType;
            
            private global::System.Data.DataColumn columnportfolio;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnamt;
            
            private global::System.Data.DataColumn columnfeeAmt;
            
            private global::System.Data.DataColumn columnstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsDataTable() {
                this.TableName = "transactions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transactionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected transactionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onTimeColumn {
                get {
                    return this.columnonTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tranTypeColumn {
                get {
                    return this.columntranType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioColumn {
                get {
                    return this.columnportfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amtColumn {
                get {
                    return this.columnamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn feeAmtColumn {
                get {
                    return this.columnfeeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRow this[int index] {
                get {
                    return ((transactionsRow)(this.Rows[index]));
                }
            }
            
            public event transactionsRowChangeEventHandler transactionsRowChanging;
            
            public event transactionsRowChangeEventHandler transactionsRowChanged;
            
            public event transactionsRowChangeEventHandler transactionsRowDeleting;
            
            public event transactionsRowChangeEventHandler transactionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtransactionsRow(transactionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRow AddtransactionsRow(System.DateTime onTime, byte tranType, string portfolio, string stockCode, decimal qty, decimal amt, decimal feeAmt, byte status) {
                transactionsRow rowtransactionsRow = ((transactionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        onTime,
                        tranType,
                        portfolio,
                        stockCode,
                        qty,
                        amt,
                        feeAmt,
                        status};
                rowtransactionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtransactionsRow);
                return rowtransactionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRow FindByid(int id) {
                return ((transactionsRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                transactionsDataTable cln = ((transactionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new transactionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnonTime = base.Columns["onTime"];
                this.columntranType = base.Columns["tranType"];
                this.columnportfolio = base.Columns["portfolio"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnqty = base.Columns["qty"];
                this.columnamt = base.Columns["amt"];
                this.columnfeeAmt = base.Columns["feeAmt"];
                this.columnstatus = base.Columns["status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnonTime = new global::System.Data.DataColumn("onTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonTime);
                this.columntranType = new global::System.Data.DataColumn("tranType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntranType);
                this.columnportfolio = new global::System.Data.DataColumn("portfolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolio);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnamt = new global::System.Data.DataColumn("amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamt);
                this.columnfeeAmt = new global::System.Data.DataColumn("feeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeeAmt);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnonTime.AllowDBNull = false;
                this.columntranType.AllowDBNull = false;
                this.columnportfolio.AllowDBNull = false;
                this.columnportfolio.MaxLength = 10;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnqty.AllowDBNull = false;
                this.columnamt.AllowDBNull = false;
                this.columnfeeAmt.AllowDBNull = false;
                this.columnstatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRow NewtransactionsRow() {
                return ((transactionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new transactionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(transactionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.transactionsRowChanged != null)) {
                    this.transactionsRowChanged(this, new transactionsRowChangeEvent(((transactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.transactionsRowChanging != null)) {
                    this.transactionsRowChanging(this, new transactionsRowChangeEvent(((transactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.transactionsRowDeleted != null)) {
                    this.transactionsRowDeleted(this, new transactionsRowChangeEvent(((transactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.transactionsRowDeleting != null)) {
                    this.transactionsRowDeleting(this, new transactionsRowChangeEvent(((transactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetransactionsRow(transactionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "transactionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class priceDataDataTable : global::System.Data.TypedTableBase<priceDataRow> {
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnopenPrice;
            
            private global::System.Data.DataColumn columnclosePrice;
            
            private global::System.Data.DataColumn columnlowPrice;
            
            private global::System.Data.DataColumn columnhighPrice;
            
            private global::System.Data.DataColumn columnvolume;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataDataTable() {
                this.TableName = "priceData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected priceDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn openPriceColumn {
                get {
                    return this.columnopenPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn closePriceColumn {
                get {
                    return this.columnclosePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lowPriceColumn {
                get {
                    return this.columnlowPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn highPriceColumn {
                get {
                    return this.columnhighPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn volumeColumn {
                get {
                    return this.columnvolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRow this[int index] {
                get {
                    return ((priceDataRow)(this.Rows[index]));
                }
            }
            
            public event priceDataRowChangeEventHandler priceDataRowChanging;
            
            public event priceDataRowChangeEventHandler priceDataRowChanged;
            
            public event priceDataRowChangeEventHandler priceDataRowDeleting;
            
            public event priceDataRowChangeEventHandler priceDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpriceDataRow(priceDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRow AddpriceDataRow(System.DateTime onDate, string stockCode, decimal openPrice, decimal closePrice, decimal lowPrice, decimal highPrice, decimal volume) {
                priceDataRow rowpriceDataRow = ((priceDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        onDate,
                        stockCode,
                        openPrice,
                        closePrice,
                        lowPrice,
                        highPrice,
                        volume};
                rowpriceDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpriceDataRow);
                return rowpriceDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRow FindBystockCodeonDate(string stockCode, System.DateTime onDate) {
                return ((priceDataRow)(this.Rows.Find(new object[] {
                            stockCode,
                            onDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                priceDataDataTable cln = ((priceDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new priceDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnonDate = base.Columns["onDate"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnopenPrice = base.Columns["openPrice"];
                this.columnclosePrice = base.Columns["closePrice"];
                this.columnlowPrice = base.Columns["lowPrice"];
                this.columnhighPrice = base.Columns["highPrice"];
                this.columnvolume = base.Columns["volume"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnopenPrice = new global::System.Data.DataColumn("openPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopenPrice);
                this.columnclosePrice = new global::System.Data.DataColumn("closePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclosePrice);
                this.columnlowPrice = new global::System.Data.DataColumn("lowPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlowPrice);
                this.columnhighPrice = new global::System.Data.DataColumn("highPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhighPrice);
                this.columnvolume = new global::System.Data.DataColumn("volume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolume);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstockCode,
                                this.columnonDate}, true));
                this.columnonDate.AllowDBNull = false;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnopenPrice.AllowDBNull = false;
                this.columnclosePrice.AllowDBNull = false;
                this.columnlowPrice.AllowDBNull = false;
                this.columnhighPrice.AllowDBNull = false;
                this.columnvolume.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRow NewpriceDataRow() {
                return ((priceDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new priceDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(priceDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.priceDataRowChanged != null)) {
                    this.priceDataRowChanged(this, new priceDataRowChangeEvent(((priceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.priceDataRowChanging != null)) {
                    this.priceDataRowChanging(this, new priceDataRowChangeEvent(((priceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.priceDataRowDeleted != null)) {
                    this.priceDataRowDeleted(this, new priceDataRowChangeEvent(((priceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.priceDataRowDeleting != null)) {
                    this.priceDataRowDeleting(this, new priceDataRowChangeEvent(((priceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepriceDataRow(priceDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "priceDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockCodeDataTable : global::System.Data.TypedTableBase<stockCodeRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnstockExchange;
            
            private global::System.Data.DataColumn columntickerCode;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnnameEn;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnwebsite;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnbizSectors;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columnregDate;
            
            private global::System.Data.DataColumn columnnoListedStock;
            
            private global::System.Data.DataColumn columnnoOutstandingStock;
            
            private global::System.Data.DataColumn columnnoForeignOwnedStock;
            
            private global::System.Data.DataColumn columnnoTreasuryStock;
            
            private global::System.Data.DataColumn columnbookPrice;
            
            private global::System.Data.DataColumn columntargetPrice;
            
            private global::System.Data.DataColumn columntargetPriceVariant;
            
            private global::System.Data.DataColumn columnworkingCap;
            
            private global::System.Data.DataColumn columncapitalUnit;
            
            private global::System.Data.DataColumn columnsales;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnequity;
            
            private global::System.Data.DataColumn columntotalDebt;
            
            private global::System.Data.DataColumn columntotaAssets;
            
            private global::System.Data.DataColumn columnPB;
            
            private global::System.Data.DataColumn columnEPS;
            
            private global::System.Data.DataColumn columnPE;
            
            private global::System.Data.DataColumn columnROA;
            
            private global::System.Data.DataColumn columnROE;
            
            private global::System.Data.DataColumn columnBETA;
            
            private global::System.Data.DataColumn columnstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeDataTable() {
                this.TableName = "stockCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockExchangeColumn {
                get {
                    return this.columnstockExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tickerCodeColumn {
                get {
                    return this.columntickerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameEnColumn {
                get {
                    return this.columnnameEn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn websiteColumn {
                get {
                    return this.columnwebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bizSectorsColumn {
                get {
                    return this.columnbizSectors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regDateColumn {
                get {
                    return this.columnregDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noListedStockColumn {
                get {
                    return this.columnnoListedStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noOutstandingStockColumn {
                get {
                    return this.columnnoOutstandingStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noForeignOwnedStockColumn {
                get {
                    return this.columnnoForeignOwnedStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noTreasuryStockColumn {
                get {
                    return this.columnnoTreasuryStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bookPriceColumn {
                get {
                    return this.columnbookPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn targetPriceColumn {
                get {
                    return this.columntargetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn targetPriceVariantColumn {
                get {
                    return this.columntargetPriceVariant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn workingCapColumn {
                get {
                    return this.columnworkingCap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn capitalUnitColumn {
                get {
                    return this.columncapitalUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salesColumn {
                get {
                    return this.columnsales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn equityColumn {
                get {
                    return this.columnequity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalDebtColumn {
                get {
                    return this.columntotalDebt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaAssetsColumn {
                get {
                    return this.columntotaAssets;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBColumn {
                get {
                    return this.columnPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPSColumn {
                get {
                    return this.columnEPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEColumn {
                get {
                    return this.columnPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROAColumn {
                get {
                    return this.columnROA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROEColumn {
                get {
                    return this.columnROE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BETAColumn {
                get {
                    return this.columnBETA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow this[int index] {
                get {
                    return ((stockCodeRow)(this.Rows[index]));
                }
            }
            
            public event stockCodeRowChangeEventHandler stockCodeRowChanging;
            
            public event stockCodeRowChangeEventHandler stockCodeRowChanged;
            
            public event stockCodeRowChangeEventHandler stockCodeRowDeleting;
            
            public event stockCodeRowChangeEventHandler stockCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockCodeRow(stockCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow AddstockCodeRow(
                        string code, 
                        string stockExchange, 
                        string tickerCode, 
                        string name, 
                        string nameEn, 
                        string address1, 
                        string address2, 
                        string phone, 
                        string fax, 
                        string website, 
                        string email, 
                        string bizSectors, 
                        string country, 
                        System.DateTime regDate, 
                        int noListedStock, 
                        int noOutstandingStock, 
                        int noForeignOwnedStock, 
                        int noTreasuryStock, 
                        decimal bookPrice, 
                        decimal targetPrice, 
                        decimal targetPriceVariant, 
                        decimal workingCap, 
                        string capitalUnit, 
                        decimal sales, 
                        decimal profit, 
                        decimal equity, 
                        decimal totalDebt, 
                        decimal totaAssets, 
                        decimal PB, 
                        decimal EPS, 
                        decimal PE, 
                        decimal ROA, 
                        decimal ROE, 
                        decimal BETA, 
                        byte status) {
                stockCodeRow rowstockCodeRow = ((stockCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        stockExchange,
                        tickerCode,
                        name,
                        nameEn,
                        address1,
                        address2,
                        phone,
                        fax,
                        website,
                        email,
                        bizSectors,
                        country,
                        regDate,
                        noListedStock,
                        noOutstandingStock,
                        noForeignOwnedStock,
                        noTreasuryStock,
                        bookPrice,
                        targetPrice,
                        targetPriceVariant,
                        workingCap,
                        capitalUnit,
                        sales,
                        profit,
                        equity,
                        totalDebt,
                        totaAssets,
                        PB,
                        EPS,
                        PE,
                        ROA,
                        ROE,
                        BETA,
                        status};
                rowstockCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockCodeRow);
                return rowstockCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow FindBycode(string code) {
                return ((stockCodeRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockCodeDataTable cln = ((stockCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columnstockExchange = base.Columns["stockExchange"];
                this.columntickerCode = base.Columns["tickerCode"];
                this.columnname = base.Columns["name"];
                this.columnnameEn = base.Columns["nameEn"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this.columnwebsite = base.Columns["website"];
                this.columnemail = base.Columns["email"];
                this.columnbizSectors = base.Columns["bizSectors"];
                this.columncountry = base.Columns["country"];
                this.columnregDate = base.Columns["regDate"];
                this.columnnoListedStock = base.Columns["noListedStock"];
                this.columnnoOutstandingStock = base.Columns["noOutstandingStock"];
                this.columnnoForeignOwnedStock = base.Columns["noForeignOwnedStock"];
                this.columnnoTreasuryStock = base.Columns["noTreasuryStock"];
                this.columnbookPrice = base.Columns["bookPrice"];
                this.columntargetPrice = base.Columns["targetPrice"];
                this.columntargetPriceVariant = base.Columns["targetPriceVariant"];
                this.columnworkingCap = base.Columns["workingCap"];
                this.columncapitalUnit = base.Columns["capitalUnit"];
                this.columnsales = base.Columns["sales"];
                this.columnprofit = base.Columns["profit"];
                this.columnequity = base.Columns["equity"];
                this.columntotalDebt = base.Columns["totalDebt"];
                this.columntotaAssets = base.Columns["totaAssets"];
                this.columnPB = base.Columns["PB"];
                this.columnEPS = base.Columns["EPS"];
                this.columnPE = base.Columns["PE"];
                this.columnROA = base.Columns["ROA"];
                this.columnROE = base.Columns["ROE"];
                this.columnBETA = base.Columns["BETA"];
                this.columnstatus = base.Columns["status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnstockExchange = new global::System.Data.DataColumn("stockExchange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockExchange);
                this.columntickerCode = new global::System.Data.DataColumn("tickerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntickerCode);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnnameEn = new global::System.Data.DataColumn("nameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnameEn);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnwebsite = new global::System.Data.DataColumn("website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebsite);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnbizSectors = new global::System.Data.DataColumn("bizSectors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbizSectors);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columnregDate = new global::System.Data.DataColumn("regDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregDate);
                this.columnnoListedStock = new global::System.Data.DataColumn("noListedStock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoListedStock);
                this.columnnoOutstandingStock = new global::System.Data.DataColumn("noOutstandingStock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoOutstandingStock);
                this.columnnoForeignOwnedStock = new global::System.Data.DataColumn("noForeignOwnedStock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoForeignOwnedStock);
                this.columnnoTreasuryStock = new global::System.Data.DataColumn("noTreasuryStock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoTreasuryStock);
                this.columnbookPrice = new global::System.Data.DataColumn("bookPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbookPrice);
                this.columntargetPrice = new global::System.Data.DataColumn("targetPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntargetPrice);
                this.columntargetPriceVariant = new global::System.Data.DataColumn("targetPriceVariant", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntargetPriceVariant);
                this.columnworkingCap = new global::System.Data.DataColumn("workingCap", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworkingCap);
                this.columncapitalUnit = new global::System.Data.DataColumn("capitalUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncapitalUnit);
                this.columnsales = new global::System.Data.DataColumn("sales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnequity = new global::System.Data.DataColumn("equity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequity);
                this.columntotalDebt = new global::System.Data.DataColumn("totalDebt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalDebt);
                this.columntotaAssets = new global::System.Data.DataColumn("totaAssets", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaAssets);
                this.columnPB = new global::System.Data.DataColumn("PB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB);
                this.columnEPS = new global::System.Data.DataColumn("EPS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPS);
                this.columnPE = new global::System.Data.DataColumn("PE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE);
                this.columnROA = new global::System.Data.DataColumn("ROA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROA);
                this.columnROE = new global::System.Data.DataColumn("ROE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROE);
                this.columnBETA = new global::System.Data.DataColumn("BETA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBETA);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 20;
                this.columnstockExchange.AllowDBNull = false;
                this.columnstockExchange.MaxLength = 10;
                this.columntickerCode.AllowDBNull = false;
                this.columntickerCode.MaxLength = 20;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnnameEn.MaxLength = 255;
                this.columnaddress1.AllowDBNull = false;
                this.columnaddress1.MaxLength = 255;
                this.columnaddress2.MaxLength = 255;
                this.columnphone.AllowDBNull = false;
                this.columnphone.MaxLength = 50;
                this.columnfax.AllowDBNull = false;
                this.columnfax.MaxLength = 50;
                this.columnwebsite.AllowDBNull = false;
                this.columnwebsite.MaxLength = 255;
                this.columnemail.MaxLength = 255;
                this.columnbizSectors.AllowDBNull = false;
                this.columnbizSectors.MaxLength = 1024;
                this.columncountry.AllowDBNull = false;
                this.columncountry.MaxLength = 2;
                this.columnregDate.AllowDBNull = false;
                this.columnnoListedStock.AllowDBNull = false;
                this.columnnoOutstandingStock.AllowDBNull = false;
                this.columnnoForeignOwnedStock.AllowDBNull = false;
                this.columnnoTreasuryStock.AllowDBNull = false;
                this.columnbookPrice.AllowDBNull = false;
                this.columntargetPrice.AllowDBNull = false;
                this.columntargetPriceVariant.AllowDBNull = false;
                this.columnworkingCap.AllowDBNull = false;
                this.columncapitalUnit.AllowDBNull = false;
                this.columncapitalUnit.MaxLength = 1;
                this.columnsales.AllowDBNull = false;
                this.columnprofit.AllowDBNull = false;
                this.columnequity.AllowDBNull = false;
                this.columntotalDebt.AllowDBNull = false;
                this.columntotaAssets.AllowDBNull = false;
                this.columnPB.AllowDBNull = false;
                this.columnEPS.AllowDBNull = false;
                this.columnPE.AllowDBNull = false;
                this.columnROA.AllowDBNull = false;
                this.columnROE.AllowDBNull = false;
                this.columnBETA.AllowDBNull = false;
                this.columnstatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow NewstockCodeRow() {
                return ((stockCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockCodeRowChanged != null)) {
                    this.stockCodeRowChanged(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockCodeRowChanging != null)) {
                    this.stockCodeRowChanging(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockCodeRowDeleted != null)) {
                    this.stockCodeRowDeleted(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockCodeRowDeleting != null)) {
                    this.stockCodeRowDeleting(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockCodeRow(stockCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysCodeDataTable : global::System.Data.TypedTableBase<sysCodeRow> {
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columninGroup;
            
            private global::System.Data.DataColumn columndescription1;
            
            private global::System.Data.DataColumn columndescription2;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columntag1;
            
            private global::System.Data.DataColumn columntag2;
            
            private global::System.Data.DataColumn columnisVisible;
            
            private global::System.Data.DataColumn columnisSystem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeDataTable() {
                this.TableName = "sysCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inGroupColumn {
                get {
                    return this.columninGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description1Column {
                get {
                    return this.columndescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description2Column {
                get {
                    return this.columndescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tag1Column {
                get {
                    return this.columntag1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tag2Column {
                get {
                    return this.columntag2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isVisibleColumn {
                get {
                    return this.columnisVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isSystemColumn {
                get {
                    return this.columnisSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRow this[int index] {
                get {
                    return ((sysCodeRow)(this.Rows[index]));
                }
            }
            
            public event sysCodeRowChangeEventHandler sysCodeRowChanging;
            
            public event sysCodeRowChangeEventHandler sysCodeRowChanged;
            
            public event sysCodeRowChangeEventHandler sysCodeRowDeleting;
            
            public event sysCodeRowChangeEventHandler sysCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysCodeRow(sysCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRow AddsysCodeRow(string category, string code, string inGroup, string description1, string description2, int weight, string notes, string tag1, string tag2, bool isVisible, bool isSystem) {
                sysCodeRow rowsysCodeRow = ((sysCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        category,
                        code,
                        inGroup,
                        description1,
                        description2,
                        weight,
                        notes,
                        tag1,
                        tag2,
                        isVisible,
                        isSystem};
                rowsysCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysCodeRow);
                return rowsysCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRow FindBycategorycode(string category, string code) {
                return ((sysCodeRow)(this.Rows.Find(new object[] {
                            category,
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysCodeDataTable cln = ((sysCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncategory = base.Columns["category"];
                this.columncode = base.Columns["code"];
                this.columninGroup = base.Columns["inGroup"];
                this.columndescription1 = base.Columns["description1"];
                this.columndescription2 = base.Columns["description2"];
                this.columnweight = base.Columns["weight"];
                this.columnnotes = base.Columns["notes"];
                this.columntag1 = base.Columns["tag1"];
                this.columntag2 = base.Columns["tag2"];
                this.columnisVisible = base.Columns["isVisible"];
                this.columnisSystem = base.Columns["isSystem"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncategory = new global::System.Data.DataColumn("category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columninGroup = new global::System.Data.DataColumn("inGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninGroup);
                this.columndescription1 = new global::System.Data.DataColumn("description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription1);
                this.columndescription2 = new global::System.Data.DataColumn("description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription2);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columntag1 = new global::System.Data.DataColumn("tag1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntag1);
                this.columntag2 = new global::System.Data.DataColumn("tag2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntag2);
                this.columnisVisible = new global::System.Data.DataColumn("isVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisVisible);
                this.columnisSystem = new global::System.Data.DataColumn("isSystem", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSystem);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncategory,
                                this.columncode}, true));
                this.columncategory.AllowDBNull = false;
                this.columncategory.MaxLength = 20;
                this.columncode.AllowDBNull = false;
                this.columncode.MaxLength = 20;
                this.columninGroup.MaxLength = 20;
                this.columndescription1.AllowDBNull = false;
                this.columndescription1.MaxLength = 255;
                this.columndescription2.MaxLength = 255;
                this.columnnotes.MaxLength = 1073741823;
                this.columntag1.MaxLength = 50;
                this.columntag2.MaxLength = 50;
                this.columnisVisible.AllowDBNull = false;
                this.columnisSystem.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRow NewsysCodeRow() {
                return ((sysCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysCodeRowChanged != null)) {
                    this.sysCodeRowChanged(this, new sysCodeRowChangeEvent(((sysCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysCodeRowChanging != null)) {
                    this.sysCodeRowChanging(this, new sysCodeRowChangeEvent(((sysCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysCodeRowDeleted != null)) {
                    this.sysCodeRowDeleted(this, new sysCodeRowChangeEvent(((sysCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysCodeRowDeleting != null)) {
                    this.sysCodeRowDeleting(this, new sysCodeRowChangeEvent(((sysCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysCodeRow(sysCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysCodeCatDataTable : global::System.Data.TypedTableBase<sysCodeCatRow> {
            
            private global::System.Data.DataColumn columncategory;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columntag1;
            
            private global::System.Data.DataColumn columntag2;
            
            private global::System.Data.DataColumn columnisVisible;
            
            private global::System.Data.DataColumn columnisSystem;
            
            private global::System.Data.DataColumn columnmaxCodeLen;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatDataTable() {
                this.TableName = "sysCodeCat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysCodeCatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysCodeCatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn categoryColumn {
                get {
                    return this.columncategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tag1Column {
                get {
                    return this.columntag1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tag2Column {
                get {
                    return this.columntag2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isVisibleColumn {
                get {
                    return this.columnisVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isSystemColumn {
                get {
                    return this.columnisSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxCodeLenColumn {
                get {
                    return this.columnmaxCodeLen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRow this[int index] {
                get {
                    return ((sysCodeCatRow)(this.Rows[index]));
                }
            }
            
            public event sysCodeCatRowChangeEventHandler sysCodeCatRowChanging;
            
            public event sysCodeCatRowChangeEventHandler sysCodeCatRowChanged;
            
            public event sysCodeCatRowChangeEventHandler sysCodeCatRowDeleting;
            
            public event sysCodeCatRowChangeEventHandler sysCodeCatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysCodeCatRow(sysCodeCatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRow AddsysCodeCatRow(string category, string description, string notes, string tag1, string tag2, bool isVisible, bool isSystem, byte maxCodeLen, short weight) {
                sysCodeCatRow rowsysCodeCatRow = ((sysCodeCatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        category,
                        description,
                        notes,
                        tag1,
                        tag2,
                        isVisible,
                        isSystem,
                        maxCodeLen,
                        weight};
                rowsysCodeCatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysCodeCatRow);
                return rowsysCodeCatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRow FindBycategory(string category) {
                return ((sysCodeCatRow)(this.Rows.Find(new object[] {
                            category})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysCodeCatDataTable cln = ((sysCodeCatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysCodeCatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncategory = base.Columns["category"];
                this.columndescription = base.Columns["description"];
                this.columnnotes = base.Columns["notes"];
                this.columntag1 = base.Columns["tag1"];
                this.columntag2 = base.Columns["tag2"];
                this.columnisVisible = base.Columns["isVisible"];
                this.columnisSystem = base.Columns["isSystem"];
                this.columnmaxCodeLen = base.Columns["maxCodeLen"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncategory = new global::System.Data.DataColumn("category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columntag1 = new global::System.Data.DataColumn("tag1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntag1);
                this.columntag2 = new global::System.Data.DataColumn("tag2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntag2);
                this.columnisVisible = new global::System.Data.DataColumn("isVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisVisible);
                this.columnisSystem = new global::System.Data.DataColumn("isSystem", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSystem);
                this.columnmaxCodeLen = new global::System.Data.DataColumn("maxCodeLen", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxCodeLen);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncategory}, true));
                this.columncategory.AllowDBNull = false;
                this.columncategory.Unique = true;
                this.columncategory.MaxLength = 20;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columnnotes.MaxLength = 255;
                this.columntag1.MaxLength = 50;
                this.columntag2.MaxLength = 50;
                this.columnisVisible.AllowDBNull = false;
                this.columnisSystem.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRow NewsysCodeCatRow() {
                return ((sysCodeCatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysCodeCatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysCodeCatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysCodeCatRowChanged != null)) {
                    this.sysCodeCatRowChanged(this, new sysCodeCatRowChangeEvent(((sysCodeCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysCodeCatRowChanging != null)) {
                    this.sysCodeCatRowChanging(this, new sysCodeCatRowChangeEvent(((sysCodeCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysCodeCatRowDeleted != null)) {
                    this.sysCodeCatRowDeleted(this, new sysCodeCatRowChangeEvent(((sysCodeCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysCodeCatRowDeleting != null)) {
                    this.sysCodeCatRowDeleting(this, new sysCodeCatRowChangeEvent(((sysCodeCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysCodeCatRow(sysCodeCatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysCodeCatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysConfigDataTable : global::System.Data.TypedTableBase<sysConfigRow> {
            
            private global::System.Data.DataColumn columnkey;
            
            private global::System.Data.DataColumn columnvalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigDataTable() {
                this.TableName = "sysConfig";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysConfigDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysConfigDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyColumn {
                get {
                    return this.columnkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRow this[int index] {
                get {
                    return ((sysConfigRow)(this.Rows[index]));
                }
            }
            
            public event sysConfigRowChangeEventHandler sysConfigRowChanging;
            
            public event sysConfigRowChangeEventHandler sysConfigRowChanged;
            
            public event sysConfigRowChangeEventHandler sysConfigRowDeleting;
            
            public event sysConfigRowChangeEventHandler sysConfigRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysConfigRow(sysConfigRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRow AddsysConfigRow(string key, string value) {
                sysConfigRow rowsysConfigRow = ((sysConfigRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        key,
                        value};
                rowsysConfigRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysConfigRow);
                return rowsysConfigRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRow FindBykey(string key) {
                return ((sysConfigRow)(this.Rows.Find(new object[] {
                            key})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysConfigDataTable cln = ((sysConfigDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysConfigDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkey = base.Columns["key"];
                this.columnvalue = base.Columns["value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkey = new global::System.Data.DataColumn("key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnkey}, true));
                this.columnkey.AllowDBNull = false;
                this.columnkey.Unique = true;
                this.columnkey.MaxLength = 50;
                this.columnvalue.AllowDBNull = false;
                this.columnvalue.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRow NewsysConfigRow() {
                return ((sysConfigRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysConfigRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysConfigRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysConfigRowChanged != null)) {
                    this.sysConfigRowChanged(this, new sysConfigRowChangeEvent(((sysConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysConfigRowChanging != null)) {
                    this.sysConfigRowChanging(this, new sysConfigRowChangeEvent(((sysConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysConfigRowDeleted != null)) {
                    this.sysConfigRowDeleted(this, new sysConfigRowChangeEvent(((sysConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysConfigRowDeleting != null)) {
                    this.sysConfigRowDeleting(this, new sysConfigRowChangeEvent(((sysConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysConfigRow(sysConfigRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysConfigDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysAutoKeyDataTable : global::System.Data.TypedTableBase<sysAutoKeyRow> {
            
            private global::System.Data.DataColumn columnkey;
            
            private global::System.Data.DataColumn columnvalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyDataTable() {
                this.TableName = "sysAutoKey";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysAutoKeyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysAutoKeyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyColumn {
                get {
                    return this.columnkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRow this[int index] {
                get {
                    return ((sysAutoKeyRow)(this.Rows[index]));
                }
            }
            
            public event sysAutoKeyRowChangeEventHandler sysAutoKeyRowChanging;
            
            public event sysAutoKeyRowChangeEventHandler sysAutoKeyRowChanged;
            
            public event sysAutoKeyRowChangeEventHandler sysAutoKeyRowDeleting;
            
            public event sysAutoKeyRowChangeEventHandler sysAutoKeyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysAutoKeyRow(sysAutoKeyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRow AddsysAutoKeyRow(string key, int value) {
                sysAutoKeyRow rowsysAutoKeyRow = ((sysAutoKeyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        key,
                        value};
                rowsysAutoKeyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysAutoKeyRow);
                return rowsysAutoKeyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRow FindBykey(string key) {
                return ((sysAutoKeyRow)(this.Rows.Find(new object[] {
                            key})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysAutoKeyDataTable cln = ((sysAutoKeyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysAutoKeyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkey = base.Columns["key"];
                this.columnvalue = base.Columns["value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkey = new global::System.Data.DataColumn("key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnkey}, true));
                this.columnkey.AllowDBNull = false;
                this.columnkey.Unique = true;
                this.columnkey.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRow NewsysAutoKeyRow() {
                return ((sysAutoKeyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysAutoKeyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysAutoKeyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysAutoKeyRowChanged != null)) {
                    this.sysAutoKeyRowChanged(this, new sysAutoKeyRowChangeEvent(((sysAutoKeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysAutoKeyRowChanging != null)) {
                    this.sysAutoKeyRowChanging(this, new sysAutoKeyRowChangeEvent(((sysAutoKeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysAutoKeyRowDeleted != null)) {
                    this.sysAutoKeyRowDeleted(this, new sysAutoKeyRowChangeEvent(((sysAutoKeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysAutoKeyRowDeleting != null)) {
                    this.sysAutoKeyRowDeleting(this, new sysAutoKeyRowChangeEvent(((sysAutoKeyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysAutoKeyRow(sysAutoKeyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysAutoKeyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sysAutoKeyPendingDataTable : global::System.Data.TypedTableBase<sysAutoKeyPendingRow> {
            
            private global::System.Data.DataColumn columnkey;
            
            private global::System.Data.DataColumn columnvalue;
            
            private global::System.Data.DataColumn columntimeStamp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingDataTable() {
                this.TableName = "sysAutoKeyPending";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysAutoKeyPendingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sysAutoKeyPendingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn keyColumn {
                get {
                    return this.columnkey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn timeStampColumn {
                get {
                    return this.columntimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRow this[int index] {
                get {
                    return ((sysAutoKeyPendingRow)(this.Rows[index]));
                }
            }
            
            public event sysAutoKeyPendingRowChangeEventHandler sysAutoKeyPendingRowChanging;
            
            public event sysAutoKeyPendingRowChangeEventHandler sysAutoKeyPendingRowChanged;
            
            public event sysAutoKeyPendingRowChangeEventHandler sysAutoKeyPendingRowDeleting;
            
            public event sysAutoKeyPendingRowChangeEventHandler sysAutoKeyPendingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsysAutoKeyPendingRow(sysAutoKeyPendingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRow AddsysAutoKeyPendingRow(string key, string value, System.DateTime timeStamp) {
                sysAutoKeyPendingRow rowsysAutoKeyPendingRow = ((sysAutoKeyPendingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        key,
                        value,
                        timeStamp};
                rowsysAutoKeyPendingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsysAutoKeyPendingRow);
                return rowsysAutoKeyPendingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRow FindBykey(string key) {
                return ((sysAutoKeyPendingRow)(this.Rows.Find(new object[] {
                            key})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sysAutoKeyPendingDataTable cln = ((sysAutoKeyPendingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sysAutoKeyPendingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkey = base.Columns["key"];
                this.columnvalue = base.Columns["value"];
                this.columntimeStamp = base.Columns["timeStamp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkey = new global::System.Data.DataColumn("key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columntimeStamp = new global::System.Data.DataColumn("timeStamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntimeStamp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnkey}, true));
                this.columnkey.AllowDBNull = false;
                this.columnkey.Unique = true;
                this.columnkey.MaxLength = 50;
                this.columnvalue.AllowDBNull = false;
                this.columnvalue.MaxLength = 10;
                this.columntimeStamp.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRow NewsysAutoKeyPendingRow() {
                return ((sysAutoKeyPendingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sysAutoKeyPendingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sysAutoKeyPendingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sysAutoKeyPendingRowChanged != null)) {
                    this.sysAutoKeyPendingRowChanged(this, new sysAutoKeyPendingRowChangeEvent(((sysAutoKeyPendingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sysAutoKeyPendingRowChanging != null)) {
                    this.sysAutoKeyPendingRowChanging(this, new sysAutoKeyPendingRowChangeEvent(((sysAutoKeyPendingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sysAutoKeyPendingRowDeleted != null)) {
                    this.sysAutoKeyPendingRowDeleted(this, new sysAutoKeyPendingRowChangeEvent(((sysAutoKeyPendingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sysAutoKeyPendingRowDeleting != null)) {
                    this.sysAutoKeyPendingRowDeleting(this, new sysAutoKeyPendingRowChangeEvent(((sysAutoKeyPendingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesysAutoKeyPendingRow(sysAutoKeyPendingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sysAutoKeyPendingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bizSectorDataTable : global::System.Data.TypedTableBase<bizSectorRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription1;
            
            private global::System.Data.DataColumn columndescription2;
            
            private global::System.Data.DataColumn columninGroup;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorDataTable() {
                this.TableName = "bizSector";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSectorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected bizSectorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description1Column {
                get {
                    return this.columndescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description2Column {
                get {
                    return this.columndescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inGroupColumn {
                get {
                    return this.columninGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRow this[int index] {
                get {
                    return ((bizSectorRow)(this.Rows[index]));
                }
            }
            
            public event bizSectorRowChangeEventHandler bizSectorRowChanging;
            
            public event bizSectorRowChangeEventHandler bizSectorRowChanged;
            
            public event bizSectorRowChangeEventHandler bizSectorRowDeleting;
            
            public event bizSectorRowChangeEventHandler bizSectorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbizSectorRow(bizSectorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRow AddbizSectorRow(string code, string description1, string description2, string inGroup, int weight) {
                bizSectorRow rowbizSectorRow = ((bizSectorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description1,
                        description2,
                        inGroup,
                        weight};
                rowbizSectorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbizSectorRow);
                return rowbizSectorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRow FindBycode(string code) {
                return ((bizSectorRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                bizSectorDataTable cln = ((bizSectorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bizSectorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription1 = base.Columns["description1"];
                this.columndescription2 = base.Columns["description2"];
                this.columninGroup = base.Columns["inGroup"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription1 = new global::System.Data.DataColumn("description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription1);
                this.columndescription2 = new global::System.Data.DataColumn("description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription2);
                this.columninGroup = new global::System.Data.DataColumn("inGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninGroup);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columndescription1.AllowDBNull = false;
                this.columndescription1.MaxLength = 255;
                this.columndescription2.MaxLength = 255;
                this.columninGroup.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRow NewbizSectorRow() {
                return ((bizSectorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bizSectorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(bizSectorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bizSectorRowChanged != null)) {
                    this.bizSectorRowChanged(this, new bizSectorRowChangeEvent(((bizSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bizSectorRowChanging != null)) {
                    this.bizSectorRowChanging(this, new bizSectorRowChangeEvent(((bizSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bizSectorRowDeleted != null)) {
                    this.bizSectorRowDeleted(this, new bizSectorRowChangeEvent(((bizSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bizSectorRowDeleting != null)) {
                    this.bizSectorRowDeleting(this, new bizSectorRowChangeEvent(((bizSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebizSectorRow(bizSectorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bizSectorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class countryDataTable : global::System.Data.TypedTableBase<countryRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnculture;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryDataTable() {
                this.TableName = "country";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal countryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected countryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cultureColumn {
                get {
                    return this.columnculture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRow this[int index] {
                get {
                    return ((countryRow)(this.Rows[index]));
                }
            }
            
            public event countryRowChangeEventHandler countryRowChanging;
            
            public event countryRowChangeEventHandler countryRowChanged;
            
            public event countryRowChangeEventHandler countryRowDeleting;
            
            public event countryRowChangeEventHandler countryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcountryRow(countryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRow AddcountryRow(string code, string description, int weight, string culture) {
                countryRow rowcountryRow = ((countryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description,
                        weight,
                        culture};
                rowcountryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcountryRow);
                return rowcountryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRow FindBycode(string code) {
                return ((countryRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                countryDataTable cln = ((countryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new countryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription = base.Columns["description"];
                this.columnweight = base.Columns["weight"];
                this.columnculture = base.Columns["culture"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnculture = new global::System.Data.DataColumn("culture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnculture);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 3;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columnculture.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRow NewcountryRow() {
                return ((countryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new countryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(countryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.countryRowChanged != null)) {
                    this.countryRowChanged(this, new countryRowChangeEvent(((countryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.countryRowChanging != null)) {
                    this.countryRowChanging(this, new countryRowChangeEvent(((countryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.countryRowDeleted != null)) {
                    this.countryRowDeleted(this, new countryRowChangeEvent(((countryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.countryRowDeleting != null)) {
                    this.countryRowDeleting(this, new countryRowChangeEvent(((countryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecountryRow(countryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "countryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class currencyDataTable : global::System.Data.TypedTableBase<currencyRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyDataTable() {
                this.TableName = "currency";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal currencyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected currencyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRow this[int index] {
                get {
                    return ((currencyRow)(this.Rows[index]));
                }
            }
            
            public event currencyRowChangeEventHandler currencyRowChanging;
            
            public event currencyRowChangeEventHandler currencyRowChanged;
            
            public event currencyRowChangeEventHandler currencyRowDeleting;
            
            public event currencyRowChangeEventHandler currencyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcurrencyRow(currencyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRow AddcurrencyRow(string code, string description, int weight) {
                currencyRow rowcurrencyRow = ((currencyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description,
                        weight};
                rowcurrencyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcurrencyRow);
                return rowcurrencyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRow FindBycode(string code) {
                return ((currencyRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                currencyDataTable cln = ((currencyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new currencyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription = base.Columns["description"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 1;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRow NewcurrencyRow() {
                return ((currencyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new currencyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(currencyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.currencyRowChanged != null)) {
                    this.currencyRowChanged(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.currencyRowChanging != null)) {
                    this.currencyRowChanging(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.currencyRowDeleted != null)) {
                    this.currencyRowDeleted(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.currencyRowDeleting != null)) {
                    this.currencyRowDeleting(this, new currencyRowChangeEvent(((currencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecurrencyRow(currencyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "currencyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investorCatDataTable : global::System.Data.TypedTableBase<investorCatRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatDataTable() {
                this.TableName = "investorCat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorCatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected investorCatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRow this[int index] {
                get {
                    return ((investorCatRow)(this.Rows[index]));
                }
            }
            
            public event investorCatRowChangeEventHandler investorCatRowChanging;
            
            public event investorCatRowChangeEventHandler investorCatRowChanged;
            
            public event investorCatRowChangeEventHandler investorCatRowDeleting;
            
            public event investorCatRowChangeEventHandler investorCatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvestorCatRow(investorCatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRow AddinvestorCatRow(string code, string description, int weight) {
                investorCatRow rowinvestorCatRow = ((investorCatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description,
                        weight};
                rowinvestorCatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestorCatRow);
                return rowinvestorCatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRow FindBycode(string code) {
                return ((investorCatRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                investorCatDataTable cln = ((investorCatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investorCatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription = base.Columns["description"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 3;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRow NewinvestorCatRow() {
                return ((investorCatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investorCatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(investorCatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investorCatRowChanged != null)) {
                    this.investorCatRowChanged(this, new investorCatRowChangeEvent(((investorCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investorCatRowChanging != null)) {
                    this.investorCatRowChanging(this, new investorCatRowChangeEvent(((investorCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investorCatRowDeleted != null)) {
                    this.investorCatRowDeleted(this, new investorCatRowChangeEvent(((investorCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investorCatRowDeleting != null)) {
                    this.investorCatRowDeleting(this, new investorCatRowChangeEvent(((investorCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvestorCatRow(investorCatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investorCatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employeeRangeDataTable : global::System.Data.TypedTableBase<employeeRangeRow> {
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columncode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeDataTable() {
                this.TableName = "employeeRange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeRangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employeeRangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRow this[int index] {
                get {
                    return ((employeeRangeRow)(this.Rows[index]));
                }
            }
            
            public event employeeRangeRowChangeEventHandler employeeRangeRowChanging;
            
            public event employeeRangeRowChangeEventHandler employeeRangeRowChanged;
            
            public event employeeRangeRowChangeEventHandler employeeRangeRowDeleting;
            
            public event employeeRangeRowChangeEventHandler employeeRangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddemployeeRangeRow(employeeRangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRow AddemployeeRangeRow(string description, int weight, string code) {
                employeeRangeRow rowemployeeRangeRow = ((employeeRangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        description,
                        weight,
                        code};
                rowemployeeRangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployeeRangeRow);
                return rowemployeeRangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRow FindBycode(string code) {
                return ((employeeRangeRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employeeRangeDataTable cln = ((employeeRangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employeeRangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndescription = base.Columns["description"];
                this.columnweight = base.Columns["weight"];
                this.columncode = base.Columns["code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRow NewemployeeRangeRow() {
                return ((employeeRangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employeeRangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employeeRangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employeeRangeRowChanged != null)) {
                    this.employeeRangeRowChanged(this, new employeeRangeRowChangeEvent(((employeeRangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employeeRangeRowChanging != null)) {
                    this.employeeRangeRowChanging(this, new employeeRangeRowChangeEvent(((employeeRangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employeeRangeRowDeleted != null)) {
                    this.employeeRangeRowDeleted(this, new employeeRangeRowChangeEvent(((employeeRangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employeeRangeRowDeleting != null)) {
                    this.employeeRangeRowDeleting(this, new employeeRangeRowChangeEvent(((employeeRangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveemployeeRangeRow(employeeRangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employeeRangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bizIndustryDataTable : global::System.Data.TypedTableBase<bizIndustryRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription1;
            
            private global::System.Data.DataColumn columndescription2;
            
            private global::System.Data.DataColumn columninGroup;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryDataTable() {
                this.TableName = "bizIndustry";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizIndustryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected bizIndustryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description1Column {
                get {
                    return this.columndescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description2Column {
                get {
                    return this.columndescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inGroupColumn {
                get {
                    return this.columninGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRow this[int index] {
                get {
                    return ((bizIndustryRow)(this.Rows[index]));
                }
            }
            
            public event bizIndustryRowChangeEventHandler bizIndustryRowChanging;
            
            public event bizIndustryRowChangeEventHandler bizIndustryRowChanged;
            
            public event bizIndustryRowChangeEventHandler bizIndustryRowDeleting;
            
            public event bizIndustryRowChangeEventHandler bizIndustryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbizIndustryRow(bizIndustryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRow AddbizIndustryRow(string code, string description1, string description2, string inGroup, int weight) {
                bizIndustryRow rowbizIndustryRow = ((bizIndustryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description1,
                        description2,
                        inGroup,
                        weight};
                rowbizIndustryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbizIndustryRow);
                return rowbizIndustryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRow FindBycode(string code) {
                return ((bizIndustryRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                bizIndustryDataTable cln = ((bizIndustryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bizIndustryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription1 = base.Columns["description1"];
                this.columndescription2 = base.Columns["description2"];
                this.columninGroup = base.Columns["inGroup"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription1 = new global::System.Data.DataColumn("description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription1);
                this.columndescription2 = new global::System.Data.DataColumn("description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription2);
                this.columninGroup = new global::System.Data.DataColumn("inGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninGroup);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columndescription1.AllowDBNull = false;
                this.columndescription1.MaxLength = 255;
                this.columndescription2.MaxLength = 255;
                this.columninGroup.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRow NewbizIndustryRow() {
                return ((bizIndustryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bizIndustryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(bizIndustryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bizIndustryRowChanged != null)) {
                    this.bizIndustryRowChanged(this, new bizIndustryRowChangeEvent(((bizIndustryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bizIndustryRowChanging != null)) {
                    this.bizIndustryRowChanging(this, new bizIndustryRowChangeEvent(((bizIndustryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bizIndustryRowDeleted != null)) {
                    this.bizIndustryRowDeleted(this, new bizIndustryRowChangeEvent(((bizIndustryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bizIndustryRowDeleting != null)) {
                    this.bizIndustryRowDeleting(this, new bizIndustryRowChangeEvent(((bizIndustryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebizIndustryRow(bizIndustryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bizIndustryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bizSuperSectorDataTable : global::System.Data.TypedTableBase<bizSuperSectorRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription1;
            
            private global::System.Data.DataColumn columndescription2;
            
            private global::System.Data.DataColumn columninGroup;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorDataTable() {
                this.TableName = "bizSuperSector";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSuperSectorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected bizSuperSectorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description1Column {
                get {
                    return this.columndescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description2Column {
                get {
                    return this.columndescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inGroupColumn {
                get {
                    return this.columninGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRow this[int index] {
                get {
                    return ((bizSuperSectorRow)(this.Rows[index]));
                }
            }
            
            public event bizSuperSectorRowChangeEventHandler bizSuperSectorRowChanging;
            
            public event bizSuperSectorRowChangeEventHandler bizSuperSectorRowChanged;
            
            public event bizSuperSectorRowChangeEventHandler bizSuperSectorRowDeleting;
            
            public event bizSuperSectorRowChangeEventHandler bizSuperSectorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbizSuperSectorRow(bizSuperSectorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRow AddbizSuperSectorRow(string code, string description1, string description2, string inGroup, int weight) {
                bizSuperSectorRow rowbizSuperSectorRow = ((bizSuperSectorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description1,
                        description2,
                        inGroup,
                        weight};
                rowbizSuperSectorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbizSuperSectorRow);
                return rowbizSuperSectorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRow FindBycode(string code) {
                return ((bizSuperSectorRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                bizSuperSectorDataTable cln = ((bizSuperSectorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bizSuperSectorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription1 = base.Columns["description1"];
                this.columndescription2 = base.Columns["description2"];
                this.columninGroup = base.Columns["inGroup"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription1 = new global::System.Data.DataColumn("description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription1);
                this.columndescription2 = new global::System.Data.DataColumn("description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription2);
                this.columninGroup = new global::System.Data.DataColumn("inGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninGroup);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columndescription1.AllowDBNull = false;
                this.columndescription1.MaxLength = 255;
                this.columndescription2.MaxLength = 255;
                this.columninGroup.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRow NewbizSuperSectorRow() {
                return ((bizSuperSectorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bizSuperSectorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(bizSuperSectorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bizSuperSectorRowChanged != null)) {
                    this.bizSuperSectorRowChanged(this, new bizSuperSectorRowChangeEvent(((bizSuperSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bizSuperSectorRowChanging != null)) {
                    this.bizSuperSectorRowChanging(this, new bizSuperSectorRowChangeEvent(((bizSuperSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bizSuperSectorRowDeleted != null)) {
                    this.bizSuperSectorRowDeleted(this, new bizSuperSectorRowChangeEvent(((bizSuperSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bizSuperSectorRowDeleting != null)) {
                    this.bizSuperSectorRowDeleting(this, new bizSuperSectorRowChangeEvent(((bizSuperSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebizSuperSectorRow(bizSuperSectorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bizSuperSectorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class bizSubSectorDataTable : global::System.Data.TypedTableBase<bizSubSectorRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription1;
            
            private global::System.Data.DataColumn columndescription2;
            
            private global::System.Data.DataColumn columninGroup;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorDataTable() {
                this.TableName = "bizSubSector";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSubSectorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected bizSubSectorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description1Column {
                get {
                    return this.columndescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn description2Column {
                get {
                    return this.columndescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inGroupColumn {
                get {
                    return this.columninGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRow this[int index] {
                get {
                    return ((bizSubSectorRow)(this.Rows[index]));
                }
            }
            
            public event bizSubSectorRowChangeEventHandler bizSubSectorRowChanging;
            
            public event bizSubSectorRowChangeEventHandler bizSubSectorRowChanged;
            
            public event bizSubSectorRowChangeEventHandler bizSubSectorRowDeleting;
            
            public event bizSubSectorRowChangeEventHandler bizSubSectorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbizSubSectorRow(bizSubSectorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRow AddbizSubSectorRow(string code, string description1, string description2, string inGroup, int weight) {
                bizSubSectorRow rowbizSubSectorRow = ((bizSubSectorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description1,
                        description2,
                        inGroup,
                        weight};
                rowbizSubSectorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbizSubSectorRow);
                return rowbizSubSectorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRow FindBycode(string code) {
                return ((bizSubSectorRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                bizSubSectorDataTable cln = ((bizSubSectorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new bizSubSectorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription1 = base.Columns["description1"];
                this.columndescription2 = base.Columns["description2"];
                this.columninGroup = base.Columns["inGroup"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription1 = new global::System.Data.DataColumn("description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription1);
                this.columndescription2 = new global::System.Data.DataColumn("description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription2);
                this.columninGroup = new global::System.Data.DataColumn("inGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninGroup);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columndescription1.AllowDBNull = false;
                this.columndescription1.MaxLength = 255;
                this.columndescription2.MaxLength = 255;
                this.columninGroup.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRow NewbizSubSectorRow() {
                return ((bizSubSectorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new bizSubSectorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(bizSubSectorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.bizSubSectorRowChanged != null)) {
                    this.bizSubSectorRowChanged(this, new bizSubSectorRowChangeEvent(((bizSubSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.bizSubSectorRowChanging != null)) {
                    this.bizSubSectorRowChanging(this, new bizSubSectorRowChangeEvent(((bizSubSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.bizSubSectorRowDeleted != null)) {
                    this.bizSubSectorRowDeleted(this, new bizSubSectorRowChangeEvent(((bizSubSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.bizSubSectorRowDeleting != null)) {
                    this.bizSubSectorRowDeleting(this, new bizSubSectorRowChangeEvent(((bizSubSectorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebizSubSectorRow(bizSubSectorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "bizSubSectorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class portfolioDataTable : global::System.Data.TypedTableBase<portfolioRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columninvestorCode;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnstartCapAmt;
            
            private global::System.Data.DataColumn columnusedCapAmt;
            
            private global::System.Data.DataColumn columnstockAccumulatePerc;
            
            private global::System.Data.DataColumn columnstockReducePerc;
            
            private global::System.Data.DataColumn columnmaxBuyAmtPerc;
            
            private global::System.Data.DataColumn columninterestedStock;
            
            private global::System.Data.DataColumn columninterestedSector;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDataTable() {
                this.TableName = "portfolio";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal portfolioDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected portfolioDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn investorCodeColumn {
                get {
                    return this.columninvestorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startCapAmtColumn {
                get {
                    return this.columnstartCapAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usedCapAmtColumn {
                get {
                    return this.columnusedCapAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockAccumulatePercColumn {
                get {
                    return this.columnstockAccumulatePerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockReducePercColumn {
                get {
                    return this.columnstockReducePerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxBuyAmtPercColumn {
                get {
                    return this.columnmaxBuyAmtPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interestedStockColumn {
                get {
                    return this.columninterestedStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interestedSectorColumn {
                get {
                    return this.columninterestedSector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRow this[int index] {
                get {
                    return ((portfolioRow)(this.Rows[index]));
                }
            }
            
            public event portfolioRowChangeEventHandler portfolioRowChanging;
            
            public event portfolioRowChangeEventHandler portfolioRowChanged;
            
            public event portfolioRowChangeEventHandler portfolioRowDeleting;
            
            public event portfolioRowChangeEventHandler portfolioRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddportfolioRow(portfolioRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRow AddportfolioRow(string code, byte type, string investorCode, string name, string description, decimal startCapAmt, decimal usedCapAmt, decimal stockAccumulatePerc, decimal stockReducePerc, decimal maxBuyAmtPerc, string interestedStock, string interestedSector) {
                portfolioRow rowportfolioRow = ((portfolioRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        type,
                        investorCode,
                        name,
                        description,
                        startCapAmt,
                        usedCapAmt,
                        stockAccumulatePerc,
                        stockReducePerc,
                        maxBuyAmtPerc,
                        interestedStock,
                        interestedSector};
                rowportfolioRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowportfolioRow);
                return rowportfolioRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRow FindBycode(string code) {
                return ((portfolioRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                portfolioDataTable cln = ((portfolioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new portfolioDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columntype = base.Columns["type"];
                this.columninvestorCode = base.Columns["investorCode"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnstartCapAmt = base.Columns["startCapAmt"];
                this.columnusedCapAmt = base.Columns["usedCapAmt"];
                this.columnstockAccumulatePerc = base.Columns["stockAccumulatePerc"];
                this.columnstockReducePerc = base.Columns["stockReducePerc"];
                this.columnmaxBuyAmtPerc = base.Columns["maxBuyAmtPerc"];
                this.columninterestedStock = base.Columns["interestedStock"];
                this.columninterestedSector = base.Columns["interestedSector"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columninvestorCode = new global::System.Data.DataColumn("investorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvestorCode);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnstartCapAmt = new global::System.Data.DataColumn("startCapAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartCapAmt);
                this.columnusedCapAmt = new global::System.Data.DataColumn("usedCapAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusedCapAmt);
                this.columnstockAccumulatePerc = new global::System.Data.DataColumn("stockAccumulatePerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockAccumulatePerc);
                this.columnstockReducePerc = new global::System.Data.DataColumn("stockReducePerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockReducePerc);
                this.columnmaxBuyAmtPerc = new global::System.Data.DataColumn("maxBuyAmtPerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxBuyAmtPerc);
                this.columninterestedStock = new global::System.Data.DataColumn("interestedStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterestedStock);
                this.columninterestedSector = new global::System.Data.DataColumn("interestedSector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterestedSector);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columntype.AllowDBNull = false;
                this.columninvestorCode.AllowDBNull = false;
                this.columninvestorCode.MaxLength = 10;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 50;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columnstartCapAmt.AllowDBNull = false;
                this.columnusedCapAmt.AllowDBNull = false;
                this.columnstockAccumulatePerc.AllowDBNull = false;
                this.columnstockReducePerc.AllowDBNull = false;
                this.columnmaxBuyAmtPerc.AllowDBNull = false;
                this.columninterestedStock.AllowDBNull = false;
                this.columninterestedStock.MaxLength = 1073741823;
                this.columninterestedSector.AllowDBNull = false;
                this.columninterestedSector.MaxLength = 1073741823;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRow NewportfolioRow() {
                return ((portfolioRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new portfolioRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(portfolioRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.portfolioRowChanged != null)) {
                    this.portfolioRowChanged(this, new portfolioRowChangeEvent(((portfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.portfolioRowChanging != null)) {
                    this.portfolioRowChanging(this, new portfolioRowChangeEvent(((portfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.portfolioRowDeleted != null)) {
                    this.portfolioRowDeleted(this, new portfolioRowChangeEvent(((portfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.portfolioRowDeleting != null)) {
                    this.portfolioRowDeleting(this, new portfolioRowChangeEvent(((portfolioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveportfolioRow(portfolioRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "portfolioDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tradeAlertDataTable : global::System.Data.TypedTableBase<tradeAlertRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnonTime;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columntradeAction;
            
            private global::System.Data.DataColumn columnportfolio;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columntimeScale;
            
            private global::System.Data.DataColumn columnstrategy;
            
            private global::System.Data.DataColumn columnsubject;
            
            private global::System.Data.DataColumn columnmsg;
            
            private global::System.Data.DataColumn columnstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertDataTable() {
                this.TableName = "tradeAlert";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tradeAlertDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tradeAlertDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onTimeColumn {
                get {
                    return this.columnonTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tradeActionColumn {
                get {
                    return this.columntradeAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioColumn {
                get {
                    return this.columnportfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn timeScaleColumn {
                get {
                    return this.columntimeScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn strategyColumn {
                get {
                    return this.columnstrategy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subjectColumn {
                get {
                    return this.columnsubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn msgColumn {
                get {
                    return this.columnmsg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRow this[int index] {
                get {
                    return ((tradeAlertRow)(this.Rows[index]));
                }
            }
            
            public event tradeAlertRowChangeEventHandler tradeAlertRowChanging;
            
            public event tradeAlertRowChangeEventHandler tradeAlertRowChanged;
            
            public event tradeAlertRowChangeEventHandler tradeAlertRowDeleting;
            
            public event tradeAlertRowChangeEventHandler tradeAlertRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtradeAlertRow(tradeAlertRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRow AddtradeAlertRow(System.DateTime onTime, string type, byte tradeAction, string portfolio, string stockCode, string timeScale, string strategy, string subject, string msg, byte status) {
                tradeAlertRow rowtradeAlertRow = ((tradeAlertRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        onTime,
                        type,
                        tradeAction,
                        portfolio,
                        stockCode,
                        timeScale,
                        strategy,
                        subject,
                        msg,
                        status};
                rowtradeAlertRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtradeAlertRow);
                return rowtradeAlertRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRow FindByid(int id) {
                return ((tradeAlertRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tradeAlertDataTable cln = ((tradeAlertDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tradeAlertDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnonTime = base.Columns["onTime"];
                this.columntype = base.Columns["type"];
                this.columntradeAction = base.Columns["tradeAction"];
                this.columnportfolio = base.Columns["portfolio"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columntimeScale = base.Columns["timeScale"];
                this.columnstrategy = base.Columns["strategy"];
                this.columnsubject = base.Columns["subject"];
                this.columnmsg = base.Columns["msg"];
                this.columnstatus = base.Columns["status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnonTime = new global::System.Data.DataColumn("onTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonTime);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columntradeAction = new global::System.Data.DataColumn("tradeAction", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntradeAction);
                this.columnportfolio = new global::System.Data.DataColumn("portfolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolio);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columntimeScale = new global::System.Data.DataColumn("timeScale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntimeScale);
                this.columnstrategy = new global::System.Data.DataColumn("strategy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrategy);
                this.columnsubject = new global::System.Data.DataColumn("subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubject);
                this.columnmsg = new global::System.Data.DataColumn("msg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmsg);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnonTime.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 3;
                this.columntradeAction.AllowDBNull = false;
                this.columnportfolio.AllowDBNull = false;
                this.columnportfolio.MaxLength = 10;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columntimeScale.AllowDBNull = false;
                this.columntimeScale.MaxLength = 2;
                this.columnstrategy.AllowDBNull = false;
                this.columnstrategy.MaxLength = 10;
                this.columnsubject.AllowDBNull = false;
                this.columnsubject.MaxLength = 100;
                this.columnmsg.AllowDBNull = false;
                this.columnmsg.MaxLength = 512;
                this.columnstatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRow NewtradeAlertRow() {
                return ((tradeAlertRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tradeAlertRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tradeAlertRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tradeAlertRowChanged != null)) {
                    this.tradeAlertRowChanged(this, new tradeAlertRowChangeEvent(((tradeAlertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tradeAlertRowChanging != null)) {
                    this.tradeAlertRowChanging(this, new tradeAlertRowChangeEvent(((tradeAlertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tradeAlertRowDeleted != null)) {
                    this.tradeAlertRowDeleted(this, new tradeAlertRowChangeEvent(((tradeAlertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tradeAlertRowDeleting != null)) {
                    this.tradeAlertRowDeleting(this, new tradeAlertRowChangeEvent(((tradeAlertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetradeAlertRow(tradeAlertRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tradeAlertDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class priceDataSumDataTable : global::System.Data.TypedTableBase<priceDataSumRow> {
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnopenPrice;
            
            private global::System.Data.DataColumn columnclosePrice;
            
            private global::System.Data.DataColumn columnlowPrice;
            
            private global::System.Data.DataColumn columnhighPrice;
            
            private global::System.Data.DataColumn columnvolume;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumDataTable() {
                this.TableName = "priceDataSum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataSumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected priceDataSumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn openPriceColumn {
                get {
                    return this.columnopenPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn closePriceColumn {
                get {
                    return this.columnclosePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lowPriceColumn {
                get {
                    return this.columnlowPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn highPriceColumn {
                get {
                    return this.columnhighPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn volumeColumn {
                get {
                    return this.columnvolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRow this[int index] {
                get {
                    return ((priceDataSumRow)(this.Rows[index]));
                }
            }
            
            public event priceDataSumRowChangeEventHandler priceDataSumRowChanging;
            
            public event priceDataSumRowChangeEventHandler priceDataSumRowChanged;
            
            public event priceDataSumRowChangeEventHandler priceDataSumRowDeleting;
            
            public event priceDataSumRowChangeEventHandler priceDataSumRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpriceDataSumRow(priceDataSumRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRow AddpriceDataSumRow(System.DateTime onDate, string type, string stockCode, decimal openPrice, decimal closePrice, decimal lowPrice, decimal highPrice, decimal volume) {
                priceDataSumRow rowpriceDataSumRow = ((priceDataSumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        onDate,
                        type,
                        stockCode,
                        openPrice,
                        closePrice,
                        lowPrice,
                        highPrice,
                        volume};
                rowpriceDataSumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpriceDataSumRow);
                return rowpriceDataSumRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRow FindBytypestockCodeonDate(string type, string stockCode, System.DateTime onDate) {
                return ((priceDataSumRow)(this.Rows.Find(new object[] {
                            type,
                            stockCode,
                            onDate})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                priceDataSumDataTable cln = ((priceDataSumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new priceDataSumDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnonDate = base.Columns["onDate"];
                this.columntype = base.Columns["type"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnopenPrice = base.Columns["openPrice"];
                this.columnclosePrice = base.Columns["closePrice"];
                this.columnlowPrice = base.Columns["lowPrice"];
                this.columnhighPrice = base.Columns["highPrice"];
                this.columnvolume = base.Columns["volume"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnopenPrice = new global::System.Data.DataColumn("openPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopenPrice);
                this.columnclosePrice = new global::System.Data.DataColumn("closePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclosePrice);
                this.columnlowPrice = new global::System.Data.DataColumn("lowPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlowPrice);
                this.columnhighPrice = new global::System.Data.DataColumn("highPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhighPrice);
                this.columnvolume = new global::System.Data.DataColumn("volume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolume);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntype,
                                this.columnstockCode,
                                this.columnonDate}, true));
                this.columnonDate.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 2;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnopenPrice.AllowDBNull = false;
                this.columnclosePrice.AllowDBNull = false;
                this.columnlowPrice.AllowDBNull = false;
                this.columnhighPrice.AllowDBNull = false;
                this.columnvolume.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRow NewpriceDataSumRow() {
                return ((priceDataSumRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new priceDataSumRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(priceDataSumRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.priceDataSumRowChanged != null)) {
                    this.priceDataSumRowChanged(this, new priceDataSumRowChangeEvent(((priceDataSumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.priceDataSumRowChanging != null)) {
                    this.priceDataSumRowChanging(this, new priceDataSumRowChangeEvent(((priceDataSumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.priceDataSumRowDeleted != null)) {
                    this.priceDataSumRowDeleted(this, new priceDataSumRowChangeEvent(((priceDataSumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.priceDataSumRowDeleting != null)) {
                    this.priceDataSumRowDeleting(this, new priceDataSumRowChangeEvent(((priceDataSumRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepriceDataSumRow(priceDataSumRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "priceDataSumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class portfolioDetailDataTable : global::System.Data.TypedTableBase<portfolioDetailRow> {
            
            private global::System.Data.DataColumn columnportfolio;
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnsubCode;
            
            private global::System.Data.DataColumn columndata;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailDataTable() {
                this.TableName = "portfolioDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal portfolioDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected portfolioDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioColumn {
                get {
                    return this.columnportfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subCodeColumn {
                get {
                    return this.columnsubCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRow this[int index] {
                get {
                    return ((portfolioDetailRow)(this.Rows[index]));
                }
            }
            
            public event portfolioDetailRowChangeEventHandler portfolioDetailRowChanging;
            
            public event portfolioDetailRowChangeEventHandler portfolioDetailRowChanged;
            
            public event portfolioDetailRowChangeEventHandler portfolioDetailRowDeleting;
            
            public event portfolioDetailRowChangeEventHandler portfolioDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddportfolioDetailRow(portfolioDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRow AddportfolioDetailRow(string portfolio, string code, string subCode, string data) {
                portfolioDetailRow rowportfolioDetailRow = ((portfolioDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        portfolio,
                        code,
                        subCode,
                        data};
                rowportfolioDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowportfolioDetailRow);
                return rowportfolioDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRow FindByportfoliocodesubCode(string portfolio, string code, string subCode) {
                return ((portfolioDetailRow)(this.Rows.Find(new object[] {
                            portfolio,
                            code,
                            subCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                portfolioDetailDataTable cln = ((portfolioDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new portfolioDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnportfolio = base.Columns["portfolio"];
                this.columncode = base.Columns["code"];
                this.columnsubCode = base.Columns["subCode"];
                this.columndata = base.Columns["data"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnportfolio = new global::System.Data.DataColumn("portfolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolio);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnsubCode = new global::System.Data.DataColumn("subCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubCode);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnportfolio,
                                this.columncode,
                                this.columnsubCode}, true));
                this.columnportfolio.AllowDBNull = false;
                this.columnportfolio.MaxLength = 10;
                this.columncode.AllowDBNull = false;
                this.columncode.MaxLength = 20;
                this.columnsubCode.AllowDBNull = false;
                this.columnsubCode.MaxLength = 20;
                this.columndata.AllowDBNull = false;
                this.columndata.MaxLength = 512;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRow NewportfolioDetailRow() {
                return ((portfolioDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new portfolioDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(portfolioDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.portfolioDetailRowChanged != null)) {
                    this.portfolioDetailRowChanged(this, new portfolioDetailRowChangeEvent(((portfolioDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.portfolioDetailRowChanging != null)) {
                    this.portfolioDetailRowChanging(this, new portfolioDetailRowChangeEvent(((portfolioDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.portfolioDetailRowDeleted != null)) {
                    this.portfolioDetailRowDeleted(this, new portfolioDetailRowChangeEvent(((portfolioDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.portfolioDetailRowDeleting != null)) {
                    this.portfolioDetailRowDeleting(this, new portfolioDetailRowChangeEvent(((portfolioDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveportfolioDetailRow(portfolioDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "portfolioDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class priceDataStatDataTable : global::System.Data.TypedTableBase<priceDataStatRow> {
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnmaxDate;
            
            private global::System.Data.DataColumn columnminDate;
            
            private global::System.Data.DataColumn columntotalCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatDataTable() {
                this.TableName = "priceDataStat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataStatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected priceDataStatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxDateColumn {
                get {
                    return this.columnmaxDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minDateColumn {
                get {
                    return this.columnminDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCountColumn {
                get {
                    return this.columntotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRow this[int index] {
                get {
                    return ((priceDataStatRow)(this.Rows[index]));
                }
            }
            
            public event priceDataStatRowChangeEventHandler priceDataStatRowChanging;
            
            public event priceDataStatRowChangeEventHandler priceDataStatRowChanged;
            
            public event priceDataStatRowChangeEventHandler priceDataStatRowDeleting;
            
            public event priceDataStatRowChangeEventHandler priceDataStatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpriceDataStatRow(priceDataStatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRow AddpriceDataStatRow(string type, string stockCode, System.DateTime maxDate, System.DateTime minDate, int totalCount) {
                priceDataStatRow rowpriceDataStatRow = ((priceDataStatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type,
                        stockCode,
                        maxDate,
                        minDate,
                        totalCount};
                rowpriceDataStatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpriceDataStatRow);
                return rowpriceDataStatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRow FindBytypestockCode(string type, string stockCode) {
                return ((priceDataStatRow)(this.Rows.Find(new object[] {
                            type,
                            stockCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                priceDataStatDataTable cln = ((priceDataStatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new priceDataStatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype = base.Columns["type"];
                this.columnstockCode = base.Columns["stockCode"];
                this.columnmaxDate = base.Columns["maxDate"];
                this.columnminDate = base.Columns["minDate"];
                this.columntotalCount = base.Columns["totalCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnmaxDate = new global::System.Data.DataColumn("maxDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxDate);
                this.columnminDate = new global::System.Data.DataColumn("minDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminDate);
                this.columntotalCount = new global::System.Data.DataColumn("totalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntype,
                                this.columnstockCode}, true));
                this.columntype.AllowDBNull = false;
                this.columntype.ReadOnly = true;
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnmaxDate.ReadOnly = true;
                this.columnminDate.ReadOnly = true;
                this.columntotalCount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRow NewpriceDataStatRow() {
                return ((priceDataStatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new priceDataStatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(priceDataStatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.priceDataStatRowChanged != null)) {
                    this.priceDataStatRowChanged(this, new priceDataStatRowChangeEvent(((priceDataStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.priceDataStatRowChanging != null)) {
                    this.priceDataStatRowChanging(this, new priceDataStatRowChangeEvent(((priceDataStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.priceDataStatRowDeleted != null)) {
                    this.priceDataStatRowDeleted(this, new priceDataStatRowChangeEvent(((priceDataStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.priceDataStatRowDeleting != null)) {
                    this.priceDataStatRowDeleting(this, new priceDataStatRowChangeEvent(((priceDataStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepriceDataStatRow(priceDataStatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "priceDataStatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lastPriceDataDataTable : global::System.Data.TypedTableBase<lastPriceDataRow> {
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnvalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataDataTable() {
                this.TableName = "lastPriceData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lastPriceDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lastPriceDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRow this[int index] {
                get {
                    return ((lastPriceDataRow)(this.Rows[index]));
                }
            }
            
            public event lastPriceDataRowChangeEventHandler lastPriceDataRowChanging;
            
            public event lastPriceDataRowChangeEventHandler lastPriceDataRowChanged;
            
            public event lastPriceDataRowChangeEventHandler lastPriceDataRowDeleting;
            
            public event lastPriceDataRowChangeEventHandler lastPriceDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlastPriceDataRow(lastPriceDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRow AddlastPriceDataRow(string stockCode, decimal value) {
                lastPriceDataRow rowlastPriceDataRow = ((lastPriceDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stockCode,
                        value};
                rowlastPriceDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlastPriceDataRow);
                return rowlastPriceDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRow FindBystockCode(string stockCode) {
                return ((lastPriceDataRow)(this.Rows.Find(new object[] {
                            stockCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lastPriceDataDataTable cln = ((lastPriceDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lastPriceDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstockCode = base.Columns["stockCode"];
                this.columnvalue = base.Columns["value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstockCode}, true));
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.Unique = true;
                this.columnstockCode.MaxLength = 20;
                this.columnvalue.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRow NewlastPriceDataRow() {
                return ((lastPriceDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lastPriceDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lastPriceDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lastPriceDataRowChanged != null)) {
                    this.lastPriceDataRowChanged(this, new lastPriceDataRowChangeEvent(((lastPriceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lastPriceDataRowChanging != null)) {
                    this.lastPriceDataRowChanging(this, new lastPriceDataRowChangeEvent(((lastPriceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lastPriceDataRowDeleted != null)) {
                    this.lastPriceDataRowDeleted(this, new lastPriceDataRowChangeEvent(((lastPriceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lastPriceDataRowDeleting != null)) {
                    this.lastPriceDataRowDeleting(this, new lastPriceDataRowChangeEvent(((lastPriceDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelastPriceDataRow(lastPriceDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lastPriceDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class messagesDataTable : global::System.Data.TypedTableBase<messagesRow> {
            
            private global::System.Data.DataColumn columnMsgId;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnOnDate;
            
            private global::System.Data.DataColumn columnSenderId;
            
            private global::System.Data.DataColumn columnReceiverId;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnMsgBody;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnRefMsgId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesDataTable() {
                this.TableName = "messages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal messagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected messagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MsgIdColumn {
                get {
                    return this.columnMsgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnDateColumn {
                get {
                    return this.columnOnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenderIdColumn {
                get {
                    return this.columnSenderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiverIdColumn {
                get {
                    return this.columnReceiverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MsgBodyColumn {
                get {
                    return this.columnMsgBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefMsgIdColumn {
                get {
                    return this.columnRefMsgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRow this[int index] {
                get {
                    return ((messagesRow)(this.Rows[index]));
                }
            }
            
            public event messagesRowChangeEventHandler messagesRowChanging;
            
            public event messagesRowChangeEventHandler messagesRowChanged;
            
            public event messagesRowChangeEventHandler messagesRowDeleting;
            
            public event messagesRowChangeEventHandler messagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmessagesRow(messagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRow AddmessagesRow(short type, System.DateTime OnDate, string SenderId, string ReceiverId, string Category, string Subject, string MsgBody, short status, int RefMsgId) {
                messagesRow rowmessagesRow = ((messagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        type,
                        OnDate,
                        SenderId,
                        ReceiverId,
                        Category,
                        Subject,
                        MsgBody,
                        status,
                        RefMsgId};
                rowmessagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmessagesRow);
                return rowmessagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRow FindByMsgId(int MsgId) {
                return ((messagesRow)(this.Rows.Find(new object[] {
                            MsgId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                messagesDataTable cln = ((messagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new messagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMsgId = base.Columns["MsgId"];
                this.columntype = base.Columns["type"];
                this.columnOnDate = base.Columns["OnDate"];
                this.columnSenderId = base.Columns["SenderId"];
                this.columnReceiverId = base.Columns["ReceiverId"];
                this.columnCategory = base.Columns["Category"];
                this.columnSubject = base.Columns["Subject"];
                this.columnMsgBody = base.Columns["MsgBody"];
                this.columnstatus = base.Columns["status"];
                this.columnRefMsgId = base.Columns["RefMsgId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMsgId = new global::System.Data.DataColumn("MsgId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgId);
                this.columntype = new global::System.Data.DataColumn("type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnOnDate = new global::System.Data.DataColumn("OnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnDate);
                this.columnSenderId = new global::System.Data.DataColumn("SenderId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenderId);
                this.columnReceiverId = new global::System.Data.DataColumn("ReceiverId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiverId);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnMsgBody = new global::System.Data.DataColumn("MsgBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsgBody);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnRefMsgId = new global::System.Data.DataColumn("RefMsgId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefMsgId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMsgId}, true));
                this.columnMsgId.AutoIncrement = true;
                this.columnMsgId.AutoIncrementSeed = -1;
                this.columnMsgId.AutoIncrementStep = -1;
                this.columnMsgId.AllowDBNull = false;
                this.columnMsgId.Unique = true;
                this.columntype.AllowDBNull = false;
                this.columnOnDate.AllowDBNull = false;
                this.columnSenderId.AllowDBNull = false;
                this.columnSenderId.MaxLength = 10;
                this.columnReceiverId.AllowDBNull = false;
                this.columnReceiverId.MaxLength = 10;
                this.columnCategory.AllowDBNull = false;
                this.columnCategory.MaxLength = 3;
                this.columnSubject.AllowDBNull = false;
                this.columnSubject.MaxLength = 255;
                this.columnMsgBody.AllowDBNull = false;
                this.columnMsgBody.MaxLength = 1024;
                this.columnstatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRow NewmessagesRow() {
                return ((messagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new messagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(messagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.messagesRowChanged != null)) {
                    this.messagesRowChanged(this, new messagesRowChangeEvent(((messagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.messagesRowChanging != null)) {
                    this.messagesRowChanging(this, new messagesRowChangeEvent(((messagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.messagesRowDeleted != null)) {
                    this.messagesRowDeleted(this, new messagesRowChangeEvent(((messagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.messagesRowDeleting != null)) {
                    this.messagesRowDeleting(this, new messagesRowChangeEvent(((messagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemessagesRow(messagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "messagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class feedbackCatDataTable : global::System.Data.TypedTableBase<feedbackCatRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnlanguage;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatDataTable() {
                this.TableName = "feedbackCat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal feedbackCatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected feedbackCatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn languageColumn {
                get {
                    return this.columnlanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRow this[int index] {
                get {
                    return ((feedbackCatRow)(this.Rows[index]));
                }
            }
            
            public event feedbackCatRowChangeEventHandler feedbackCatRowChanging;
            
            public event feedbackCatRowChangeEventHandler feedbackCatRowChanged;
            
            public event feedbackCatRowChangeEventHandler feedbackCatRowDeleting;
            
            public event feedbackCatRowChangeEventHandler feedbackCatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddfeedbackCatRow(feedbackCatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRow AddfeedbackCatRow(string code, string description, string language, int weight) {
                feedbackCatRow rowfeedbackCatRow = ((feedbackCatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description,
                        language,
                        weight};
                rowfeedbackCatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfeedbackCatRow);
                return rowfeedbackCatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRow FindBycode(string code) {
                return ((feedbackCatRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                feedbackCatDataTable cln = ((feedbackCatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new feedbackCatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription = base.Columns["description"];
                this.columnlanguage = base.Columns["language"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnlanguage = new global::System.Data.DataColumn("language", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlanguage);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.ReadOnly = true;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 3;
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columnlanguage.ReadOnly = true;
                this.columnlanguage.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRow NewfeedbackCatRow() {
                return ((feedbackCatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new feedbackCatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(feedbackCatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.feedbackCatRowChanged != null)) {
                    this.feedbackCatRowChanged(this, new feedbackCatRowChangeEvent(((feedbackCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.feedbackCatRowChanging != null)) {
                    this.feedbackCatRowChanging(this, new feedbackCatRowChangeEvent(((feedbackCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.feedbackCatRowDeleted != null)) {
                    this.feedbackCatRowDeleted(this, new feedbackCatRowChangeEvent(((feedbackCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.feedbackCatRowDeleting != null)) {
                    this.feedbackCatRowDeleting(this, new feedbackCatRowChangeEvent(((feedbackCatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovefeedbackCatRow(feedbackCatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "feedbackCatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class exchangeDetailDataTable : global::System.Data.TypedTableBase<exchangeDetailRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnmarketCode;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columngoTrue;
            
            private global::System.Data.DataColumn columngoFalse;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columnculture;
            
            private global::System.Data.DataColumn columnisEnabled;
            
            private global::System.Data.DataColumn columnorderId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailDataTable() {
                this.TableName = "exchangeDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal exchangeDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected exchangeDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn marketCodeColumn {
                get {
                    return this.columnmarketCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn goTrueColumn {
                get {
                    return this.columngoTrue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn goFalseColumn {
                get {
                    return this.columngoFalse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cultureColumn {
                get {
                    return this.columnculture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isEnabledColumn {
                get {
                    return this.columnisEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn orderIdColumn {
                get {
                    return this.columnorderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRow this[int index] {
                get {
                    return ((exchangeDetailRow)(this.Rows[index]));
                }
            }
            
            public event exchangeDetailRowChangeEventHandler exchangeDetailRowChanging;
            
            public event exchangeDetailRowChangeEventHandler exchangeDetailRowChanged;
            
            public event exchangeDetailRowChangeEventHandler exchangeDetailRowDeleting;
            
            public event exchangeDetailRowChangeEventHandler exchangeDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddexchangeDetailRow(exchangeDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRow AddexchangeDetailRow(string code, string marketCode, string address, string goTrue, string goFalse, string notes, string culture, bool isEnabled, short orderId) {
                exchangeDetailRow rowexchangeDetailRow = ((exchangeDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        marketCode,
                        address,
                        goTrue,
                        goFalse,
                        notes,
                        culture,
                        isEnabled,
                        orderId};
                rowexchangeDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexchangeDetailRow);
                return rowexchangeDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRow FindBycode(string code) {
                return ((exchangeDetailRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                exchangeDetailDataTable cln = ((exchangeDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new exchangeDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columnmarketCode = base.Columns["marketCode"];
                this.columnaddress = base.Columns["address"];
                this.columngoTrue = base.Columns["goTrue"];
                this.columngoFalse = base.Columns["goFalse"];
                this.columnnotes = base.Columns["notes"];
                this.columnculture = base.Columns["culture"];
                this.columnisEnabled = base.Columns["isEnabled"];
                this.columnorderId = base.Columns["orderId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnmarketCode = new global::System.Data.DataColumn("marketCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarketCode);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columngoTrue = new global::System.Data.DataColumn("goTrue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngoTrue);
                this.columngoFalse = new global::System.Data.DataColumn("goFalse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngoFalse);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columnculture = new global::System.Data.DataColumn("culture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnculture);
                this.columnisEnabled = new global::System.Data.DataColumn("isEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisEnabled);
                this.columnorderId = new global::System.Data.DataColumn("orderId", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 20;
                this.columnmarketCode.AllowDBNull = false;
                this.columnmarketCode.MaxLength = 10;
                this.columnaddress.AllowDBNull = false;
                this.columnaddress.MaxLength = 255;
                this.columngoTrue.MaxLength = 20;
                this.columngoFalse.MaxLength = 20;
                this.columnnotes.MaxLength = 255;
                this.columnculture.AllowDBNull = false;
                this.columnculture.MaxLength = 2;
                this.columnisEnabled.AllowDBNull = false;
                this.columnorderId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRow NewexchangeDetailRow() {
                return ((exchangeDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new exchangeDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(exchangeDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.exchangeDetailRowChanged != null)) {
                    this.exchangeDetailRowChanged(this, new exchangeDetailRowChangeEvent(((exchangeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.exchangeDetailRowChanging != null)) {
                    this.exchangeDetailRowChanging(this, new exchangeDetailRowChangeEvent(((exchangeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.exchangeDetailRowDeleted != null)) {
                    this.exchangeDetailRowDeleted(this, new exchangeDetailRowChangeEvent(((exchangeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.exchangeDetailRowDeleting != null)) {
                    this.exchangeDetailRowDeleting(this, new exchangeDetailRowChangeEvent(((exchangeDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveexchangeDetailRow(exchangeDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "exchangeDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockExchangeDataTable : global::System.Data.TypedTableBase<stockExchangeRow> {
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columncountry;
            
            private global::System.Data.DataColumn columnworkTime;
            
            private global::System.Data.DataColumn columnholidays;
            
            private global::System.Data.DataColumn columnminBuySellDay;
            
            private global::System.Data.DataColumn columntranFeePerc;
            
            private global::System.Data.DataColumn columnpriceRatio;
            
            private global::System.Data.DataColumn columnvolumeRatio;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnpriceAmplitude;
            
            private global::System.Data.DataColumn columncode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeDataTable() {
                this.TableName = "stockExchange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockExchangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockExchangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn countryColumn {
                get {
                    return this.columncountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn workTimeColumn {
                get {
                    return this.columnworkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn holidaysColumn {
                get {
                    return this.columnholidays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minBuySellDayColumn {
                get {
                    return this.columnminBuySellDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tranFeePercColumn {
                get {
                    return this.columntranFeePerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceRatioColumn {
                get {
                    return this.columnpriceRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn volumeRatioColumn {
                get {
                    return this.columnvolumeRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceAmplitudeColumn {
                get {
                    return this.columnpriceAmplitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRow this[int index] {
                get {
                    return ((stockExchangeRow)(this.Rows[index]));
                }
            }
            
            public event stockExchangeRowChangeEventHandler stockExchangeRowChanging;
            
            public event stockExchangeRowChangeEventHandler stockExchangeRowChanged;
            
            public event stockExchangeRowChangeEventHandler stockExchangeRowDeleting;
            
            public event stockExchangeRowChangeEventHandler stockExchangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockExchangeRow(stockExchangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRow AddstockExchangeRow(string description, string country, string workTime, string holidays, byte minBuySellDay, decimal tranFeePerc, decimal priceRatio, decimal volumeRatio, byte weight, decimal priceAmplitude, string code) {
                stockExchangeRow rowstockExchangeRow = ((stockExchangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        description,
                        country,
                        workTime,
                        holidays,
                        minBuySellDay,
                        tranFeePerc,
                        priceRatio,
                        volumeRatio,
                        weight,
                        priceAmplitude,
                        code};
                rowstockExchangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockExchangeRow);
                return rowstockExchangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRow FindBycode(string code) {
                return ((stockExchangeRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockExchangeDataTable cln = ((stockExchangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockExchangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndescription = base.Columns["description"];
                this.columncountry = base.Columns["country"];
                this.columnworkTime = base.Columns["workTime"];
                this.columnholidays = base.Columns["holidays"];
                this.columnminBuySellDay = base.Columns["minBuySellDay"];
                this.columntranFeePerc = base.Columns["tranFeePerc"];
                this.columnpriceRatio = base.Columns["priceRatio"];
                this.columnvolumeRatio = base.Columns["volumeRatio"];
                this.columnweight = base.Columns["weight"];
                this.columnpriceAmplitude = base.Columns["priceAmplitude"];
                this.columncode = base.Columns["code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columncountry = new global::System.Data.DataColumn("country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry);
                this.columnworkTime = new global::System.Data.DataColumn("workTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworkTime);
                this.columnholidays = new global::System.Data.DataColumn("holidays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnholidays);
                this.columnminBuySellDay = new global::System.Data.DataColumn("minBuySellDay", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminBuySellDay);
                this.columntranFeePerc = new global::System.Data.DataColumn("tranFeePerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntranFeePerc);
                this.columnpriceRatio = new global::System.Data.DataColumn("priceRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceRatio);
                this.columnvolumeRatio = new global::System.Data.DataColumn("volumeRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolumeRatio);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnpriceAmplitude = new global::System.Data.DataColumn("priceAmplitude", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceAmplitude);
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columndescription.AllowDBNull = false;
                this.columndescription.MaxLength = 255;
                this.columncountry.AllowDBNull = false;
                this.columncountry.MaxLength = 3;
                this.columnworkTime.AllowDBNull = false;
                this.columnworkTime.MaxLength = 255;
                this.columnholidays.AllowDBNull = false;
                this.columnholidays.MaxLength = 255;
                this.columnminBuySellDay.AllowDBNull = false;
                this.columntranFeePerc.AllowDBNull = false;
                this.columnpriceRatio.AllowDBNull = false;
                this.columnvolumeRatio.AllowDBNull = false;
                this.columnpriceAmplitude.AllowDBNull = false;
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRow NewstockExchangeRow() {
                return ((stockExchangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockExchangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockExchangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockExchangeRowChanged != null)) {
                    this.stockExchangeRowChanged(this, new stockExchangeRowChangeEvent(((stockExchangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockExchangeRowChanging != null)) {
                    this.stockExchangeRowChanging(this, new stockExchangeRowChangeEvent(((stockExchangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockExchangeRowDeleted != null)) {
                    this.stockExchangeRowDeleted(this, new stockExchangeRowChangeEvent(((stockExchangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockExchangeRowDeleting != null)) {
                    this.stockExchangeRowDeleting(this, new stockExchangeRowChangeEvent(((stockExchangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockExchangeRow(stockExchangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                baseDS ds = new baseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockExchangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysLogRow : global::System.Data.DataRow {
            
            private sysLogDataTable tablesysLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysLog = ((sysLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablesysLog.idColumn]));
                }
                set {
                    this[this.tablesysLog.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesysLog.onDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'onDate\' in table \'sysLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysLog.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    return ((byte)(this[this.tablesysLog.typeColumn]));
                }
                set {
                    this[this.tablesysLog.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablesysLog.descriptionColumn]));
                }
                set {
                    this[this.tablesysLog.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string source {
                get {
                    try {
                        return ((string)(this[this.tablesysLog.sourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'source\' in table \'sysLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysLog.sourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message {
                get {
                    try {
                        return ((string)(this[this.tablesysLog.messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message\' in table \'sysLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysLog.messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string investorCode {
                get {
                    try {
                        return ((string)(this[this.tablesysLog.investorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'investorCode\' in table \'sysLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysLog.investorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsonDateNull() {
                return this.IsNull(this.tablesysLog.onDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetonDateNull() {
                this[this.tablesysLog.onDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssourceNull() {
                return this.IsNull(this.tablesysLog.sourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsourceNull() {
                this[this.tablesysLog.sourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageNull() {
                return this.IsNull(this.tablesysLog.messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageNull() {
                this[this.tablesysLog.messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinvestorCodeNull() {
                return this.IsNull(this.tablesysLog.investorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinvestorCodeNull() {
                this[this.tablesysLog.investorCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockReportRow : global::System.Data.DataRow {
            
            private stockReportDataTable tablestockReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockReport = ((stockReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reportType {
                get {
                    return ((string)(this[this.tablestockReport.reportTypeColumn]));
                }
                set {
                    this[this.tablestockReport.reportTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tablestockReport.stockCodeColumn]));
                }
                set {
                    this[this.tablestockReport.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    return ((global::System.DateTime)(this[this.tablestockReport.onDateColumn]));
                }
                set {
                    this[this.tablestockReport.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reportCode {
                get {
                    return ((string)(this[this.tablestockReport.reportCodeColumn]));
                }
                set {
                    this[this.tablestockReport.reportCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string currency {
                get {
                    return ((string)(this[this.tablestockReport.currencyColumn]));
                }
                set {
                    this[this.tablestockReport.currencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val0 {
                get {
                    return ((decimal)(this[this.tablestockReport.val0Column]));
                }
                set {
                    this[this.tablestockReport.val0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val1 {
                get {
                    return ((decimal)(this[this.tablestockReport.val1Column]));
                }
                set {
                    this[this.tablestockReport.val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val2 {
                get {
                    return ((decimal)(this[this.tablestockReport.val2Column]));
                }
                set {
                    this[this.tablestockReport.val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val3 {
                get {
                    return ((decimal)(this[this.tablestockReport.val3Column]));
                }
                set {
                    this[this.tablestockReport.val3Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class investorRow : global::System.Data.DataRow {
            
            private investorDataTable tableinvestor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestor = ((investorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableinvestor.codeColumn]));
                }
                set {
                    this[this.tableinvestor.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    return ((byte)(this[this.tableinvestor.typeColumn]));
                }
                set {
                    this[this.tableinvestor.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string firstName {
                get {
                    return ((string)(this[this.tableinvestor.firstNameColumn]));
                }
                set {
                    this[this.tableinvestor.firstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lastName {
                get {
                    return ((string)(this[this.tableinvestor.lastNameColumn]));
                }
                set {
                    this[this.tableinvestor.lastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string displayName {
                get {
                    return ((string)(this[this.tableinvestor.displayNameColumn]));
                }
                set {
                    this[this.tableinvestor.displayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte sex {
                get {
                    return ((byte)(this[this.tableinvestor.sexColumn]));
                }
                set {
                    this[this.tableinvestor.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    return ((string)(this[this.tableinvestor.address1Column]));
                }
                set {
                    this[this.tableinvestor.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address2\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tableinvestor.emailColumn]));
                }
                set {
                    this[this.tableinvestor.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mobile {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.mobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mobile\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.mobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string country {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.countryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'country\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account {
                get {
                    return ((string)(this[this.tableinvestor.accountColumn]));
                }
                set {
                    this[this.tableinvestor.accountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string password {
                get {
                    return ((string)(this[this.tableinvestor.passwordColumn]));
                }
                set {
                    this[this.tableinvestor.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string catCode {
                get {
                    return ((string)(this[this.tableinvestor.catCodeColumn]));
                }
                set {
                    this[this.tableinvestor.catCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expireDate {
                get {
                    return ((global::System.DateTime)(this[this.tableinvestor.expireDateColumn]));
                }
                set {
                    this[this.tableinvestor.expireDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tableinvestor.statusColumn]));
                }
                set {
                    this[this.tableinvestor.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string note {
                get {
                    try {
                        return ((string)(this[this.tableinvestor.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'note\' in table \'investor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestor.noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableinvestor.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableinvestor.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableinvestor.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableinvestor.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmobileNull() {
                return this.IsNull(this.tableinvestor.mobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmobileNull() {
                this[this.tableinvestor.mobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableinvestor.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableinvestor.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscountryNull() {
                return this.IsNull(this.tableinvestor.countryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcountryNull() {
                this[this.tableinvestor.countryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoteNull() {
                return this.IsNull(this.tableinvestor.noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoteNull() {
                this[this.tableinvestor.noteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class investorStockRow : global::System.Data.DataRow {
            
            private investorStockDataTable tableinvestorStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestorStock = ((investorStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolio {
                get {
                    return ((string)(this[this.tableinvestorStock.portfolioColumn]));
                }
                set {
                    this[this.tableinvestorStock.portfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tableinvestorStock.stockCodeColumn]));
                }
                set {
                    this[this.tableinvestorStock.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime buyDate {
                get {
                    return ((global::System.DateTime)(this[this.tableinvestorStock.buyDateColumn]));
                }
                set {
                    this[this.tableinvestorStock.buyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    return ((decimal)(this[this.tableinvestorStock.qtyColumn]));
                }
                set {
                    this[this.tableinvestorStock.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal buyAmt {
                get {
                    return ((decimal)(this[this.tableinvestorStock.buyAmtColumn]));
                }
                set {
                    this[this.tableinvestorStock.buyAmtColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class transactionsRow : global::System.Data.DataRow {
            
            private transactionsDataTable tabletransactions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal transactionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletransactions = ((transactionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabletransactions.idColumn]));
                }
                set {
                    this[this.tabletransactions.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onTime {
                get {
                    return ((global::System.DateTime)(this[this.tabletransactions.onTimeColumn]));
                }
                set {
                    this[this.tabletransactions.onTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte tranType {
                get {
                    return ((byte)(this[this.tabletransactions.tranTypeColumn]));
                }
                set {
                    this[this.tabletransactions.tranTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolio {
                get {
                    return ((string)(this[this.tabletransactions.portfolioColumn]));
                }
                set {
                    this[this.tabletransactions.portfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tabletransactions.stockCodeColumn]));
                }
                set {
                    this[this.tabletransactions.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    return ((decimal)(this[this.tabletransactions.qtyColumn]));
                }
                set {
                    this[this.tabletransactions.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amt {
                get {
                    return ((decimal)(this[this.tabletransactions.amtColumn]));
                }
                set {
                    this[this.tabletransactions.amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal feeAmt {
                get {
                    return ((decimal)(this[this.tabletransactions.feeAmtColumn]));
                }
                set {
                    this[this.tabletransactions.feeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tabletransactions.statusColumn]));
                }
                set {
                    this[this.tabletransactions.statusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class priceDataRow : global::System.Data.DataRow {
            
            private priceDataDataTable tablepriceData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepriceData = ((priceDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    return ((global::System.DateTime)(this[this.tablepriceData.onDateColumn]));
                }
                set {
                    this[this.tablepriceData.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tablepriceData.stockCodeColumn]));
                }
                set {
                    this[this.tablepriceData.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal openPrice {
                get {
                    return ((decimal)(this[this.tablepriceData.openPriceColumn]));
                }
                set {
                    this[this.tablepriceData.openPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal closePrice {
                get {
                    return ((decimal)(this[this.tablepriceData.closePriceColumn]));
                }
                set {
                    this[this.tablepriceData.closePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lowPrice {
                get {
                    return ((decimal)(this[this.tablepriceData.lowPriceColumn]));
                }
                set {
                    this[this.tablepriceData.lowPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal highPrice {
                get {
                    return ((decimal)(this[this.tablepriceData.highPriceColumn]));
                }
                set {
                    this[this.tablepriceData.highPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal volume {
                get {
                    return ((decimal)(this[this.tablepriceData.volumeColumn]));
                }
                set {
                    this[this.tablepriceData.volumeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockCodeRow : global::System.Data.DataRow {
            
            private stockCodeDataTable tablestockCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockCode = ((stockCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablestockCode.codeColumn]));
                }
                set {
                    this[this.tablestockCode.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockExchange {
                get {
                    return ((string)(this[this.tablestockCode.stockExchangeColumn]));
                }
                set {
                    this[this.tablestockCode.stockExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tickerCode {
                get {
                    return ((string)(this[this.tablestockCode.tickerCodeColumn]));
                }
                set {
                    this[this.tablestockCode.tickerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablestockCode.nameColumn]));
                }
                set {
                    this[this.tablestockCode.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nameEn {
                get {
                    try {
                        return ((string)(this[this.tablestockCode.nameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nameEn\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.nameEnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    return ((string)(this[this.tablestockCode.address1Column]));
                }
                set {
                    this[this.tablestockCode.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tablestockCode.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address2\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    return ((string)(this[this.tablestockCode.phoneColumn]));
                }
                set {
                    this[this.tablestockCode.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    return ((string)(this[this.tablestockCode.faxColumn]));
                }
                set {
                    this[this.tablestockCode.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string website {
                get {
                    return ((string)(this[this.tablestockCode.websiteColumn]));
                }
                set {
                    this[this.tablestockCode.websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablestockCode.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bizSectors {
                get {
                    return ((string)(this[this.tablestockCode.bizSectorsColumn]));
                }
                set {
                    this[this.tablestockCode.bizSectorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string country {
                get {
                    return ((string)(this[this.tablestockCode.countryColumn]));
                }
                set {
                    this[this.tablestockCode.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime regDate {
                get {
                    return ((global::System.DateTime)(this[this.tablestockCode.regDateColumn]));
                }
                set {
                    this[this.tablestockCode.regDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noListedStock {
                get {
                    return ((int)(this[this.tablestockCode.noListedStockColumn]));
                }
                set {
                    this[this.tablestockCode.noListedStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noOutstandingStock {
                get {
                    return ((int)(this[this.tablestockCode.noOutstandingStockColumn]));
                }
                set {
                    this[this.tablestockCode.noOutstandingStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noForeignOwnedStock {
                get {
                    return ((int)(this[this.tablestockCode.noForeignOwnedStockColumn]));
                }
                set {
                    this[this.tablestockCode.noForeignOwnedStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noTreasuryStock {
                get {
                    return ((int)(this[this.tablestockCode.noTreasuryStockColumn]));
                }
                set {
                    this[this.tablestockCode.noTreasuryStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bookPrice {
                get {
                    return ((decimal)(this[this.tablestockCode.bookPriceColumn]));
                }
                set {
                    this[this.tablestockCode.bookPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal targetPrice {
                get {
                    return ((decimal)(this[this.tablestockCode.targetPriceColumn]));
                }
                set {
                    this[this.tablestockCode.targetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal targetPriceVariant {
                get {
                    return ((decimal)(this[this.tablestockCode.targetPriceVariantColumn]));
                }
                set {
                    this[this.tablestockCode.targetPriceVariantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal workingCap {
                get {
                    return ((decimal)(this[this.tablestockCode.workingCapColumn]));
                }
                set {
                    this[this.tablestockCode.workingCapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string capitalUnit {
                get {
                    return ((string)(this[this.tablestockCode.capitalUnitColumn]));
                }
                set {
                    this[this.tablestockCode.capitalUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sales {
                get {
                    return ((decimal)(this[this.tablestockCode.salesColumn]));
                }
                set {
                    this[this.tablestockCode.salesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal profit {
                get {
                    return ((decimal)(this[this.tablestockCode.profitColumn]));
                }
                set {
                    this[this.tablestockCode.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal equity {
                get {
                    return ((decimal)(this[this.tablestockCode.equityColumn]));
                }
                set {
                    this[this.tablestockCode.equityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalDebt {
                get {
                    return ((decimal)(this[this.tablestockCode.totalDebtColumn]));
                }
                set {
                    this[this.tablestockCode.totalDebtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totaAssets {
                get {
                    return ((decimal)(this[this.tablestockCode.totaAssetsColumn]));
                }
                set {
                    this[this.tablestockCode.totaAssetsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PB {
                get {
                    return ((decimal)(this[this.tablestockCode.PBColumn]));
                }
                set {
                    this[this.tablestockCode.PBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EPS {
                get {
                    return ((decimal)(this[this.tablestockCode.EPSColumn]));
                }
                set {
                    this[this.tablestockCode.EPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PE {
                get {
                    return ((decimal)(this[this.tablestockCode.PEColumn]));
                }
                set {
                    this[this.tablestockCode.PEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ROA {
                get {
                    return ((decimal)(this[this.tablestockCode.ROAColumn]));
                }
                set {
                    this[this.tablestockCode.ROAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ROE {
                get {
                    return ((decimal)(this[this.tablestockCode.ROEColumn]));
                }
                set {
                    this[this.tablestockCode.ROEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BETA {
                get {
                    return ((decimal)(this[this.tablestockCode.BETAColumn]));
                }
                set {
                    this[this.tablestockCode.BETAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tablestockCode.statusColumn]));
                }
                set {
                    this[this.tablestockCode.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameEnNull() {
                return this.IsNull(this.tablestockCode.nameEnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameEnNull() {
                this[this.tablestockCode.nameEnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tablestockCode.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tablestockCode.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tablestockCode.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tablestockCode.emailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysCodeRow : global::System.Data.DataRow {
            
            private sysCodeDataTable tablesysCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysCode = ((sysCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string category {
                get {
                    return ((string)(this[this.tablesysCode.categoryColumn]));
                }
                set {
                    this[this.tablesysCode.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablesysCode.codeColumn]));
                }
                set {
                    this[this.tablesysCode.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inGroup {
                get {
                    try {
                        return ((string)(this[this.tablesysCode.inGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inGroup\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.inGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description1 {
                get {
                    return ((string)(this[this.tablesysCode.description1Column]));
                }
                set {
                    this[this.tablesysCode.description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description2 {
                get {
                    try {
                        return ((string)(this[this.tablesysCode.description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description2\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablesysCode.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tablesysCode.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tag1 {
                get {
                    try {
                        return ((string)(this[this.tablesysCode.tag1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tag1\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.tag1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tag2 {
                get {
                    try {
                        return ((string)(this[this.tablesysCode.tag2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tag2\' in table \'sysCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCode.tag2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isVisible {
                get {
                    return ((bool)(this[this.tablesysCode.isVisibleColumn]));
                }
                set {
                    this[this.tablesysCode.isVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isSystem {
                get {
                    return ((bool)(this[this.tablesysCode.isSystemColumn]));
                }
                set {
                    this[this.tablesysCode.isSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinGroupNull() {
                return this.IsNull(this.tablesysCode.inGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinGroupNull() {
                this[this.tablesysCode.inGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdescription2Null() {
                return this.IsNull(this.tablesysCode.description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdescription2Null() {
                this[this.tablesysCode.description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablesysCode.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablesysCode.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tablesysCode.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tablesysCode.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istag1Null() {
                return this.IsNull(this.tablesysCode.tag1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settag1Null() {
                this[this.tablesysCode.tag1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istag2Null() {
                return this.IsNull(this.tablesysCode.tag2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settag2Null() {
                this[this.tablesysCode.tag2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysCodeCatRow : global::System.Data.DataRow {
            
            private sysCodeCatDataTable tablesysCodeCat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysCodeCatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysCodeCat = ((sysCodeCatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string category {
                get {
                    return ((string)(this[this.tablesysCodeCat.categoryColumn]));
                }
                set {
                    this[this.tablesysCodeCat.categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablesysCodeCat.descriptionColumn]));
                }
                set {
                    this[this.tablesysCodeCat.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tablesysCodeCat.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'sysCodeCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCodeCat.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tag1 {
                get {
                    try {
                        return ((string)(this[this.tablesysCodeCat.tag1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tag1\' in table \'sysCodeCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCodeCat.tag1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tag2 {
                get {
                    try {
                        return ((string)(this[this.tablesysCodeCat.tag2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tag2\' in table \'sysCodeCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCodeCat.tag2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isVisible {
                get {
                    return ((bool)(this[this.tablesysCodeCat.isVisibleColumn]));
                }
                set {
                    this[this.tablesysCodeCat.isVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isSystem {
                get {
                    return ((bool)(this[this.tablesysCodeCat.isSystemColumn]));
                }
                set {
                    this[this.tablesysCodeCat.isSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte maxCodeLen {
                get {
                    try {
                        return ((byte)(this[this.tablesysCodeCat.maxCodeLenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxCodeLen\' in table \'sysCodeCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCodeCat.maxCodeLenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short weight {
                get {
                    try {
                        return ((short)(this[this.tablesysCodeCat.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'sysCodeCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysCodeCat.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tablesysCodeCat.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tablesysCodeCat.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istag1Null() {
                return this.IsNull(this.tablesysCodeCat.tag1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settag1Null() {
                this[this.tablesysCodeCat.tag1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istag2Null() {
                return this.IsNull(this.tablesysCodeCat.tag2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settag2Null() {
                this[this.tablesysCodeCat.tag2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaxCodeLenNull() {
                return this.IsNull(this.tablesysCodeCat.maxCodeLenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaxCodeLenNull() {
                this[this.tablesysCodeCat.maxCodeLenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablesysCodeCat.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablesysCodeCat.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysConfigRow : global::System.Data.DataRow {
            
            private sysConfigDataTable tablesysConfig;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysConfigRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysConfig = ((sysConfigDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key {
                get {
                    return ((string)(this[this.tablesysConfig.keyColumn]));
                }
                set {
                    this[this.tablesysConfig.keyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string value {
                get {
                    return ((string)(this[this.tablesysConfig.valueColumn]));
                }
                set {
                    this[this.tablesysConfig.valueColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysAutoKeyRow : global::System.Data.DataRow {
            
            private sysAutoKeyDataTable tablesysAutoKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysAutoKeyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysAutoKey = ((sysAutoKeyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key {
                get {
                    return ((string)(this[this.tablesysAutoKey.keyColumn]));
                }
                set {
                    this[this.tablesysAutoKey.keyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int value {
                get {
                    try {
                        return ((int)(this[this.tablesysAutoKey.valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'value\' in table \'sysAutoKey\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesysAutoKey.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalueNull() {
                return this.IsNull(this.tablesysAutoKey.valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalueNull() {
                this[this.tablesysAutoKey.valueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sysAutoKeyPendingRow : global::System.Data.DataRow {
            
            private sysAutoKeyPendingDataTable tablesysAutoKeyPending;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sysAutoKeyPendingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesysAutoKeyPending = ((sysAutoKeyPendingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key {
                get {
                    return ((string)(this[this.tablesysAutoKeyPending.keyColumn]));
                }
                set {
                    this[this.tablesysAutoKeyPending.keyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string value {
                get {
                    return ((string)(this[this.tablesysAutoKeyPending.valueColumn]));
                }
                set {
                    this[this.tablesysAutoKeyPending.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime timeStamp {
                get {
                    return ((global::System.DateTime)(this[this.tablesysAutoKeyPending.timeStampColumn]));
                }
                set {
                    this[this.tablesysAutoKeyPending.timeStampColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class bizSectorRow : global::System.Data.DataRow {
            
            private bizSectorDataTable tablebizSector;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSectorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebizSector = ((bizSectorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablebizSector.codeColumn]));
                }
                set {
                    this[this.tablebizSector.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description1 {
                get {
                    return ((string)(this[this.tablebizSector.description1Column]));
                }
                set {
                    this[this.tablebizSector.description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description2 {
                get {
                    try {
                        return ((string)(this[this.tablebizSector.description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description2\' in table \'bizSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSector.description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inGroup {
                get {
                    try {
                        return ((string)(this[this.tablebizSector.inGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inGroup\' in table \'bizSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSector.inGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablebizSector.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'bizSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSector.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdescription2Null() {
                return this.IsNull(this.tablebizSector.description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdescription2Null() {
                this[this.tablebizSector.description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinGroupNull() {
                return this.IsNull(this.tablebizSector.inGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinGroupNull() {
                this[this.tablebizSector.inGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablebizSector.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablebizSector.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class countryRow : global::System.Data.DataRow {
            
            private countryDataTable tablecountry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal countryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecountry = ((countryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablecountry.codeColumn]));
                }
                set {
                    this[this.tablecountry.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablecountry.descriptionColumn]));
                }
                set {
                    this[this.tablecountry.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablecountry.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'country\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecountry.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string culture {
                get {
                    try {
                        return ((string)(this[this.tablecountry.cultureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'culture\' in table \'country\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecountry.cultureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablecountry.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablecountry.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscultureNull() {
                return this.IsNull(this.tablecountry.cultureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcultureNull() {
                this[this.tablecountry.cultureColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class currencyRow : global::System.Data.DataRow {
            
            private currencyDataTable tablecurrency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal currencyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecurrency = ((currencyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablecurrency.codeColumn]));
                }
                set {
                    this[this.tablecurrency.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablecurrency.descriptionColumn]));
                }
                set {
                    this[this.tablecurrency.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablecurrency.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'currency\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecurrency.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablecurrency.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablecurrency.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class investorCatRow : global::System.Data.DataRow {
            
            private investorCatDataTable tableinvestorCat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorCatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestorCat = ((investorCatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableinvestorCat.codeColumn]));
                }
                set {
                    this[this.tableinvestorCat.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableinvestorCat.descriptionColumn]));
                }
                set {
                    this[this.tableinvestorCat.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tableinvestorCat.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'investorCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestorCat.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tableinvestorCat.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tableinvestorCat.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employeeRangeRow : global::System.Data.DataRow {
            
            private employeeRangeDataTable tableemployeeRange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeRangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployeeRange = ((employeeRangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableemployeeRange.descriptionColumn]));
                }
                set {
                    this[this.tableemployeeRange.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tableemployeeRange.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'employeeRange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeeRange.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableemployeeRange.codeColumn]));
                }
                set {
                    this[this.tableemployeeRange.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tableemployeeRange.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tableemployeeRange.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class bizIndustryRow : global::System.Data.DataRow {
            
            private bizIndustryDataTable tablebizIndustry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizIndustryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebizIndustry = ((bizIndustryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablebizIndustry.codeColumn]));
                }
                set {
                    this[this.tablebizIndustry.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description1 {
                get {
                    return ((string)(this[this.tablebizIndustry.description1Column]));
                }
                set {
                    this[this.tablebizIndustry.description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description2 {
                get {
                    try {
                        return ((string)(this[this.tablebizIndustry.description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description2\' in table \'bizIndustry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizIndustry.description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inGroup {
                get {
                    try {
                        return ((string)(this[this.tablebizIndustry.inGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inGroup\' in table \'bizIndustry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizIndustry.inGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablebizIndustry.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'bizIndustry\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizIndustry.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdescription2Null() {
                return this.IsNull(this.tablebizIndustry.description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdescription2Null() {
                this[this.tablebizIndustry.description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinGroupNull() {
                return this.IsNull(this.tablebizIndustry.inGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinGroupNull() {
                this[this.tablebizIndustry.inGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablebizIndustry.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablebizIndustry.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class bizSuperSectorRow : global::System.Data.DataRow {
            
            private bizSuperSectorDataTable tablebizSuperSector;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSuperSectorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebizSuperSector = ((bizSuperSectorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablebizSuperSector.codeColumn]));
                }
                set {
                    this[this.tablebizSuperSector.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description1 {
                get {
                    return ((string)(this[this.tablebizSuperSector.description1Column]));
                }
                set {
                    this[this.tablebizSuperSector.description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description2 {
                get {
                    try {
                        return ((string)(this[this.tablebizSuperSector.description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description2\' in table \'bizSuperSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSuperSector.description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inGroup {
                get {
                    try {
                        return ((string)(this[this.tablebizSuperSector.inGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inGroup\' in table \'bizSuperSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSuperSector.inGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablebizSuperSector.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'bizSuperSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSuperSector.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdescription2Null() {
                return this.IsNull(this.tablebizSuperSector.description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdescription2Null() {
                this[this.tablebizSuperSector.description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinGroupNull() {
                return this.IsNull(this.tablebizSuperSector.inGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinGroupNull() {
                this[this.tablebizSuperSector.inGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablebizSuperSector.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablebizSuperSector.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class bizSubSectorRow : global::System.Data.DataRow {
            
            private bizSubSectorDataTable tablebizSubSector;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal bizSubSectorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebizSubSector = ((bizSubSectorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablebizSubSector.codeColumn]));
                }
                set {
                    this[this.tablebizSubSector.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description1 {
                get {
                    return ((string)(this[this.tablebizSubSector.description1Column]));
                }
                set {
                    this[this.tablebizSubSector.description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description2 {
                get {
                    try {
                        return ((string)(this[this.tablebizSubSector.description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description2\' in table \'bizSubSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSubSector.description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inGroup {
                get {
                    try {
                        return ((string)(this[this.tablebizSubSector.inGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inGroup\' in table \'bizSubSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSubSector.inGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablebizSubSector.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'bizSubSector\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebizSubSector.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdescription2Null() {
                return this.IsNull(this.tablebizSubSector.description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdescription2Null() {
                this[this.tablebizSubSector.description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinGroupNull() {
                return this.IsNull(this.tablebizSubSector.inGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinGroupNull() {
                this[this.tablebizSubSector.inGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablebizSubSector.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablebizSubSector.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class portfolioRow : global::System.Data.DataRow {
            
            private portfolioDataTable tableportfolio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal portfolioRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableportfolio = ((portfolioDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableportfolio.codeColumn]));
                }
                set {
                    this[this.tableportfolio.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    return ((byte)(this[this.tableportfolio.typeColumn]));
                }
                set {
                    this[this.tableportfolio.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string investorCode {
                get {
                    return ((string)(this[this.tableportfolio.investorCodeColumn]));
                }
                set {
                    this[this.tableportfolio.investorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableportfolio.nameColumn]));
                }
                set {
                    this[this.tableportfolio.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tableportfolio.descriptionColumn]));
                }
                set {
                    this[this.tableportfolio.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal startCapAmt {
                get {
                    return ((decimal)(this[this.tableportfolio.startCapAmtColumn]));
                }
                set {
                    this[this.tableportfolio.startCapAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal usedCapAmt {
                get {
                    return ((decimal)(this[this.tableportfolio.usedCapAmtColumn]));
                }
                set {
                    this[this.tableportfolio.usedCapAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stockAccumulatePerc {
                get {
                    return ((decimal)(this[this.tableportfolio.stockAccumulatePercColumn]));
                }
                set {
                    this[this.tableportfolio.stockAccumulatePercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stockReducePerc {
                get {
                    return ((decimal)(this[this.tableportfolio.stockReducePercColumn]));
                }
                set {
                    this[this.tableportfolio.stockReducePercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maxBuyAmtPerc {
                get {
                    return ((decimal)(this[this.tableportfolio.maxBuyAmtPercColumn]));
                }
                set {
                    this[this.tableportfolio.maxBuyAmtPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string interestedStock {
                get {
                    return ((string)(this[this.tableportfolio.interestedStockColumn]));
                }
                set {
                    this[this.tableportfolio.interestedStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string interestedSector {
                get {
                    return ((string)(this[this.tableportfolio.interestedSectorColumn]));
                }
                set {
                    this[this.tableportfolio.interestedSectorColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tradeAlertRow : global::System.Data.DataRow {
            
            private tradeAlertDataTable tabletradeAlert;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tradeAlertRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletradeAlert = ((tradeAlertDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabletradeAlert.idColumn]));
                }
                set {
                    this[this.tabletradeAlert.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onTime {
                get {
                    return ((global::System.DateTime)(this[this.tabletradeAlert.onTimeColumn]));
                }
                set {
                    this[this.tabletradeAlert.onTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tabletradeAlert.typeColumn]));
                }
                set {
                    this[this.tabletradeAlert.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte tradeAction {
                get {
                    return ((byte)(this[this.tabletradeAlert.tradeActionColumn]));
                }
                set {
                    this[this.tabletradeAlert.tradeActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolio {
                get {
                    return ((string)(this[this.tabletradeAlert.portfolioColumn]));
                }
                set {
                    this[this.tabletradeAlert.portfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tabletradeAlert.stockCodeColumn]));
                }
                set {
                    this[this.tabletradeAlert.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string timeScale {
                get {
                    return ((string)(this[this.tabletradeAlert.timeScaleColumn]));
                }
                set {
                    this[this.tabletradeAlert.timeScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strategy {
                get {
                    return ((string)(this[this.tabletradeAlert.strategyColumn]));
                }
                set {
                    this[this.tabletradeAlert.strategyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subject {
                get {
                    return ((string)(this[this.tabletradeAlert.subjectColumn]));
                }
                set {
                    this[this.tabletradeAlert.subjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string msg {
                get {
                    return ((string)(this[this.tabletradeAlert.msgColumn]));
                }
                set {
                    this[this.tabletradeAlert.msgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tabletradeAlert.statusColumn]));
                }
                set {
                    this[this.tabletradeAlert.statusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class priceDataSumRow : global::System.Data.DataRow {
            
            private priceDataSumDataTable tablepriceDataSum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataSumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepriceDataSum = ((priceDataSumDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    return ((global::System.DateTime)(this[this.tablepriceDataSum.onDateColumn]));
                }
                set {
                    this[this.tablepriceDataSum.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tablepriceDataSum.typeColumn]));
                }
                set {
                    this[this.tablepriceDataSum.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tablepriceDataSum.stockCodeColumn]));
                }
                set {
                    this[this.tablepriceDataSum.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal openPrice {
                get {
                    return ((decimal)(this[this.tablepriceDataSum.openPriceColumn]));
                }
                set {
                    this[this.tablepriceDataSum.openPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal closePrice {
                get {
                    return ((decimal)(this[this.tablepriceDataSum.closePriceColumn]));
                }
                set {
                    this[this.tablepriceDataSum.closePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal lowPrice {
                get {
                    return ((decimal)(this[this.tablepriceDataSum.lowPriceColumn]));
                }
                set {
                    this[this.tablepriceDataSum.lowPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal highPrice {
                get {
                    return ((decimal)(this[this.tablepriceDataSum.highPriceColumn]));
                }
                set {
                    this[this.tablepriceDataSum.highPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal volume {
                get {
                    return ((decimal)(this[this.tablepriceDataSum.volumeColumn]));
                }
                set {
                    this[this.tablepriceDataSum.volumeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class portfolioDetailRow : global::System.Data.DataRow {
            
            private portfolioDetailDataTable tableportfolioDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal portfolioDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableportfolioDetail = ((portfolioDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolio {
                get {
                    return ((string)(this[this.tableportfolioDetail.portfolioColumn]));
                }
                set {
                    this[this.tableportfolioDetail.portfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableportfolioDetail.codeColumn]));
                }
                set {
                    this[this.tableportfolioDetail.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subCode {
                get {
                    return ((string)(this[this.tableportfolioDetail.subCodeColumn]));
                }
                set {
                    this[this.tableportfolioDetail.subCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    return ((string)(this[this.tableportfolioDetail.dataColumn]));
                }
                set {
                    this[this.tableportfolioDetail.dataColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class priceDataStatRow : global::System.Data.DataRow {
            
            private priceDataStatDataTable tablepriceDataStat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDataStatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepriceDataStat = ((priceDataStatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tablepriceDataStat.typeColumn]));
                }
                set {
                    this[this.tablepriceDataStat.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tablepriceDataStat.stockCodeColumn]));
                }
                set {
                    this[this.tablepriceDataStat.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime maxDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepriceDataStat.maxDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxDate\' in table \'priceDataStat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDataStat.maxDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime minDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepriceDataStat.minDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minDate\' in table \'priceDataStat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDataStat.minDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int totalCount {
                get {
                    try {
                        return ((int)(this[this.tablepriceDataStat.totalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCount\' in table \'priceDataStat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDataStat.totalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaxDateNull() {
                return this.IsNull(this.tablepriceDataStat.maxDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaxDateNull() {
                this[this.tablepriceDataStat.maxDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsminDateNull() {
                return this.IsNull(this.tablepriceDataStat.minDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetminDateNull() {
                this[this.tablepriceDataStat.minDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCountNull() {
                return this.IsNull(this.tablepriceDataStat.totalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCountNull() {
                this[this.tablepriceDataStat.totalCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lastPriceDataRow : global::System.Data.DataRow {
            
            private lastPriceDataDataTable tablelastPriceData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lastPriceDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelastPriceData = ((lastPriceDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tablelastPriceData.stockCodeColumn]));
                }
                set {
                    this[this.tablelastPriceData.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal value {
                get {
                    return ((decimal)(this[this.tablelastPriceData.valueColumn]));
                }
                set {
                    this[this.tablelastPriceData.valueColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class messagesRow : global::System.Data.DataRow {
            
            private messagesDataTable tablemessages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal messagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemessages = ((messagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MsgId {
                get {
                    return ((int)(this[this.tablemessages.MsgIdColumn]));
                }
                set {
                    this[this.tablemessages.MsgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short type {
                get {
                    return ((short)(this[this.tablemessages.typeColumn]));
                }
                set {
                    this[this.tablemessages.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OnDate {
                get {
                    return ((global::System.DateTime)(this[this.tablemessages.OnDateColumn]));
                }
                set {
                    this[this.tablemessages.OnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SenderId {
                get {
                    return ((string)(this[this.tablemessages.SenderIdColumn]));
                }
                set {
                    this[this.tablemessages.SenderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiverId {
                get {
                    return ((string)(this[this.tablemessages.ReceiverIdColumn]));
                }
                set {
                    this[this.tablemessages.ReceiverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    return ((string)(this[this.tablemessages.CategoryColumn]));
                }
                set {
                    this[this.tablemessages.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    return ((string)(this[this.tablemessages.SubjectColumn]));
                }
                set {
                    this[this.tablemessages.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MsgBody {
                get {
                    return ((string)(this[this.tablemessages.MsgBodyColumn]));
                }
                set {
                    this[this.tablemessages.MsgBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short status {
                get {
                    return ((short)(this[this.tablemessages.statusColumn]));
                }
                set {
                    this[this.tablemessages.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RefMsgId {
                get {
                    try {
                        return ((int)(this[this.tablemessages.RefMsgIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefMsgId\' in table \'messages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemessages.RefMsgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefMsgIdNull() {
                return this.IsNull(this.tablemessages.RefMsgIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefMsgIdNull() {
                this[this.tablemessages.RefMsgIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class feedbackCatRow : global::System.Data.DataRow {
            
            private feedbackCatDataTable tablefeedbackCat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal feedbackCatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefeedbackCat = ((feedbackCatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablefeedbackCat.codeColumn]));
                }
                set {
                    this[this.tablefeedbackCat.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablefeedbackCat.descriptionColumn]));
                }
                set {
                    this[this.tablefeedbackCat.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string language {
                get {
                    try {
                        return ((string)(this[this.tablefeedbackCat.languageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'language\' in table \'feedbackCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefeedbackCat.languageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int weight {
                get {
                    try {
                        return ((int)(this[this.tablefeedbackCat.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'feedbackCat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefeedbackCat.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslanguageNull() {
                return this.IsNull(this.tablefeedbackCat.languageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlanguageNull() {
                this[this.tablefeedbackCat.languageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablefeedbackCat.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablefeedbackCat.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class exchangeDetailRow : global::System.Data.DataRow {
            
            private exchangeDetailDataTable tableexchangeDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal exchangeDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexchangeDetail = ((exchangeDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableexchangeDetail.codeColumn]));
                }
                set {
                    this[this.tableexchangeDetail.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string marketCode {
                get {
                    return ((string)(this[this.tableexchangeDetail.marketCodeColumn]));
                }
                set {
                    this[this.tableexchangeDetail.marketCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    return ((string)(this[this.tableexchangeDetail.addressColumn]));
                }
                set {
                    this[this.tableexchangeDetail.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string goTrue {
                get {
                    try {
                        return ((string)(this[this.tableexchangeDetail.goTrueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'goTrue\' in table \'exchangeDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexchangeDetail.goTrueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string goFalse {
                get {
                    try {
                        return ((string)(this[this.tableexchangeDetail.goFalseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'goFalse\' in table \'exchangeDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexchangeDetail.goFalseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableexchangeDetail.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'exchangeDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexchangeDetail.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string culture {
                get {
                    return ((string)(this[this.tableexchangeDetail.cultureColumn]));
                }
                set {
                    this[this.tableexchangeDetail.cultureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isEnabled {
                get {
                    return ((bool)(this[this.tableexchangeDetail.isEnabledColumn]));
                }
                set {
                    this[this.tableexchangeDetail.isEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short orderId {
                get {
                    return ((short)(this[this.tableexchangeDetail.orderIdColumn]));
                }
                set {
                    this[this.tableexchangeDetail.orderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgoTrueNull() {
                return this.IsNull(this.tableexchangeDetail.goTrueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgoTrueNull() {
                this[this.tableexchangeDetail.goTrueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgoFalseNull() {
                return this.IsNull(this.tableexchangeDetail.goFalseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgoFalseNull() {
                this[this.tableexchangeDetail.goFalseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableexchangeDetail.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableexchangeDetail.notesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockExchangeRow : global::System.Data.DataRow {
            
            private stockExchangeDataTable tablestockExchange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockExchangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockExchange = ((stockExchangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    return ((string)(this[this.tablestockExchange.descriptionColumn]));
                }
                set {
                    this[this.tablestockExchange.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string country {
                get {
                    return ((string)(this[this.tablestockExchange.countryColumn]));
                }
                set {
                    this[this.tablestockExchange.countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string workTime {
                get {
                    return ((string)(this[this.tablestockExchange.workTimeColumn]));
                }
                set {
                    this[this.tablestockExchange.workTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string holidays {
                get {
                    return ((string)(this[this.tablestockExchange.holidaysColumn]));
                }
                set {
                    this[this.tablestockExchange.holidaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte minBuySellDay {
                get {
                    return ((byte)(this[this.tablestockExchange.minBuySellDayColumn]));
                }
                set {
                    this[this.tablestockExchange.minBuySellDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tranFeePerc {
                get {
                    return ((decimal)(this[this.tablestockExchange.tranFeePercColumn]));
                }
                set {
                    this[this.tablestockExchange.tranFeePercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceRatio {
                get {
                    return ((decimal)(this[this.tablestockExchange.priceRatioColumn]));
                }
                set {
                    this[this.tablestockExchange.priceRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal volumeRatio {
                get {
                    return ((decimal)(this[this.tablestockExchange.volumeRatioColumn]));
                }
                set {
                    this[this.tablestockExchange.volumeRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte weight {
                get {
                    try {
                        return ((byte)(this[this.tablestockExchange.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weight\' in table \'stockExchange\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockExchange.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceAmplitude {
                get {
                    return ((decimal)(this[this.tablestockExchange.priceAmplitudeColumn]));
                }
                set {
                    this[this.tablestockExchange.priceAmplitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablestockExchange.codeColumn]));
                }
                set {
                    this[this.tablestockExchange.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablestockExchange.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablestockExchange.weightColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysLogRowChangeEvent : global::System.EventArgs {
            
            private sysLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRowChangeEvent(sysLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockReportRowChangeEvent : global::System.EventArgs {
            
            private stockReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRowChangeEvent(stockReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class investorRowChangeEvent : global::System.EventArgs {
            
            private investorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRowChangeEvent(investorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class investorStockRowChangeEvent : global::System.EventArgs {
            
            private investorStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRowChangeEvent(investorStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class transactionsRowChangeEvent : global::System.EventArgs {
            
            private transactionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRowChangeEvent(transactionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public transactionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class priceDataRowChangeEvent : global::System.EventArgs {
            
            private priceDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRowChangeEvent(priceDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockCodeRowChangeEvent : global::System.EventArgs {
            
            private stockCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRowChangeEvent(stockCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysCodeRowChangeEvent : global::System.EventArgs {
            
            private sysCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRowChangeEvent(sysCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysCodeCatRowChangeEvent : global::System.EventArgs {
            
            private sysCodeCatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRowChangeEvent(sysCodeCatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysCodeCatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysConfigRowChangeEvent : global::System.EventArgs {
            
            private sysConfigRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRowChangeEvent(sysConfigRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysConfigRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysAutoKeyRowChangeEvent : global::System.EventArgs {
            
            private sysAutoKeyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRowChangeEvent(sysAutoKeyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sysAutoKeyPendingRowChangeEvent : global::System.EventArgs {
            
            private sysAutoKeyPendingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRowChangeEvent(sysAutoKeyPendingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sysAutoKeyPendingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class bizSectorRowChangeEvent : global::System.EventArgs {
            
            private bizSectorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRowChangeEvent(bizSectorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSectorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class countryRowChangeEvent : global::System.EventArgs {
            
            private countryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRowChangeEvent(countryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public countryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class currencyRowChangeEvent : global::System.EventArgs {
            
            private currencyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRowChangeEvent(currencyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public currencyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class investorCatRowChangeEvent : global::System.EventArgs {
            
            private investorCatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRowChangeEvent(investorCatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorCatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employeeRangeRowChangeEvent : global::System.EventArgs {
            
            private employeeRangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRowChangeEvent(employeeRangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class bizIndustryRowChangeEvent : global::System.EventArgs {
            
            private bizIndustryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRowChangeEvent(bizIndustryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizIndustryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class bizSuperSectorRowChangeEvent : global::System.EventArgs {
            
            private bizSuperSectorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRowChangeEvent(bizSuperSectorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSuperSectorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class bizSubSectorRowChangeEvent : global::System.EventArgs {
            
            private bizSubSectorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRowChangeEvent(bizSubSectorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bizSubSectorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class portfolioRowChangeEvent : global::System.EventArgs {
            
            private portfolioRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRowChangeEvent(portfolioRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tradeAlertRowChangeEvent : global::System.EventArgs {
            
            private tradeAlertRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRowChangeEvent(tradeAlertRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeAlertRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class priceDataSumRowChangeEvent : global::System.EventArgs {
            
            private priceDataSumRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRowChangeEvent(priceDataSumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataSumRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class portfolioDetailRowChangeEvent : global::System.EventArgs {
            
            private portfolioDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRowChangeEvent(portfolioDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public portfolioDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class priceDataStatRowChangeEvent : global::System.EventArgs {
            
            private priceDataStatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRowChangeEvent(priceDataStatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDataStatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lastPriceDataRowChangeEvent : global::System.EventArgs {
            
            private lastPriceDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRowChangeEvent(lastPriceDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lastPriceDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class messagesRowChangeEvent : global::System.EventArgs {
            
            private messagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRowChangeEvent(messagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public messagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class feedbackCatRowChangeEvent : global::System.EventArgs {
            
            private feedbackCatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRowChangeEvent(feedbackCatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public feedbackCatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class exchangeDetailRowChangeEvent : global::System.EventArgs {
            
            private exchangeDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRowChangeEvent(exchangeDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public exchangeDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockExchangeRowChangeEvent : global::System.EventArgs {
            
            private stockExchangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRowChangeEvent(stockExchangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockExchangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesTradeActions type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string portfolioCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int qty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal feePerc;
        
        public MakeTransactionRequest() {
        }
        
        public MakeTransactionRequest(OpenXMLDemo.StockService.AppTypesTradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc) {
            this.type = type;
            this.stockCode = stockCode;
            this.portfolioCode = portfolioCode;
            this.qty = qty;
            this.feePerc = feePerc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.transactionsDataTable MakeTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorText;
        
        public MakeTransactionResponse() {
        }
        
        public MakeTransactionResponse(baseDS.transactionsDataTable MakeTransactionResult, string errorText) {
            this.MakeTransactionResult = MakeTransactionResult;
            this.errorText = errorText;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtensionFx35 schema importer extension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("tmpDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class tmpDS : global::System.Data.DataSet {
        
        private stockCodeDataTable tablestockCode;
        
        private investorDataTable tableinvestor;
        
        private investorStockDataTable tableinvestorStock;
        
        private interestedCodeDataTable tableinterestedCode;
        
        private tradeEstimateDataTable tabletradeEstimate;
        
        private codeListDataTable tablecodeList;
        
        private marketDataDataTable tablemarketData;
        
        private priceDiagnoseDataTable tablepriceDiagnose;
        
        private porfolioWatchDataTable tableporfolioWatch;
        
        private dataVarrianceDataTable tabledataVarriance;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tmpDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected tmpDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["stockCode"] != null)) {
                    base.Tables.Add(new stockCodeDataTable(ds.Tables["stockCode"]));
                }
                if ((ds.Tables["investor"] != null)) {
                    base.Tables.Add(new investorDataTable(ds.Tables["investor"]));
                }
                if ((ds.Tables["investorStock"] != null)) {
                    base.Tables.Add(new investorStockDataTable(ds.Tables["investorStock"]));
                }
                if ((ds.Tables["interestedCode"] != null)) {
                    base.Tables.Add(new interestedCodeDataTable(ds.Tables["interestedCode"]));
                }
                if ((ds.Tables["tradeEstimate"] != null)) {
                    base.Tables.Add(new tradeEstimateDataTable(ds.Tables["tradeEstimate"]));
                }
                if ((ds.Tables["codeList"] != null)) {
                    base.Tables.Add(new codeListDataTable(ds.Tables["codeList"]));
                }
                if ((ds.Tables["marketData"] != null)) {
                    base.Tables.Add(new marketDataDataTable(ds.Tables["marketData"]));
                }
                if ((ds.Tables["priceDiagnose"] != null)) {
                    base.Tables.Add(new priceDiagnoseDataTable(ds.Tables["priceDiagnose"]));
                }
                if ((ds.Tables["porfolioWatch"] != null)) {
                    base.Tables.Add(new porfolioWatchDataTable(ds.Tables["porfolioWatch"]));
                }
                if ((ds.Tables["dataVarriance"] != null)) {
                    base.Tables.Add(new dataVarrianceDataTable(ds.Tables["dataVarriance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockCodeDataTable stockCode {
            get {
                return this.tablestockCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investorDataTable investor {
            get {
                return this.tableinvestor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public investorStockDataTable investorStock {
            get {
                return this.tableinvestorStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public interestedCodeDataTable interestedCode {
            get {
                return this.tableinterestedCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tradeEstimateDataTable tradeEstimate {
            get {
                return this.tabletradeEstimate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public codeListDataTable codeList {
            get {
                return this.tablecodeList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public marketDataDataTable marketData {
            get {
                return this.tablemarketData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public priceDiagnoseDataTable priceDiagnose {
            get {
                return this.tablepriceDiagnose;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public porfolioWatchDataTable porfolioWatch {
            get {
                return this.tableporfolioWatch;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataVarrianceDataTable dataVarriance {
            get {
                return this.tabledataVarriance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            tmpDS cln = ((tmpDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["stockCode"] != null)) {
                    base.Tables.Add(new stockCodeDataTable(ds.Tables["stockCode"]));
                }
                if ((ds.Tables["investor"] != null)) {
                    base.Tables.Add(new investorDataTable(ds.Tables["investor"]));
                }
                if ((ds.Tables["investorStock"] != null)) {
                    base.Tables.Add(new investorStockDataTable(ds.Tables["investorStock"]));
                }
                if ((ds.Tables["interestedCode"] != null)) {
                    base.Tables.Add(new interestedCodeDataTable(ds.Tables["interestedCode"]));
                }
                if ((ds.Tables["tradeEstimate"] != null)) {
                    base.Tables.Add(new tradeEstimateDataTable(ds.Tables["tradeEstimate"]));
                }
                if ((ds.Tables["codeList"] != null)) {
                    base.Tables.Add(new codeListDataTable(ds.Tables["codeList"]));
                }
                if ((ds.Tables["marketData"] != null)) {
                    base.Tables.Add(new marketDataDataTable(ds.Tables["marketData"]));
                }
                if ((ds.Tables["priceDiagnose"] != null)) {
                    base.Tables.Add(new priceDiagnoseDataTable(ds.Tables["priceDiagnose"]));
                }
                if ((ds.Tables["porfolioWatch"] != null)) {
                    base.Tables.Add(new porfolioWatchDataTable(ds.Tables["porfolioWatch"]));
                }
                if ((ds.Tables["dataVarriance"] != null)) {
                    base.Tables.Add(new dataVarrianceDataTable(ds.Tables["dataVarriance"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablestockCode = ((stockCodeDataTable)(base.Tables["stockCode"]));
            if ((initTable == true)) {
                if ((this.tablestockCode != null)) {
                    this.tablestockCode.InitVars();
                }
            }
            this.tableinvestor = ((investorDataTable)(base.Tables["investor"]));
            if ((initTable == true)) {
                if ((this.tableinvestor != null)) {
                    this.tableinvestor.InitVars();
                }
            }
            this.tableinvestorStock = ((investorStockDataTable)(base.Tables["investorStock"]));
            if ((initTable == true)) {
                if ((this.tableinvestorStock != null)) {
                    this.tableinvestorStock.InitVars();
                }
            }
            this.tableinterestedCode = ((interestedCodeDataTable)(base.Tables["interestedCode"]));
            if ((initTable == true)) {
                if ((this.tableinterestedCode != null)) {
                    this.tableinterestedCode.InitVars();
                }
            }
            this.tabletradeEstimate = ((tradeEstimateDataTable)(base.Tables["tradeEstimate"]));
            if ((initTable == true)) {
                if ((this.tabletradeEstimate != null)) {
                    this.tabletradeEstimate.InitVars();
                }
            }
            this.tablecodeList = ((codeListDataTable)(base.Tables["codeList"]));
            if ((initTable == true)) {
                if ((this.tablecodeList != null)) {
                    this.tablecodeList.InitVars();
                }
            }
            this.tablemarketData = ((marketDataDataTable)(base.Tables["marketData"]));
            if ((initTable == true)) {
                if ((this.tablemarketData != null)) {
                    this.tablemarketData.InitVars();
                }
            }
            this.tablepriceDiagnose = ((priceDiagnoseDataTable)(base.Tables["priceDiagnose"]));
            if ((initTable == true)) {
                if ((this.tablepriceDiagnose != null)) {
                    this.tablepriceDiagnose.InitVars();
                }
            }
            this.tableporfolioWatch = ((porfolioWatchDataTable)(base.Tables["porfolioWatch"]));
            if ((initTable == true)) {
                if ((this.tableporfolioWatch != null)) {
                    this.tableporfolioWatch.InitVars();
                }
            }
            this.tabledataVarriance = ((dataVarrianceDataTable)(base.Tables["dataVarriance"]));
            if ((initTable == true)) {
                if ((this.tabledataVarriance != null)) {
                    this.tabledataVarriance.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "tmpDS";
            this.Prefix = "";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablestockCode = new stockCodeDataTable();
            base.Tables.Add(this.tablestockCode);
            this.tableinvestor = new investorDataTable();
            base.Tables.Add(this.tableinvestor);
            this.tableinvestorStock = new investorStockDataTable();
            base.Tables.Add(this.tableinvestorStock);
            this.tableinterestedCode = new interestedCodeDataTable();
            base.Tables.Add(this.tableinterestedCode);
            this.tabletradeEstimate = new tradeEstimateDataTable();
            base.Tables.Add(this.tabletradeEstimate);
            this.tablecodeList = new codeListDataTable();
            base.Tables.Add(this.tablecodeList);
            this.tablemarketData = new marketDataDataTable();
            base.Tables.Add(this.tablemarketData);
            this.tablepriceDiagnose = new priceDiagnoseDataTable();
            base.Tables.Add(this.tablepriceDiagnose);
            this.tableporfolioWatch = new porfolioWatchDataTable();
            base.Tables.Add(this.tableporfolioWatch);
            this.tabledataVarriance = new dataVarrianceDataTable();
            base.Tables.Add(this.tabledataVarriance);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvestor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvestorStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinterestedCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetradeEstimate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecodeList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemarketData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepriceDiagnose() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeporfolioWatch() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataVarriance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            tmpDS ds = new tmpDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void stockCodeRowChangeEventHandler(object sender, stockCodeRowChangeEvent e);
        
        public delegate void investorRowChangeEventHandler(object sender, investorRowChangeEvent e);
        
        public delegate void investorStockRowChangeEventHandler(object sender, investorStockRowChangeEvent e);
        
        public delegate void interestedCodeRowChangeEventHandler(object sender, interestedCodeRowChangeEvent e);
        
        public delegate void tradeEstimateRowChangeEventHandler(object sender, tradeEstimateRowChangeEvent e);
        
        public delegate void codeListRowChangeEventHandler(object sender, codeListRowChangeEvent e);
        
        public delegate void marketDataRowChangeEventHandler(object sender, marketDataRowChangeEvent e);
        
        public delegate void priceDiagnoseRowChangeEventHandler(object sender, priceDiagnoseRowChangeEvent e);
        
        public delegate void porfolioWatchRowChangeEventHandler(object sender, porfolioWatchRowChangeEvent e);
        
        public delegate void dataVarrianceRowChangeEventHandler(object sender, dataVarrianceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockCodeDataTable : global::System.Data.TypedTableBase<stockCodeRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnstockExchange;
            
            private global::System.Data.DataColumn columntickerCode;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnnameEn;
            
            private global::System.Data.DataColumn columnselected;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnpriceVariant;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeDataTable() {
                this.TableName = "stockCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockExchangeColumn {
                get {
                    return this.columnstockExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tickerCodeColumn {
                get {
                    return this.columntickerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameEnColumn {
                get {
                    return this.columnnameEn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selectedColumn {
                get {
                    return this.columnselected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceVariantColumn {
                get {
                    return this.columnpriceVariant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow this[int index] {
                get {
                    return ((stockCodeRow)(this.Rows[index]));
                }
            }
            
            public event stockCodeRowChangeEventHandler stockCodeRowChanging;
            
            public event stockCodeRowChangeEventHandler stockCodeRowChanged;
            
            public event stockCodeRowChangeEventHandler stockCodeRowDeleting;
            
            public event stockCodeRowChangeEventHandler stockCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockCodeRow(stockCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow AddstockCodeRow(string code, string stockExchange, string tickerCode, string name, string nameEn, int selected, decimal price, decimal priceVariant) {
                stockCodeRow rowstockCodeRow = ((stockCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        stockExchange,
                        tickerCode,
                        name,
                        nameEn,
                        selected,
                        price,
                        priceVariant};
                rowstockCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockCodeRow);
                return rowstockCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow FindBycode(string code) {
                return ((stockCodeRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockCodeDataTable cln = ((stockCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columnstockExchange = base.Columns["stockExchange"];
                this.columntickerCode = base.Columns["tickerCode"];
                this.columnname = base.Columns["name"];
                this.columnnameEn = base.Columns["nameEn"];
                this.columnselected = base.Columns["selected"];
                this.columnprice = base.Columns["price"];
                this.columnpriceVariant = base.Columns["priceVariant"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnstockExchange = new global::System.Data.DataColumn("stockExchange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockExchange);
                this.columntickerCode = new global::System.Data.DataColumn("tickerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntickerCode);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnnameEn = new global::System.Data.DataColumn("nameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnameEn);
                this.columnselected = new global::System.Data.DataColumn("selected", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselected);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnpriceVariant = new global::System.Data.DataColumn("priceVariant", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceVariant);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 20;
                this.columnstockExchange.AllowDBNull = false;
                this.columnstockExchange.MaxLength = 10;
                this.columntickerCode.AllowDBNull = false;
                this.columntickerCode.MaxLength = 20;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnnameEn.MaxLength = 255;
                this.columnselected.ReadOnly = true;
                this.columnprice.ReadOnly = true;
                this.columnpriceVariant.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow NewstockCodeRow() {
                return ((stockCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockCodeRowChanged != null)) {
                    this.stockCodeRowChanged(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockCodeRowChanging != null)) {
                    this.stockCodeRowChanging(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockCodeRowDeleted != null)) {
                    this.stockCodeRowDeleted(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockCodeRowDeleting != null)) {
                    this.stockCodeRowDeleting(this, new stockCodeRowChangeEvent(((stockCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockCodeRow(stockCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investorDataTable : global::System.Data.TypedTableBase<investorRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndisplayName;
            
            private global::System.Data.DataColumn columnaccount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorDataTable() {
                this.TableName = "investor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected investorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displayNameColumn {
                get {
                    return this.columndisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accountColumn {
                get {
                    return this.columnaccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow this[int index] {
                get {
                    return ((investorRow)(this.Rows[index]));
                }
            }
            
            public event investorRowChangeEventHandler investorRowChanging;
            
            public event investorRowChangeEventHandler investorRowChanged;
            
            public event investorRowChangeEventHandler investorRowDeleting;
            
            public event investorRowChangeEventHandler investorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvestorRow(investorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow AddinvestorRow(string code, string displayName, string account) {
                investorRow rowinvestorRow = ((investorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        displayName,
                        account};
                rowinvestorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestorRow);
                return rowinvestorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow FindBycode(string code) {
                return ((investorRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                investorDataTable cln = ((investorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndisplayName = base.Columns["displayName"];
                this.columnaccount = base.Columns["account"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndisplayName = new global::System.Data.DataColumn("displayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplayName);
                this.columnaccount = new global::System.Data.DataColumn("account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 10;
                this.columndisplayName.AllowDBNull = false;
                this.columndisplayName.MaxLength = 100;
                this.columnaccount.AllowDBNull = false;
                this.columnaccount.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow NewinvestorRow() {
                return ((investorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(investorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investorRowChanged != null)) {
                    this.investorRowChanged(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investorRowChanging != null)) {
                    this.investorRowChanging(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investorRowDeleted != null)) {
                    this.investorRowDeleted(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investorRowDeleting != null)) {
                    this.investorRowDeleting(this, new investorRowChangeEvent(((investorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvestorRow(investorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class investorStockDataTable : global::System.Data.TypedTableBase<investorStockRow> {
            
            private global::System.Data.DataColumn columnstockCode;
            
            private global::System.Data.DataColumn columnportfolio;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnbuyAmt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockDataTable() {
                this.TableName = "investorStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected investorStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockCodeColumn {
                get {
                    return this.columnstockCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portfolioColumn {
                get {
                    return this.columnportfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn buyAmtColumn {
                get {
                    return this.columnbuyAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow this[int index] {
                get {
                    return ((investorStockRow)(this.Rows[index]));
                }
            }
            
            public event investorStockRowChangeEventHandler investorStockRowChanging;
            
            public event investorStockRowChangeEventHandler investorStockRowChanged;
            
            public event investorStockRowChangeEventHandler investorStockRowDeleting;
            
            public event investorStockRowChangeEventHandler investorStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvestorStockRow(investorStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow AddinvestorStockRow(string stockCode, string portfolio, decimal qty, decimal buyAmt) {
                investorStockRow rowinvestorStockRow = ((investorStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stockCode,
                        portfolio,
                        qty,
                        buyAmt};
                rowinvestorStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvestorStockRow);
                return rowinvestorStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow FindBystockCodeportfolio(string stockCode, string portfolio) {
                return ((investorStockRow)(this.Rows.Find(new object[] {
                            stockCode,
                            portfolio})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                investorStockDataTable cln = ((investorStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new investorStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstockCode = base.Columns["stockCode"];
                this.columnportfolio = base.Columns["portfolio"];
                this.columnqty = base.Columns["qty"];
                this.columnbuyAmt = base.Columns["buyAmt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstockCode = new global::System.Data.DataColumn("stockCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockCode);
                this.columnportfolio = new global::System.Data.DataColumn("portfolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportfolio);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnbuyAmt = new global::System.Data.DataColumn("buyAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuyAmt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnstockCode,
                                this.columnportfolio}, true));
                this.columnstockCode.AllowDBNull = false;
                this.columnstockCode.MaxLength = 20;
                this.columnportfolio.AllowDBNull = false;
                this.columnportfolio.MaxLength = 10;
                this.columnqty.ReadOnly = true;
                this.columnbuyAmt.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow NewinvestorStockRow() {
                return ((investorStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new investorStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(investorStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.investorStockRowChanged != null)) {
                    this.investorStockRowChanged(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.investorStockRowChanging != null)) {
                    this.investorStockRowChanging(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.investorStockRowDeleted != null)) {
                    this.investorStockRowDeleted(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.investorStockRowDeleting != null)) {
                    this.investorStockRowDeleting(this, new investorStockRowChangeEvent(((investorStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvestorStockRow(investorStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "investorStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class interestedCodeDataTable : global::System.Data.TypedTableBase<interestedCodeRow> {
            
            private global::System.Data.DataColumn columncode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeDataTable() {
                this.TableName = "interestedCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal interestedCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected interestedCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRow this[int index] {
                get {
                    return ((interestedCodeRow)(this.Rows[index]));
                }
            }
            
            public event interestedCodeRowChangeEventHandler interestedCodeRowChanging;
            
            public event interestedCodeRowChangeEventHandler interestedCodeRowChanged;
            
            public event interestedCodeRowChangeEventHandler interestedCodeRowDeleting;
            
            public event interestedCodeRowChangeEventHandler interestedCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinterestedCodeRow(interestedCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRow AddinterestedCodeRow(string code) {
                interestedCodeRow rowinterestedCodeRow = ((interestedCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code};
                rowinterestedCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinterestedCodeRow);
                return rowinterestedCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRow FindBycode(string code) {
                return ((interestedCodeRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                interestedCodeDataTable cln = ((interestedCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new interestedCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRow NewinterestedCodeRow() {
                return ((interestedCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new interestedCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(interestedCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.interestedCodeRowChanged != null)) {
                    this.interestedCodeRowChanged(this, new interestedCodeRowChangeEvent(((interestedCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.interestedCodeRowChanging != null)) {
                    this.interestedCodeRowChanging(this, new interestedCodeRowChangeEvent(((interestedCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.interestedCodeRowDeleted != null)) {
                    this.interestedCodeRowDeleted(this, new interestedCodeRowChangeEvent(((interestedCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.interestedCodeRowDeleting != null)) {
                    this.interestedCodeRowDeleting(this, new interestedCodeRowChangeEvent(((interestedCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinterestedCodeRow(interestedCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "interestedCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tradeEstimateDataTable : global::System.Data.TypedTableBase<tradeEstimateRow> {
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columntradeAction;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnamt;
            
            private global::System.Data.DataColumn columnstockQty;
            
            private global::System.Data.DataColumn columncashAmt;
            
            private global::System.Data.DataColumn columnstockAmt;
            
            private global::System.Data.DataColumn columntotalAmt;
            
            private global::System.Data.DataColumn columnprofit;
            
            private global::System.Data.DataColumn columnfeeAmt;
            
            private global::System.Data.DataColumn columnignored;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateDataTable() {
                this.TableName = "tradeEstimate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tradeEstimateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tradeEstimateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tradeActionColumn {
                get {
                    return this.columntradeAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amtColumn {
                get {
                    return this.columnamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockQtyColumn {
                get {
                    return this.columnstockQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cashAmtColumn {
                get {
                    return this.columncashAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockAmtColumn {
                get {
                    return this.columnstockAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalAmtColumn {
                get {
                    return this.columntotalAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profitColumn {
                get {
                    return this.columnprofit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn feeAmtColumn {
                get {
                    return this.columnfeeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ignoredColumn {
                get {
                    return this.columnignored;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateRow this[int index] {
                get {
                    return ((tradeEstimateRow)(this.Rows[index]));
                }
            }
            
            public event tradeEstimateRowChangeEventHandler tradeEstimateRowChanging;
            
            public event tradeEstimateRowChangeEventHandler tradeEstimateRowChanged;
            
            public event tradeEstimateRowChangeEventHandler tradeEstimateRowDeleting;
            
            public event tradeEstimateRowChangeEventHandler tradeEstimateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtradeEstimateRow(tradeEstimateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateRow AddtradeEstimateRow(System.DateTime onDate, string tradeAction, decimal price, decimal qty, decimal amt, decimal stockQty, decimal cashAmt, decimal stockAmt, decimal totalAmt, decimal profit, decimal feeAmt, bool ignored) {
                tradeEstimateRow rowtradeEstimateRow = ((tradeEstimateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        onDate,
                        tradeAction,
                        price,
                        qty,
                        amt,
                        stockQty,
                        cashAmt,
                        stockAmt,
                        totalAmt,
                        profit,
                        feeAmt,
                        ignored};
                rowtradeEstimateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtradeEstimateRow);
                return rowtradeEstimateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tradeEstimateDataTable cln = ((tradeEstimateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tradeEstimateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnonDate = base.Columns["onDate"];
                this.columntradeAction = base.Columns["tradeAction"];
                this.columnprice = base.Columns["price"];
                this.columnqty = base.Columns["qty"];
                this.columnamt = base.Columns["amt"];
                this.columnstockQty = base.Columns["stockQty"];
                this.columncashAmt = base.Columns["cashAmt"];
                this.columnstockAmt = base.Columns["stockAmt"];
                this.columntotalAmt = base.Columns["totalAmt"];
                this.columnprofit = base.Columns["profit"];
                this.columnfeeAmt = base.Columns["feeAmt"];
                this.columnignored = base.Columns["ignored"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columntradeAction = new global::System.Data.DataColumn("tradeAction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntradeAction);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnamt = new global::System.Data.DataColumn("amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamt);
                this.columnstockQty = new global::System.Data.DataColumn("stockQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockQty);
                this.columncashAmt = new global::System.Data.DataColumn("cashAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncashAmt);
                this.columnstockAmt = new global::System.Data.DataColumn("stockAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockAmt);
                this.columntotalAmt = new global::System.Data.DataColumn("totalAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalAmt);
                this.columnprofit = new global::System.Data.DataColumn("profit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit);
                this.columnfeeAmt = new global::System.Data.DataColumn("feeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfeeAmt);
                this.columnignored = new global::System.Data.DataColumn("ignored", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnignored);
                this.columnonDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateRow NewtradeEstimateRow() {
                return ((tradeEstimateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tradeEstimateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tradeEstimateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tradeEstimateRowChanged != null)) {
                    this.tradeEstimateRowChanged(this, new tradeEstimateRowChangeEvent(((tradeEstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tradeEstimateRowChanging != null)) {
                    this.tradeEstimateRowChanging(this, new tradeEstimateRowChangeEvent(((tradeEstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tradeEstimateRowDeleted != null)) {
                    this.tradeEstimateRowDeleted(this, new tradeEstimateRowChangeEvent(((tradeEstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tradeEstimateRowDeleting != null)) {
                    this.tradeEstimateRowDeleting(this, new tradeEstimateRowChangeEvent(((tradeEstimateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetradeEstimateRow(tradeEstimateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tradeEstimateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class codeListDataTable : global::System.Data.TypedTableBase<codeListRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnbyteValue;
            
            private global::System.Data.DataColumn columnintValue;
            
            private global::System.Data.DataColumn columnshortValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListDataTable() {
                this.TableName = "codeList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal codeListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected codeListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn byteValueColumn {
                get {
                    return this.columnbyteValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn intValueColumn {
                get {
                    return this.columnintValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shortValueColumn {
                get {
                    return this.columnshortValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRow this[int index] {
                get {
                    return ((codeListRow)(this.Rows[index]));
                }
            }
            
            public event codeListRowChangeEventHandler codeListRowChanging;
            
            public event codeListRowChangeEventHandler codeListRowChanged;
            
            public event codeListRowChangeEventHandler codeListRowDeleting;
            
            public event codeListRowChangeEventHandler codeListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcodeListRow(codeListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRow AddcodeListRow(string code, string description, byte byteValue, int intValue, short shortValue) {
                codeListRow rowcodeListRow = ((codeListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        description,
                        byteValue,
                        intValue,
                        shortValue};
                rowcodeListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcodeListRow);
                return rowcodeListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRow FindBycode(string code) {
                return ((codeListRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                codeListDataTable cln = ((codeListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new codeListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndescription = base.Columns["description"];
                this.columnbyteValue = base.Columns["byteValue"];
                this.columnintValue = base.Columns["intValue"];
                this.columnshortValue = base.Columns["shortValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnbyteValue = new global::System.Data.DataColumn("byteValue", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbyteValue);
                this.columnintValue = new global::System.Data.DataColumn("intValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintValue);
                this.columnshortValue = new global::System.Data.DataColumn("shortValue", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshortValue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRow NewcodeListRow() {
                return ((codeListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new codeListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(codeListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.codeListRowChanged != null)) {
                    this.codeListRowChanged(this, new codeListRowChangeEvent(((codeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.codeListRowChanging != null)) {
                    this.codeListRowChanging(this, new codeListRowChangeEvent(((codeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.codeListRowDeleted != null)) {
                    this.codeListRowDeleted(this, new codeListRowChangeEvent(((codeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.codeListRowDeleting != null)) {
                    this.codeListRowDeleting(this, new codeListRowChangeEvent(((codeListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecodeListRow(codeListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "codeListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class marketDataDataTable : global::System.Data.TypedTableBase<marketDataRow> {
            
            private global::System.Data.DataColumn columnonDate;
            
            private global::System.Data.DataColumn columnval0;
            
            private global::System.Data.DataColumn columnval1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataDataTable() {
                this.TableName = "marketData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal marketDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected marketDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn onDateColumn {
                get {
                    return this.columnonDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val0Column {
                get {
                    return this.columnval0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val1Column {
                get {
                    return this.columnval1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataRow this[int index] {
                get {
                    return ((marketDataRow)(this.Rows[index]));
                }
            }
            
            public event marketDataRowChangeEventHandler marketDataRowChanging;
            
            public event marketDataRowChangeEventHandler marketDataRowChanged;
            
            public event marketDataRowChangeEventHandler marketDataRowDeleting;
            
            public event marketDataRowChangeEventHandler marketDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmarketDataRow(marketDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataRow AddmarketDataRow(System.DateTime onDate, double val0, double val1) {
                marketDataRow rowmarketDataRow = ((marketDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        onDate,
                        val0,
                        val1};
                rowmarketDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmarketDataRow);
                return rowmarketDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                marketDataDataTable cln = ((marketDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new marketDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnonDate = base.Columns["onDate"];
                this.columnval0 = base.Columns["val0"];
                this.columnval1 = base.Columns["val1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnonDate = new global::System.Data.DataColumn("onDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnonDate);
                this.columnval0 = new global::System.Data.DataColumn("val0", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval0);
                this.columnval1 = new global::System.Data.DataColumn("val1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval1);
                this.columnonDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataRow NewmarketDataRow() {
                return ((marketDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new marketDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(marketDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.marketDataRowChanged != null)) {
                    this.marketDataRowChanged(this, new marketDataRowChangeEvent(((marketDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.marketDataRowChanging != null)) {
                    this.marketDataRowChanging(this, new marketDataRowChangeEvent(((marketDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.marketDataRowDeleted != null)) {
                    this.marketDataRowDeleted(this, new marketDataRowChangeEvent(((marketDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.marketDataRowDeleting != null)) {
                    this.marketDataRowDeleting(this, new marketDataRowChangeEvent(((marketDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemarketDataRow(marketDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "marketDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class priceDiagnoseDataTable : global::System.Data.TypedTableBase<priceDiagnoseRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columndate1;
            
            private global::System.Data.DataColumn columndate2;
            
            private global::System.Data.DataColumn columnprice1;
            
            private global::System.Data.DataColumn columnprice2;
            
            private global::System.Data.DataColumn columnvariance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseDataTable() {
                this.TableName = "priceDiagnose";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDiagnoseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected priceDiagnoseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date1Column {
                get {
                    return this.columndate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date2Column {
                get {
                    return this.columndate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price1Column {
                get {
                    return this.columnprice1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price2Column {
                get {
                    return this.columnprice2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn varianceColumn {
                get {
                    return this.columnvariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRow this[int index] {
                get {
                    return ((priceDiagnoseRow)(this.Rows[index]));
                }
            }
            
            public event priceDiagnoseRowChangeEventHandler priceDiagnoseRowChanging;
            
            public event priceDiagnoseRowChangeEventHandler priceDiagnoseRowChanged;
            
            public event priceDiagnoseRowChangeEventHandler priceDiagnoseRowDeleting;
            
            public event priceDiagnoseRowChangeEventHandler priceDiagnoseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpriceDiagnoseRow(priceDiagnoseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRow AddpriceDiagnoseRow(string code, System.DateTime date1, System.DateTime date2, double price1, double price2, double variance) {
                priceDiagnoseRow rowpriceDiagnoseRow = ((priceDiagnoseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        date1,
                        date2,
                        price1,
                        price2,
                        variance};
                rowpriceDiagnoseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpriceDiagnoseRow);
                return rowpriceDiagnoseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRow FindBycodedate1date2(string code, System.DateTime date1, System.DateTime date2) {
                return ((priceDiagnoseRow)(this.Rows.Find(new object[] {
                            code,
                            date1,
                            date2})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                priceDiagnoseDataTable cln = ((priceDiagnoseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new priceDiagnoseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columndate1 = base.Columns["date1"];
                this.columndate2 = base.Columns["date2"];
                this.columnprice1 = base.Columns["price1"];
                this.columnprice2 = base.Columns["price2"];
                this.columnvariance = base.Columns["variance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columndate1 = new global::System.Data.DataColumn("date1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate1);
                this.columndate2 = new global::System.Data.DataColumn("date2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate2);
                this.columnprice1 = new global::System.Data.DataColumn("price1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice1);
                this.columnprice2 = new global::System.Data.DataColumn("price2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice2);
                this.columnvariance = new global::System.Data.DataColumn("variance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvariance);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode,
                                this.columndate1,
                                this.columndate2}, true));
                this.columncode.AllowDBNull = false;
                this.columndate1.AllowDBNull = false;
                this.columndate2.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRow NewpriceDiagnoseRow() {
                return ((priceDiagnoseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new priceDiagnoseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(priceDiagnoseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.priceDiagnoseRowChanged != null)) {
                    this.priceDiagnoseRowChanged(this, new priceDiagnoseRowChangeEvent(((priceDiagnoseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.priceDiagnoseRowChanging != null)) {
                    this.priceDiagnoseRowChanging(this, new priceDiagnoseRowChangeEvent(((priceDiagnoseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.priceDiagnoseRowDeleted != null)) {
                    this.priceDiagnoseRowDeleted(this, new priceDiagnoseRowChangeEvent(((priceDiagnoseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.priceDiagnoseRowDeleting != null)) {
                    this.priceDiagnoseRowDeleting(this, new priceDiagnoseRowChangeEvent(((priceDiagnoseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepriceDiagnoseRow(priceDiagnoseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "priceDiagnoseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class porfolioWatchDataTable : global::System.Data.TypedTableBase<porfolioWatchRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnstockExchange;
            
            private global::System.Data.DataColumn columntickerCode;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnpriceVariant;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnboughtPrice;
            
            private global::System.Data.DataColumn columnamt;
            
            private global::System.Data.DataColumn columnboughtAmt;
            
            private global::System.Data.DataColumn columnprofitVariantPerc;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columnprofitVariantAmt;
            
            private global::System.Data.DataColumn columnnameEn;
            
            private global::System.Data.DataColumn columnselected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchDataTable() {
                this.TableName = "porfolioWatch";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal porfolioWatchDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected porfolioWatchDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockExchangeColumn {
                get {
                    return this.columnstockExchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tickerCodeColumn {
                get {
                    return this.columntickerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceVariantColumn {
                get {
                    return this.columnpriceVariant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn boughtPriceColumn {
                get {
                    return this.columnboughtPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amtColumn {
                get {
                    return this.columnamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn boughtAmtColumn {
                get {
                    return this.columnboughtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profitVariantPercColumn {
                get {
                    return this.columnprofitVariantPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profitVariantAmtColumn {
                get {
                    return this.columnprofitVariantAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameEnColumn {
                get {
                    return this.columnnameEn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selectedColumn {
                get {
                    return this.columnselected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRow this[int index] {
                get {
                    return ((porfolioWatchRow)(this.Rows[index]));
                }
            }
            
            public event porfolioWatchRowChangeEventHandler porfolioWatchRowChanging;
            
            public event porfolioWatchRowChangeEventHandler porfolioWatchRowChanged;
            
            public event porfolioWatchRowChangeEventHandler porfolioWatchRowDeleting;
            
            public event porfolioWatchRowChangeEventHandler porfolioWatchRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddporfolioWatchRow(porfolioWatchRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRow AddporfolioWatchRow(string code, string stockExchange, string tickerCode, string name, decimal price, decimal priceVariant, decimal qty, decimal boughtPrice, decimal amt, decimal boughtAmt, decimal profitVariantPerc, string notes, decimal profitVariantAmt, string nameEn, int selected) {
                porfolioWatchRow rowporfolioWatchRow = ((porfolioWatchRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        stockExchange,
                        tickerCode,
                        name,
                        price,
                        priceVariant,
                        qty,
                        boughtPrice,
                        amt,
                        boughtAmt,
                        profitVariantPerc,
                        notes,
                        profitVariantAmt,
                        nameEn,
                        selected};
                rowporfolioWatchRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowporfolioWatchRow);
                return rowporfolioWatchRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRow FindBycode(string code) {
                return ((porfolioWatchRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                porfolioWatchDataTable cln = ((porfolioWatchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new porfolioWatchDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columnstockExchange = base.Columns["stockExchange"];
                this.columntickerCode = base.Columns["tickerCode"];
                this.columnname = base.Columns["name"];
                this.columnprice = base.Columns["price"];
                this.columnpriceVariant = base.Columns["priceVariant"];
                this.columnqty = base.Columns["qty"];
                this.columnboughtPrice = base.Columns["boughtPrice"];
                this.columnamt = base.Columns["amt"];
                this.columnboughtAmt = base.Columns["boughtAmt"];
                this.columnprofitVariantPerc = base.Columns["profitVariantPerc"];
                this.columnnotes = base.Columns["notes"];
                this.columnprofitVariantAmt = base.Columns["profitVariantAmt"];
                this.columnnameEn = base.Columns["nameEn"];
                this.columnselected = base.Columns["selected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnstockExchange = new global::System.Data.DataColumn("stockExchange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockExchange);
                this.columntickerCode = new global::System.Data.DataColumn("tickerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntickerCode);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnpriceVariant = new global::System.Data.DataColumn("priceVariant", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriceVariant);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnboughtPrice = new global::System.Data.DataColumn("boughtPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboughtPrice);
                this.columnamt = new global::System.Data.DataColumn("amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamt);
                this.columnboughtAmt = new global::System.Data.DataColumn("boughtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboughtAmt);
                this.columnprofitVariantPerc = new global::System.Data.DataColumn("profitVariantPerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofitVariantPerc);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columnprofitVariantAmt = new global::System.Data.DataColumn("profitVariantAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofitVariantAmt);
                this.columnnameEn = new global::System.Data.DataColumn("nameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnameEn);
                this.columnselected = new global::System.Data.DataColumn("selected", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselected);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.MaxLength = 20;
                this.columnstockExchange.AllowDBNull = false;
                this.columnstockExchange.MaxLength = 10;
                this.columntickerCode.AllowDBNull = false;
                this.columntickerCode.MaxLength = 20;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 255;
                this.columnnotes.MaxLength = 1;
                this.columnnameEn.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRow NewporfolioWatchRow() {
                return ((porfolioWatchRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new porfolioWatchRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(porfolioWatchRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.porfolioWatchRowChanged != null)) {
                    this.porfolioWatchRowChanged(this, new porfolioWatchRowChangeEvent(((porfolioWatchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.porfolioWatchRowChanging != null)) {
                    this.porfolioWatchRowChanging(this, new porfolioWatchRowChangeEvent(((porfolioWatchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.porfolioWatchRowDeleted != null)) {
                    this.porfolioWatchRowDeleted(this, new porfolioWatchRowChangeEvent(((porfolioWatchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.porfolioWatchRowDeleting != null)) {
                    this.porfolioWatchRowDeleting(this, new porfolioWatchRowChangeEvent(((porfolioWatchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveporfolioWatchRow(porfolioWatchRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "porfolioWatchDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataVarrianceDataTable : global::System.Data.TypedTableBase<dataVarrianceRow> {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columnvalue;
            
            private global::System.Data.DataColumn columnpercent;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columnval1;
            
            private global::System.Data.DataColumn columnval2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceDataTable() {
                this.TableName = "dataVarriance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataVarrianceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataVarrianceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn percentColumn {
                get {
                    return this.columnpercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val1Column {
                get {
                    return this.columnval1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn val2Column {
                get {
                    return this.columnval2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRow this[int index] {
                get {
                    return ((dataVarrianceRow)(this.Rows[index]));
                }
            }
            
            public event dataVarrianceRowChangeEventHandler dataVarrianceRowChanging;
            
            public event dataVarrianceRowChangeEventHandler dataVarrianceRowChanged;
            
            public event dataVarrianceRowChangeEventHandler dataVarrianceRowDeleting;
            
            public event dataVarrianceRowChangeEventHandler dataVarrianceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataVarrianceRow(dataVarrianceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRow AdddataVarrianceRow(string code, decimal value, decimal percent, string notes, decimal val1, decimal val2) {
                dataVarrianceRow rowdataVarrianceRow = ((dataVarrianceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        value,
                        percent,
                        notes,
                        val1,
                        val2};
                rowdataVarrianceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataVarrianceRow);
                return rowdataVarrianceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRow FindBycode(string code) {
                return ((dataVarrianceRow)(this.Rows.Find(new object[] {
                            code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataVarrianceDataTable cln = ((dataVarrianceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataVarrianceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columnvalue = base.Columns["value"];
                this.columnpercent = base.Columns["percent"];
                this.columnnotes = base.Columns["notes"];
                this.columnval1 = base.Columns["val1"];
                this.columnval2 = base.Columns["val2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columnpercent = new global::System.Data.DataColumn("percent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columnval1 = new global::System.Data.DataColumn("val1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval1);
                this.columnval2 = new global::System.Data.DataColumn("val2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncode}, true));
                this.columncode.AllowDBNull = false;
                this.columncode.Unique = true;
                this.columncode.Caption = "stockCode";
                this.columncode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRow NewdataVarrianceRow() {
                return ((dataVarrianceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataVarrianceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataVarrianceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataVarrianceRowChanged != null)) {
                    this.dataVarrianceRowChanged(this, new dataVarrianceRowChangeEvent(((dataVarrianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataVarrianceRowChanging != null)) {
                    this.dataVarrianceRowChanging(this, new dataVarrianceRowChangeEvent(((dataVarrianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataVarrianceRowDeleted != null)) {
                    this.dataVarrianceRowDeleted(this, new dataVarrianceRowChangeEvent(((dataVarrianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataVarrianceRowDeleting != null)) {
                    this.dataVarrianceRowDeleting(this, new dataVarrianceRowChangeEvent(((dataVarrianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataVarrianceRow(dataVarrianceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                tmpDS ds = new tmpDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataVarrianceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockCodeRow : global::System.Data.DataRow {
            
            private stockCodeDataTable tablestockCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockCode = ((stockCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablestockCode.codeColumn]));
                }
                set {
                    this[this.tablestockCode.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockExchange {
                get {
                    return ((string)(this[this.tablestockCode.stockExchangeColumn]));
                }
                set {
                    this[this.tablestockCode.stockExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tickerCode {
                get {
                    return ((string)(this[this.tablestockCode.tickerCodeColumn]));
                }
                set {
                    this[this.tablestockCode.tickerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablestockCode.nameColumn]));
                }
                set {
                    this[this.tablestockCode.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nameEn {
                get {
                    try {
                        return ((string)(this[this.tablestockCode.nameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nameEn\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.nameEnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int selected {
                get {
                    try {
                        return ((int)(this[this.tablestockCode.selectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'selected\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.selectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCode.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceVariant {
                get {
                    try {
                        return ((decimal)(this[this.tablestockCode.priceVariantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'priceVariant\' in table \'stockCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockCode.priceVariantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameEnNull() {
                return this.IsNull(this.tablestockCode.nameEnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameEnNull() {
                this[this.tablestockCode.nameEnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselectedNull() {
                return this.IsNull(this.tablestockCode.selectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselectedNull() {
                this[this.tablestockCode.selectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tablestockCode.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tablestockCode.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceVariantNull() {
                return this.IsNull(this.tablestockCode.priceVariantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceVariantNull() {
                this[this.tablestockCode.priceVariantColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class investorRow : global::System.Data.DataRow {
            
            private investorDataTable tableinvestor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestor = ((investorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableinvestor.codeColumn]));
                }
                set {
                    this[this.tableinvestor.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string displayName {
                get {
                    return ((string)(this[this.tableinvestor.displayNameColumn]));
                }
                set {
                    this[this.tableinvestor.displayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account {
                get {
                    return ((string)(this[this.tableinvestor.accountColumn]));
                }
                set {
                    this[this.tableinvestor.accountColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class investorStockRow : global::System.Data.DataRow {
            
            private investorStockDataTable tableinvestorStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal investorStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvestorStock = ((investorStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockCode {
                get {
                    return ((string)(this[this.tableinvestorStock.stockCodeColumn]));
                }
                set {
                    this[this.tableinvestorStock.stockCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portfolio {
                get {
                    return ((string)(this[this.tableinvestorStock.portfolioColumn]));
                }
                set {
                    this[this.tableinvestorStock.portfolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tableinvestorStock.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'investorStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestorStock.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal buyAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableinvestorStock.buyAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'buyAmt\' in table \'investorStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvestorStock.buyAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableinvestorStock.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableinvestorStock.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbuyAmtNull() {
                return this.IsNull(this.tableinvestorStock.buyAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbuyAmtNull() {
                this[this.tableinvestorStock.buyAmtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class interestedCodeRow : global::System.Data.DataRow {
            
            private interestedCodeDataTable tableinterestedCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal interestedCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinterestedCode = ((interestedCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableinterestedCode.codeColumn]));
                }
                set {
                    this[this.tableinterestedCode.codeColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tradeEstimateRow : global::System.Data.DataRow {
            
            private tradeEstimateDataTable tabletradeEstimate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tradeEstimateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletradeEstimate = ((tradeEstimateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    return ((global::System.DateTime)(this[this.tabletradeEstimate.onDateColumn]));
                }
                set {
                    this[this.tabletradeEstimate.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tradeAction {
                get {
                    try {
                        return ((string)(this[this.tabletradeEstimate.tradeActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tradeAction\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.tradeActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amt {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amt\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stockQty {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.stockQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stockQty\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.stockQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cashAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.cashAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cashAmt\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.cashAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stockAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.stockAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stockAmt\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.stockAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.totalAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalAmt\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.totalAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal profit {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.profitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profit\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.profitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal feeAmt {
                get {
                    try {
                        return ((decimal)(this[this.tabletradeEstimate.feeAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'feeAmt\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.feeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ignored {
                get {
                    try {
                        return ((bool)(this[this.tabletradeEstimate.ignoredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ignored\' in table \'tradeEstimate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletradeEstimate.ignoredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstradeActionNull() {
                return this.IsNull(this.tabletradeEstimate.tradeActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettradeActionNull() {
                this[this.tabletradeEstimate.tradeActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tabletradeEstimate.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tabletradeEstimate.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tabletradeEstimate.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tabletradeEstimate.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamtNull() {
                return this.IsNull(this.tabletradeEstimate.amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamtNull() {
                this[this.tabletradeEstimate.amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstockQtyNull() {
                return this.IsNull(this.tabletradeEstimate.stockQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstockQtyNull() {
                this[this.tabletradeEstimate.stockQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscashAmtNull() {
                return this.IsNull(this.tabletradeEstimate.cashAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcashAmtNull() {
                this[this.tabletradeEstimate.cashAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstockAmtNull() {
                return this.IsNull(this.tabletradeEstimate.stockAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstockAmtNull() {
                this[this.tabletradeEstimate.stockAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalAmtNull() {
                return this.IsNull(this.tabletradeEstimate.totalAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalAmtNull() {
                this[this.tabletradeEstimate.totalAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprofitNull() {
                return this.IsNull(this.tabletradeEstimate.profitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprofitNull() {
                this[this.tabletradeEstimate.profitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfeeAmtNull() {
                return this.IsNull(this.tabletradeEstimate.feeAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfeeAmtNull() {
                this[this.tabletradeEstimate.feeAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsignoredNull() {
                return this.IsNull(this.tabletradeEstimate.ignoredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetignoredNull() {
                this[this.tabletradeEstimate.ignoredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class codeListRow : global::System.Data.DataRow {
            
            private codeListDataTable tablecodeList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal codeListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecodeList = ((codeListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablecodeList.codeColumn]));
                }
                set {
                    this[this.tablecodeList.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tablecodeList.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'codeList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecodeList.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte byteValue {
                get {
                    try {
                        return ((byte)(this[this.tablecodeList.byteValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'byteValue\' in table \'codeList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecodeList.byteValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int intValue {
                get {
                    try {
                        return ((int)(this[this.tablecodeList.intValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intValue\' in table \'codeList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecodeList.intValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short shortValue {
                get {
                    try {
                        return ((short)(this[this.tablecodeList.shortValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shortValue\' in table \'codeList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecodeList.shortValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tablecodeList.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tablecodeList.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbyteValueNull() {
                return this.IsNull(this.tablecodeList.byteValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbyteValueNull() {
                this[this.tablecodeList.byteValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsintValueNull() {
                return this.IsNull(this.tablecodeList.intValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetintValueNull() {
                this[this.tablecodeList.intValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshortValueNull() {
                return this.IsNull(this.tablecodeList.shortValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshortValueNull() {
                this[this.tablecodeList.shortValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class marketDataRow : global::System.Data.DataRow {
            
            private marketDataDataTable tablemarketData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal marketDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemarketData = ((marketDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime onDate {
                get {
                    return ((global::System.DateTime)(this[this.tablemarketData.onDateColumn]));
                }
                set {
                    this[this.tablemarketData.onDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double val0 {
                get {
                    try {
                        return ((double)(this[this.tablemarketData.val0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'val0\' in table \'marketData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarketData.val0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double val1 {
                get {
                    try {
                        return ((double)(this[this.tablemarketData.val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'val1\' in table \'marketData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarketData.val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isval0Null() {
                return this.IsNull(this.tablemarketData.val0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setval0Null() {
                this[this.tablemarketData.val0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isval1Null() {
                return this.IsNull(this.tablemarketData.val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setval1Null() {
                this[this.tablemarketData.val1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class priceDiagnoseRow : global::System.Data.DataRow {
            
            private priceDiagnoseDataTable tablepriceDiagnose;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal priceDiagnoseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepriceDiagnose = ((priceDiagnoseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tablepriceDiagnose.codeColumn]));
                }
                set {
                    this[this.tablepriceDiagnose.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date1 {
                get {
                    return ((global::System.DateTime)(this[this.tablepriceDiagnose.date1Column]));
                }
                set {
                    this[this.tablepriceDiagnose.date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date2 {
                get {
                    return ((global::System.DateTime)(this[this.tablepriceDiagnose.date2Column]));
                }
                set {
                    this[this.tablepriceDiagnose.date2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double price1 {
                get {
                    try {
                        return ((double)(this[this.tablepriceDiagnose.price1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price1\' in table \'priceDiagnose\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDiagnose.price1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double price2 {
                get {
                    try {
                        return ((double)(this[this.tablepriceDiagnose.price2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price2\' in table \'priceDiagnose\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDiagnose.price2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double variance {
                get {
                    try {
                        return ((double)(this[this.tablepriceDiagnose.varianceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'variance\' in table \'priceDiagnose\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepriceDiagnose.varianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice1Null() {
                return this.IsNull(this.tablepriceDiagnose.price1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice1Null() {
                this[this.tablepriceDiagnose.price1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice2Null() {
                return this.IsNull(this.tablepriceDiagnose.price2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice2Null() {
                this[this.tablepriceDiagnose.price2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvarianceNull() {
                return this.IsNull(this.tablepriceDiagnose.varianceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvarianceNull() {
                this[this.tablepriceDiagnose.varianceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class porfolioWatchRow : global::System.Data.DataRow {
            
            private porfolioWatchDataTable tableporfolioWatch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal porfolioWatchRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableporfolioWatch = ((porfolioWatchDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableporfolioWatch.codeColumn]));
                }
                set {
                    this[this.tableporfolioWatch.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stockExchange {
                get {
                    return ((string)(this[this.tableporfolioWatch.stockExchangeColumn]));
                }
                set {
                    this[this.tableporfolioWatch.stockExchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tickerCode {
                get {
                    return ((string)(this[this.tableporfolioWatch.tickerCodeColumn]));
                }
                set {
                    this[this.tableporfolioWatch.tickerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableporfolioWatch.nameColumn]));
                }
                set {
                    this[this.tableporfolioWatch.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal priceVariant {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.priceVariantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'priceVariant\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.priceVariantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qty {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal boughtPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.boughtPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'boughtPrice\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.boughtPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amt {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amt\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal boughtAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.boughtAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'boughtAmt\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.boughtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal profitVariantPerc {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.profitVariantPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profitVariantPerc\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.profitVariantPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableporfolioWatch.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal profitVariantAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableporfolioWatch.profitVariantAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profitVariantAmt\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.profitVariantAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nameEn {
                get {
                    try {
                        return ((string)(this[this.tableporfolioWatch.nameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nameEn\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.nameEnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int selected {
                get {
                    try {
                        return ((int)(this[this.tableporfolioWatch.selectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'selected\' in table \'porfolioWatch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableporfolioWatch.selectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tableporfolioWatch.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tableporfolioWatch.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceVariantNull() {
                return this.IsNull(this.tableporfolioWatch.priceVariantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceVariantNull() {
                this[this.tableporfolioWatch.priceVariantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableporfolioWatch.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableporfolioWatch.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsboughtPriceNull() {
                return this.IsNull(this.tableporfolioWatch.boughtPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetboughtPriceNull() {
                this[this.tableporfolioWatch.boughtPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamtNull() {
                return this.IsNull(this.tableporfolioWatch.amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamtNull() {
                this[this.tableporfolioWatch.amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsboughtAmtNull() {
                return this.IsNull(this.tableporfolioWatch.boughtAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetboughtAmtNull() {
                this[this.tableporfolioWatch.boughtAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprofitVariantPercNull() {
                return this.IsNull(this.tableporfolioWatch.profitVariantPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprofitVariantPercNull() {
                this[this.tableporfolioWatch.profitVariantPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableporfolioWatch.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableporfolioWatch.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprofitVariantAmtNull() {
                return this.IsNull(this.tableporfolioWatch.profitVariantAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprofitVariantAmtNull() {
                this[this.tableporfolioWatch.profitVariantAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameEnNull() {
                return this.IsNull(this.tableporfolioWatch.nameEnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameEnNull() {
                this[this.tableporfolioWatch.nameEnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselectedNull() {
                return this.IsNull(this.tableporfolioWatch.selectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselectedNull() {
                this[this.tableporfolioWatch.selectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataVarrianceRow : global::System.Data.DataRow {
            
            private dataVarrianceDataTable tabledataVarriance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataVarrianceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataVarriance = ((dataVarrianceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tabledataVarriance.codeColumn]));
                }
                set {
                    this[this.tabledataVarriance.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal value {
                get {
                    try {
                        return ((decimal)(this[this.tabledataVarriance.valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'value\' in table \'dataVarriance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataVarriance.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal percent {
                get {
                    try {
                        return ((decimal)(this[this.tabledataVarriance.percentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percent\' in table \'dataVarriance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataVarriance.percentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tabledataVarriance.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'dataVarriance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataVarriance.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val1 {
                get {
                    try {
                        return ((decimal)(this[this.tabledataVarriance.val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'val1\' in table \'dataVarriance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataVarriance.val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal val2 {
                get {
                    try {
                        return ((decimal)(this[this.tabledataVarriance.val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'val2\' in table \'dataVarriance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataVarriance.val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalueNull() {
                return this.IsNull(this.tabledataVarriance.valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalueNull() {
                this[this.tabledataVarriance.valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspercentNull() {
                return this.IsNull(this.tabledataVarriance.percentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpercentNull() {
                this[this.tabledataVarriance.percentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tabledataVarriance.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tabledataVarriance.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isval1Null() {
                return this.IsNull(this.tabledataVarriance.val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setval1Null() {
                this[this.tabledataVarriance.val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isval2Null() {
                return this.IsNull(this.tabledataVarriance.val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setval2Null() {
                this[this.tabledataVarriance.val2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockCodeRowChangeEvent : global::System.EventArgs {
            
            private stockCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRowChangeEvent(stockCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class investorRowChangeEvent : global::System.EventArgs {
            
            private investorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRowChangeEvent(investorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class investorStockRowChangeEvent : global::System.EventArgs {
            
            private investorStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRowChangeEvent(investorStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public investorStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class interestedCodeRowChangeEvent : global::System.EventArgs {
            
            private interestedCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRowChangeEvent(interestedCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public interestedCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tradeEstimateRowChangeEvent : global::System.EventArgs {
            
            private tradeEstimateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateRowChangeEvent(tradeEstimateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tradeEstimateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class codeListRowChangeEvent : global::System.EventArgs {
            
            private codeListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRowChangeEvent(codeListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public codeListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class marketDataRowChangeEvent : global::System.EventArgs {
            
            private marketDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataRowChangeEvent(marketDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public marketDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class priceDiagnoseRowChangeEvent : global::System.EventArgs {
            
            private priceDiagnoseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRowChangeEvent(priceDiagnoseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public priceDiagnoseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class porfolioWatchRowChangeEvent : global::System.EventArgs {
            
            private porfolioWatchRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRowChangeEvent(porfolioWatchRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public porfolioWatchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataVarrianceRowChangeEvent : global::System.EventArgs {
            
            private dataVarrianceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRowChangeEvent(dataVarrianceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataVarrianceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradePointWithEstimationDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradePointWithEstimationDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.DataParams dataParam;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string strategyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.EstimateOptions options;
        
        public GetTradePointWithEstimationDetailRequest() {
        }
        
        public GetTradePointWithEstimationDetailRequest(OpenXMLDemo.StockService.DataParams dataParam, string stockCode, string strategyCode, OpenXMLDemo.StockService.EstimateOptions options) {
            this.dataParam = dataParam;
            this.stockCode = stockCode;
            this.strategyCode = strategyCode;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradePointWithEstimationDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradePointWithEstimationDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
        public TradePointInfo[] GetTradePointWithEstimationDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.tradeEstimateDataTable toTbl;
        
        public GetTradePointWithEstimationDetailResponse() {
        }
        
        public GetTradePointWithEstimationDetailResponse(TradePointInfo[] GetTradePointWithEstimationDetailResult, tmpDS.tradeEstimateDataTable toTbl) {
            this.GetTradePointWithEstimationDetailResult = GetTradePointWithEstimationDetailResult;
            this.toTbl = toTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DiagnosePrice_CloseAndNextOpen", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DiagnosePrice_CloseAndNextOpenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string exchangeCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public double variantPerc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public double variance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public byte precision;
        
        public DiagnosePrice_CloseAndNextOpenRequest() {
        }
        
        public DiagnosePrice_CloseAndNextOpenRequest(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision) {
            this.frDate = frDate;
            this.toDate = toDate;
            this.timeScaleCode = timeScaleCode;
            this.exchangeCode = exchangeCode;
            this.code = code;
            this.variantPerc = variantPerc;
            this.variance = variance;
            this.precision = precision;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DiagnosePrice_CloseAndNextOpenResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DiagnosePrice_CloseAndNextOpenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.priceDiagnoseDataTable DiagnosePrice_CloseAndNextOpenResult;
        
        public DiagnosePrice_CloseAndNextOpenResponse() {
        }
        
        public DiagnosePrice_CloseAndNextOpenResponse(tmpDS.priceDiagnoseDataTable DiagnosePrice_CloseAndNextOpenResult) {
            this.DiagnosePrice_CloseAndNextOpenResult = DiagnosePrice_CloseAndNextOpenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReAggregatePriceData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReAggregatePriceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public ReAggregatePriceDataRequest() {
        }
        
        public ReAggregatePriceDataRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReAggregatePriceDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReAggregatePriceDataResponse {
        
        public ReAggregatePriceDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetXmlDoc2StringSTRATEGY", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetXmlDoc2StringSTRATEGYRequest {
        
        public GetXmlDoc2StringSTRATEGYRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetXmlDoc2StringSTRATEGYResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetXmlDoc2StringSTRATEGYResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetXmlDoc2StringSTRATEGYResult;
        
        public GetXmlDoc2StringSTRATEGYResponse() {
        }
        
        public GetXmlDoc2StringSTRATEGYResponse(string GetXmlDoc2StringSTRATEGYResult) {
            this.GetXmlDoc2StringSTRATEGYResult = GetXmlDoc2StringSTRATEGYResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetXmlDoc2StringINDICATOR", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetXmlDoc2StringINDICATORRequest {
        
        public GetXmlDoc2StringINDICATORRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetXmlDoc2StringINDICATORResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetXmlDoc2StringINDICATORResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetXmlDoc2StringINDICATORResult;
        
        public GetXmlDoc2StringINDICATORResponse() {
        }
        
        public GetXmlDoc2StringINDICATORResponse(string GetXmlDoc2StringINDICATORResult) {
            this.GetXmlDoc2StringINDICATORResult = GetXmlDoc2StringINDICATORResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Load_Global_Settings", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Load_Global_SettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.GlobalSettings settings;
        
        public Load_Global_SettingsRequest() {
        }
        
        public Load_Global_SettingsRequest(OpenXMLDemo.StockService.GlobalSettings settings) {
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Load_Global_SettingsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Load_Global_SettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.GlobalSettings settings;
        
        public Load_Global_SettingsResponse() {
        }
        
        public Load_Global_SettingsResponse(OpenXMLDemo.StockService.GlobalSettings settings) {
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_Global_Settings", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_Global_SettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.GlobalSettings settings;
        
        public Save_Global_SettingsRequest() {
        }
        
        public Save_Global_SettingsRequest(OpenXMLDemo.StockService.GlobalSettings settings) {
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save_Global_SettingsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Save_Global_SettingsResponse {
        
        public Save_Global_SettingsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte logType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string desc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string source;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string msg;
        
        public WriteLogRequest() {
        }
        
        public WriteLogRequest(byte logType, string investorCode, string desc, string source, string msg) {
            this.logType = logType;
            this.investorCode = investorCode;
            this.desc = desc;
            this.source = source;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteLogResponse {
        
        public WriteLogResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteExcptionLog", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteExcptionLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.SysLogLogData logData;
        
        public WriteExcptionLogRequest() {
        }
        
        public WriteExcptionLogRequest(string investorCode, OpenXMLDemo.StockService.SysLogLogData logData) {
            this.investorCode = investorCode;
            this.logData = logData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WriteExcptionLogResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WriteExcptionLogResponse {
        
        public WriteExcptionLogResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceMarket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceMarketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime beforeDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int topN;
        
        public GetTopPriceVarrianceMarketRequest() {
        }
        
        public GetTopPriceVarrianceMarketRequest(System.DateTime beforeDate, string timeScaleCode, int topN) {
            this.beforeDate = beforeDate;
            this.timeScaleCode = timeScaleCode;
            this.topN = topN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceMarketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceMarketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceMarketResult;
        
        public GetTopPriceVarrianceMarketResponse() {
        }
        
        public GetTopPriceVarrianceMarketResponse(tmpDS.dataVarrianceDataTable GetTopPriceVarrianceMarketResult) {
            this.GetTopPriceVarrianceMarketResult = GetTopPriceVarrianceMarketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime beforeDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int topN;
        
        public GetTopPriceVarrianceUserRequest() {
        }
        
        public GetTopPriceVarrianceUserRequest(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN) {
            this.beforeDate = beforeDate;
            this.timeScaleCode = timeScaleCode;
            this.userCode = userCode;
            this.topN = topN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceUserResult;
        
        public GetTopPriceVarrianceUserResponse() {
        }
        
        public GetTopPriceVarrianceUserResponse(tmpDS.dataVarrianceDataTable GetTopPriceVarrianceUserResult) {
            this.GetTopPriceVarrianceUserResult = GetTopPriceVarrianceUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceOfUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceOfUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int topN;
        
        public GetTopPriceVarrianceOfUserRequest() {
        }
        
        public GetTopPriceVarrianceOfUserRequest(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN) {
            this.frDate = frDate;
            this.toDate = toDate;
            this.timeScaleCode = timeScaleCode;
            this.userCode = userCode;
            this.topN = topN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceOfUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceOfUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceOfUserResult;
        
        public GetTopPriceVarrianceOfUserResponse() {
        }
        
        public GetTopPriceVarrianceOfUserResponse(tmpDS.dataVarrianceDataTable GetTopPriceVarrianceOfUserResult) {
            this.GetTopPriceVarrianceOfUserResult = GetTopPriceVarrianceOfUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarriance", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int topN;
        
        public GetTopPriceVarrianceRequest() {
        }
        
        public GetTopPriceVarrianceRequest(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN) {
            this.frDate = frDate;
            this.toDate = toDate;
            this.timeScaleCode = timeScaleCode;
            this.topN = topN;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTopPriceVarrianceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTopPriceVarrianceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceResult;
        
        public GetTopPriceVarrianceResponse() {
        }
        
        public GetTopPriceVarrianceResponse(tmpDS.dataVarrianceDataTable GetTopPriceVarrianceResult) {
            this.GetTopPriceVarrianceResult = GetTopPriceVarrianceResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.PriceDataType", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesPriceDataType {
        
        /// <remarks/>
        High,
        
        /// <remarks/>
        Low,
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Close,
        
        /// <remarks/>
        Volume,
        
        /// <remarks/>
        DateTime,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastPrice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesPriceDataType type;
        
        public GetLastPriceRequest() {
        }
        
        public GetLastPriceRequest(OpenXMLDemo.StockService.AppTypesPriceDataType type) {
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastPriceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.lastPriceDataDataTable GetLastPriceResult;
        
        public GetLastPriceResponse() {
        }
        
        public GetLastPriceResponse(baseDS.lastPriceDataDataTable GetLastPriceResult) {
            this.GetLastPriceResult = GetLastPriceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_BySuperSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_BySuperSectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public GetBizSubSector_BySuperSectorRequest() {
        }
        
        public GetBizSubSector_BySuperSectorRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_BySuperSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_BySuperSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSectorResult;
        
        public GetBizSubSector_BySuperSectorResponse() {
        }
        
        public GetBizSubSector_BySuperSectorResponse(baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSectorResult) {
            this.GetBizSubSector_BySuperSectorResult = GetBizSubSector_BySuperSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_BySector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_BySectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public GetBizSubSector_BySectorRequest() {
        }
        
        public GetBizSubSector_BySectorRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_BySectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_BySectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSector_BySectorResult;
        
        public GetBizSubSector_BySectorResponse() {
        }
        
        public GetBizSubSector_BySectorResponse(baseDS.bizSubSectorDataTable GetBizSubSector_BySectorResult) {
            this.GetBizSubSector_BySectorResult = GetBizSubSector_BySectorResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.PortfolioTypes", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesPortfolioTypes {
        
        /// <remarks/>
        Portfolio,
        
        /// <remarks/>
        WatchList,
        
        /// <remarks/>
        SysWatchList,
        
        /// <remarks/>
        PortfolioDefaultStrategy,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByInvestorAndType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByInvestorAndTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public OpenXMLDemo.StockService.AppTypesPortfolioTypes type;
        
        public GetPortfolio_ByInvestorAndTypeRequest() {
        }
        
        public GetPortfolio_ByInvestorAndTypeRequest(string investorCode, OpenXMLDemo.StockService.AppTypesPortfolioTypes type) {
            this.investorCode = investorCode;
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByInvestorAndTypeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByInvestorAndTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable GetPortfolio_ByInvestorAndTypeResult;
        
        public GetPortfolio_ByInvestorAndTypeResponse() {
        }
        
        public GetPortfolio_ByInvestorAndTypeResponse(baseDS.portfolioDataTable GetPortfolio_ByInvestorAndTypeResult) {
            this.GetPortfolio_ByInvestorAndTypeResult = GetPortfolio_ByInvestorAndTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesPortfolioTypes type;
        
        public GetPortfolio_ByTypeRequest() {
        }
        
        public GetPortfolio_ByTypeRequest(OpenXMLDemo.StockService.AppTypesPortfolioTypes type) {
            this.type = type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByTypeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable GetPortfolio_ByTypeResult;
        
        public GetPortfolio_ByTypeResponse() {
        }
        
        public GetPortfolio_ByTypeResponse(baseDS.portfolioDataTable GetPortfolio_ByTypeResult) {
            this.GetPortfolio_ByTypeResult = GetPortfolio_ByTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string portfolioCode;
        
        public GetPortfolio_ByCodeRequest() {
        }
        
        public GetPortfolio_ByCodeRequest(string portfolioCode) {
            this.portfolioCode = portfolioCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable GetPortfolio_ByCodeResult;
        
        public GetPortfolio_ByCodeResponse() {
        }
        
        public GetPortfolio_ByCodeResponse(baseDS.portfolioDataTable GetPortfolio_ByCodeResult) {
            this.GetPortfolio_ByCodeResult = GetPortfolio_ByCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByInvestor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByInvestorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        public GetPortfolio_ByInvestorRequest() {
        }
        
        public GetPortfolio_ByInvestorRequest(string investorCode) {
            this.investorCode = investorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolio_ByInvestorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolio_ByInvestorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable GetPortfolio_ByInvestorResult;
        
        public GetPortfolio_ByInvestorResponse() {
        }
        
        public GetPortfolio_ByInvestorResponse(baseDS.portfolioDataTable GetPortfolio_ByInvestorResult) {
            this.GetPortfolio_ByInvestorResult = GetPortfolio_ByInvestorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradeAlert", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradeAlertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public byte statusMask;
        
        public GetTradeAlertRequest() {
        }
        
        public GetTradeAlertRequest(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask) {
            this.frDate = frDate;
            this.toDate = toDate;
            this.investor = investor;
            this.statusMask = statusMask;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradeAlertResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradeAlertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.tradeAlertDataTable GetTradeAlertResult;
        
        public GetTradeAlertResponse() {
        }
        
        public GetTradeAlertResponse(baseDS.tradeAlertDataTable GetTradeAlertResult) {
            this.GetTradeAlertResult = GetTradeAlertResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradeAlert_BySQL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradeAlert_BySQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string alertSql;
        
        public GetTradeAlert_BySQLRequest() {
        }
        
        public GetTradeAlert_BySQLRequest(string alertSql) {
            this.alertSql = alertSql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradeAlert_BySQLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradeAlert_BySQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.tradeAlertDataTable GetTradeAlert_BySQLResult;
        
        public GetTradeAlert_BySQLResponse() {
        }
        
        public GetTradeAlert_BySQLResponse(baseDS.tradeAlertDataTable GetTradeAlert_BySQLResult) {
            this.GetTradeAlert_BySQLResult = GetTradeAlert_BySQLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransaction_BySQL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransaction_BySQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string transSql;
        
        public GetTransaction_BySQLRequest() {
        }
        
        public GetTransaction_BySQLRequest(string transSql) {
            this.transSql = transSql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransaction_BySQLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransaction_BySQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.transactionsDataTable GetTransaction_BySQLResult;
        
        public GetTransaction_BySQLResponse() {
        }
        
        public GetTransaction_BySQLResponse(baseDS.transactionsDataTable GetTransaction_BySQLResult) {
            this.GetTransaction_BySQLResult = GetTransaction_BySQLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolioDetail_ByType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolioDetail_ByTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonTypes", IsNullable=false)]
        public AppTypesPortfolioTypes[] types;
        
        public GetPortfolioDetail_ByTypeRequest() {
        }
        
        public GetPortfolioDetail_ByTypeRequest(AppTypesPortfolioTypes[] types) {
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolioDetail_ByTypeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolioDetail_ByTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDetailDataTable GetPortfolioDetail_ByTypeResult;
        
        public GetPortfolioDetail_ByTypeResponse() {
        }
        
        public GetPortfolioDetail_ByTypeResponse(baseDS.portfolioDetailDataTable GetPortfolioDetail_ByTypeResult) {
            this.GetPortfolioDetail_ByTypeResult = GetPortfolioDetail_ByTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolioDetail_ByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolioDetail_ByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string portfolioCode;
        
        public GetPortfolioDetail_ByCodeRequest() {
        }
        
        public GetPortfolioDetail_ByCodeRequest(string portfolioCode) {
            this.portfolioCode = portfolioCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPortfolioDetail_ByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPortfolioDetail_ByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCodeResult;
        
        public GetPortfolioDetail_ByCodeResponse() {
        }
        
        public GetPortfolioDetail_ByCodeResponse(baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCodeResult) {
            this.GetPortfolioDetail_ByCodeResult = GetPortfolioDetail_ByCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOwnedStockSum_ByInvestor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOwnedStockSum_ByInvestorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        public GetOwnedStockSum_ByInvestorRequest() {
        }
        
        public GetOwnedStockSum_ByInvestorRequest(string investorCode) {
            this.investorCode = investorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOwnedStockSum_ByInvestorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOwnedStockSum_ByInvestorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.investorStockDataTable GetOwnedStockSum_ByInvestorResult;
        
        public GetOwnedStockSum_ByInvestorResponse() {
        }
        
        public GetOwnedStockSum_ByInvestorResponse(tmpDS.investorStockDataTable GetOwnedStockSum_ByInvestorResult) {
            this.GetOwnedStockSum_ByInvestorResult = GetOwnedStockSum_ByInvestorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOwnedStock_ByPortfolio", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOwnedStock_ByPortfolioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string portfolioCode;
        
        public GetOwnedStock_ByPortfolioRequest() {
        }
        
        public GetOwnedStock_ByPortfolioRequest(string portfolioCode) {
            this.portfolioCode = portfolioCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOwnedStock_ByPortfolioResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOwnedStock_ByPortfolioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorStockDataTable GetOwnedStock_ByPortfolioResult;
        
        public GetOwnedStock_ByPortfolioResponse() {
        }
        
        public GetOwnedStock_ByPortfolioResponse(baseDS.investorStockDataTable GetOwnedStock_ByPortfolioResult) {
            this.GetOwnedStock_ByPortfolioResult = GetOwnedStock_ByPortfolioResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastPriceSum", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastPriceSumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesPriceDataType type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        public GetLastPriceSumRequest() {
        }
        
        public GetLastPriceSumRequest(OpenXMLDemo.StockService.AppTypesPriceDataType type, string timeScaleCode) {
            this.type = type;
            this.timeScaleCode = timeScaleCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastPriceSumResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastPriceSumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.lastPriceDataDataTable GetLastPriceSumResult;
        
        public GetLastPriceSumResponse() {
        }
        
        public GetLastPriceSumResponse(baseDS.lastPriceDataDataTable GetLastPriceSumResult) {
            this.GetLastPriceSumResult = GetLastPriceSumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPriceData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPriceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime toDate;
        
        public GetPriceDataRequest() {
        }
        
        public GetPriceDataRequest(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate) {
            this.stockCode = stockCode;
            this.timeScaleCode = timeScaleCode;
            this.frDate = frDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPriceDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPriceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable GetPriceDataResult;
        
        public GetPriceDataResponse() {
        }
        
        public GetPriceDataResponse(baseDS.priceDataDataTable GetPriceDataResult) {
            this.GetPriceDataResult = GetPriceDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAlertTime", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAlertTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        public GetLastAlertTimeRequest() {
        }
        
        public GetLastAlertTimeRequest(string investorCode) {
            this.investorCode = investorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastAlertTimeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastAlertTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime GetLastAlertTimeResult;
        
        public GetLastAlertTimeResponse() {
        }
        
        public GetLastAlertTimeResponse(System.DateTime GetLastAlertTimeResult) {
            this.GetLastAlertTimeResult = GetLastAlertTimeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_ByTimeScale_Code_FrDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_ByTimeScale_Code_FrDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime fromDate;
        
        public GetData_ByTimeScale_Code_FrDateRequest() {
        }
        
        public GetData_ByTimeScale_Code_FrDateRequest(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            this.timeScaleCode = timeScaleCode;
            this.stockCode = stockCode;
            this.fromDate = fromDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_ByTimeScale_Code_FrDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_ByTimeScale_Code_FrDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDateResult;
        
        public GetData_ByTimeScale_Code_FrDateResponse() {
        }
        
        public GetData_ByTimeScale_Code_FrDateResponse(baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDateResult) {
            this.GetData_ByTimeScale_Code_FrDateResult = GetData_ByTimeScale_Code_FrDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_ByTimeScale_Code_DateRange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_ByTimeScale_Code_DateRangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime toDate;
        
        public GetData_ByTimeScale_Code_DateRangeRequest() {
        }
        
        public GetData_ByTimeScale_Code_DateRangeRequest(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            this.timeScaleCode = timeScaleCode;
            this.stockCode = stockCode;
            this.frDate = frDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_ByTimeScale_Code_DateRangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_ByTimeScale_Code_DateRangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRangeResult;
        
        public GetData_ByTimeScale_Code_DateRangeResponse() {
        }
        
        public GetData_ByTimeScale_Code_DateRangeResponse(baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRangeResult) {
            this.GetData_ByTimeScale_Code_DateRangeResult = GetData_ByTimeScale_Code_DateRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_TotalRow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_TotalRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime toDate;
        
        public GetData_TotalRowRequest() {
        }
        
        public GetData_TotalRowRequest(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            this.timeScaleCode = timeScaleCode;
            this.stockCode = stockCode;
            this.frDate = frDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetData_TotalRowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetData_TotalRowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int GetData_TotalRowResult;
        
        public GetData_TotalRowResponse() {
        }
        
        public GetData_TotalRowResponse(int GetData_TotalRowResult) {
            this.GetData_TotalRowResult = GetData_TotalRowResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransactionInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.TransactionInfo transInfo;
        
        public GetTransactionInfoRequest() {
        }
        
        public GetTransactionInfoRequest(OpenXMLDemo.StockService.TransactionInfo transInfo) {
            this.transInfo = transInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransactionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetTransactionInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.TransactionInfo transInfo;
        
        public GetTransactionInfoResponse() {
        }
        
        public GetTransactionInfoResponse(bool GetTransactionInfoResult, OpenXMLDemo.StockService.TransactionInfo transInfo) {
            this.GetTransactionInfoResult = GetTransactionInfoResult;
            this.transInfo = transInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesssage_ByDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesssage_ByDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        public GetMesssage_ByDateRequest() {
        }
        
        public GetMesssage_ByDateRequest(System.DateTime frDate, System.DateTime toDate) {
            this.frDate = frDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesssage_ByDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesssage_ByDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.messagesDataTable GetMesssage_ByDateResult;
        
        public GetMesssage_ByDateResponse() {
        }
        
        public GetMesssage_ByDateResponse(baseDS.messagesDataTable GetMesssage_ByDateResult) {
            this.GetMesssage_ByDateResult = GetMesssage_ByDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesssage_BySql", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesssage_BySqlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sqlCmd2;
        
        public GetMesssage_BySqlRequest() {
        }
        
        public GetMesssage_BySqlRequest(string sqlCmd2) {
            this.sqlCmd2 = sqlCmd2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMesssage_BySqlResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMesssage_BySqlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.messagesDataTable GetMesssage_BySqlResult;
        
        public GetMesssage_BySqlResponse() {
        }
        
        public GetMesssage_BySqlResponse(baseDS.messagesDataTable GetMesssage_BySqlResult) {
            this.GetMesssage_BySqlResult = GetMesssage_BySqlResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadAnalysisData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadAnalysisDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.DataParams dataParam;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool forceReadNew;
        
        public LoadAnalysisDataRequest() {
        }
        
        public LoadAnalysisDataRequest(string code, OpenXMLDemo.StockService.DataParams dataParam, bool forceReadNew) {
            this.code = code;
            this.dataParam = dataParam;
            this.forceReadNew = forceReadNew;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadAnalysisDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadAnalysisDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LoadAnalysisDataResult;
        
        public LoadAnalysisDataResponse() {
        }
        
        public LoadAnalysisDataResponse(string LoadAnalysisDataResult) {
            this.LoadAnalysisDataResult = LoadAnalysisDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data_ByKey", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_Data_ByKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dataKey;
        
        public GetAnalysis_Data_ByKeyRequest() {
        }
        
        public GetAnalysis_Data_ByKeyRequest(string dataKey) {
            this.dataKey = dataKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data_ByKeyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_Data_ByKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable GetAnalysis_Data_ByKeyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int firstData;
        
        public GetAnalysis_Data_ByKeyResponse() {
        }
        
        public GetAnalysis_Data_ByKeyResponse(baseDS.priceDataDataTable GetAnalysis_Data_ByKeyResult, int firstData) {
            this.GetAnalysis_Data_ByKeyResult = GetAnalysis_Data_ByKeyResult;
            this.firstData = firstData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_DataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.DataParams dataParam;
        
        public GetAnalysis_DataRequest() {
        }
        
        public GetAnalysis_DataRequest(string stockCode, OpenXMLDemo.StockService.DataParams dataParam) {
            this.stockCode = stockCode;
            this.dataParam = dataParam;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_DataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_DataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable GetAnalysis_DataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int firstData;
        
        public GetAnalysis_DataResponse() {
        }
        
        public GetAnalysis_DataResponse(baseDS.priceDataDataTable GetAnalysis_DataResult, int firstData) {
            this.GetAnalysis_DataResult = GetAnalysis_DataResult;
            this.firstData = firstData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIndicatorData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetIndicatorDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.DataParams dataParam;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string metaName;
        
        public GetIndicatorDataRequest() {
        }
        
        public GetIndicatorDataRequest(string code, OpenXMLDemo.StockService.DataParams dataParam, string metaName) {
            this.code = code;
            this.dataParam = dataParam;
            this.metaName = metaName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIndicatorDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetIndicatorDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/commonClass")]
        public DataValues[] GetIndicatorDataResult;
        
        public GetIndicatorDataResponse() {
        }
        
        public GetIndicatorDataResponse(DataValues[] GetIndicatorDataResult) {
            this.GetIndicatorDataResult = GetIndicatorDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Estimate_Matrix_Profit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Estimate_Matrix_ProfitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesTimeRanges timeRange;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeScaleCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] stockCodeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] strategyList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.EstimateOptions option;
        
        public Estimate_Matrix_ProfitRequest() {
        }
        
        public Estimate_Matrix_ProfitRequest(OpenXMLDemo.StockService.AppTypesTimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, OpenXMLDemo.StockService.EstimateOptions option) {
            this.timeRange = timeRange;
            this.timeScaleCode = timeScaleCode;
            this.stockCodeList = stockCodeList;
            this.strategyList = strategyList;
            this.option = option;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Estimate_Matrix_ProfitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Estimate_Matrix_ProfitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdecimal", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public decimal[][] Estimate_Matrix_ProfitResult;
        
        public Estimate_Matrix_ProfitResponse() {
        }
        
        public Estimate_Matrix_ProfitResponse(decimal[][] Estimate_Matrix_ProfitResult) {
            this.Estimate_Matrix_ProfitResult = Estimate_Matrix_ProfitResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Estimate_Matrix_LastBizWeight", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Estimate_Matrix_LastBizWeightRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OpenXMLDemo.StockService.DataParams dataParams;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] stockCodeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] strategyList;
        
        public Estimate_Matrix_LastBizWeightRequest() {
        }
        
        public Estimate_Matrix_LastBizWeightRequest(OpenXMLDemo.StockService.DataParams dataParams, string[] stockCodeList, string[] strategyList) {
            this.dataParams = dataParams;
            this.stockCodeList = stockCodeList;
            this.strategyList = strategyList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Estimate_Matrix_LastBizWeightResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Estimate_Matrix_LastBizWeightResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfdouble", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false, NestingLevel=1)]
        public double[][] Estimate_Matrix_LastBizWeightResult;
        
        public Estimate_Matrix_LastBizWeightResponse() {
        }
        
        public Estimate_Matrix_LastBizWeightResponse(double[][] Estimate_Matrix_LastBizWeightResult) {
            this.Estimate_Matrix_LastBizWeightResult = Estimate_Matrix_LastBizWeightResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSyslog_ByDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSyslog_ByDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.DateTime frDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime toDate;
        
        public GetSyslog_ByDateRequest() {
        }
        
        public GetSyslog_ByDateRequest(System.DateTime frDate, System.DateTime toDate) {
            this.frDate = frDate;
            this.toDate = toDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSyslog_ByDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSyslog_ByDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysLogDataTable GetSyslog_ByDateResult;
        
        public GetSyslog_ByDateResponse() {
        }
        
        public GetSyslog_ByDateResponse(baseDS.sysLogDataTable GetSyslog_ByDateResult) {
            this.GetSyslog_ByDateResult = GetSyslog_ByDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSyslog_BySQL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSyslog_BySQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sql;
        
        public GetSyslog_BySQLRequest() {
        }
        
        public GetSyslog_BySQLRequest(string sql) {
            this.sql = sql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSyslog_BySQLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSyslog_BySQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysLogDataTable GetSyslog_BySQLResult;
        
        public GetSyslog_BySQLResponse() {
        }
        
        public GetSyslog_BySQLResponse(baseDS.sysLogDataTable GetSyslog_BySQLResult) {
            this.GetSyslog_BySQLResult = GetSyslog_BySQLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockFull", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockFullRequest {
        
        public GetStockFullRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockFullResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockFullResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockCodeDataTable GetStockFullResult;
        
        public GetStockFullResponse() {
        }
        
        public GetStockFullResponse(baseDS.stockCodeDataTable GetStockFullResult) {
            this.GetStockFullResult = GetStockFullResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockList_ByWatchList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockList_ByWatchListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] watchList;
        
        public GetStockList_ByWatchListRequest() {
        }
        
        public GetStockList_ByWatchListRequest(string[] watchList) {
            this.watchList = watchList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockList_ByWatchListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockList_ByWatchListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetStockList_ByWatchListResult;
        
        public GetStockList_ByWatchListResponse() {
        }
        
        public GetStockList_ByWatchListResponse(string[] GetStockList_ByWatchListResult) {
            this.GetStockList_ByWatchListResult = GetStockList_ByWatchListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockList_ByBizSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockList_ByBizSectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] sectors;
        
        public GetStockList_ByBizSectorRequest() {
        }
        
        public GetStockList_ByBizSectorRequest(string[] sectors) {
            this.sectors = sectors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockList_ByBizSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockList_ByBizSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetStockList_ByBizSectorResult;
        
        public GetStockList_ByBizSectorResponse() {
        }
        
        public GetStockList_ByBizSectorResponse(string[] GetStockList_ByBizSectorResult) {
            this.GetStockList_ByBizSectorResult = GetStockList_ByBizSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockExchange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockExchangeRequest {
        
        public GetStockExchangeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockExchangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockExchangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockExchangeDataTable GetStockExchangeResult;
        
        public GetStockExchangeResponse() {
        }
        
        public GetStockExchangeResponse(baseDS.stockExchangeDataTable GetStockExchangeResult) {
            this.GetStockExchangeResult = GetStockExchangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExchangeDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetExchangeDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string marketCode;
        
        public GetExchangeDetailRequest() {
        }
        
        public GetExchangeDetailRequest(string marketCode) {
            this.marketCode = marketCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExchangeDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetExchangeDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.exchangeDetailDataTable GetExchangeDetailResult;
        
        public GetExchangeDetailResponse() {
        }
        
        public GetExchangeDetailResponse(baseDS.exchangeDetailDataTable GetExchangeDetailResult) {
            this.GetExchangeDetailResult = GetExchangeDetailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEmployeeRange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEmployeeRangeRequest {
        
        public GetEmployeeRangeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEmployeeRangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEmployeeRangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.employeeRangeDataTable GetEmployeeRangeResult;
        
        public GetEmployeeRangeResponse() {
        }
        
        public GetEmployeeRangeResponse(baseDS.employeeRangeDataTable GetEmployeeRangeResult) {
            this.GetEmployeeRangeResult = GetEmployeeRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizIndustry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizIndustryRequest {
        
        public GetBizIndustryRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizIndustryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizIndustryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizIndustryDataTable GetBizIndustryResult;
        
        public GetBizIndustryResponse() {
        }
        
        public GetBizIndustryResponse(baseDS.bizIndustryDataTable GetBizIndustryResult) {
            this.GetBizIndustryResult = GetBizIndustryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSuperSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSuperSectorRequest {
        
        public GetBizSuperSectorRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSuperSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSuperSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSuperSectorDataTable GetBizSuperSectorResult;
        
        public GetBizSuperSectorResponse() {
        }
        
        public GetBizSuperSectorResponse(baseDS.bizSuperSectorDataTable GetBizSuperSectorResult) {
            this.GetBizSuperSectorResult = GetBizSuperSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSectorRequest {
        
        public GetBizSectorRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSectorDataTable GetBizSectorResult;
        
        public GetBizSectorResponse() {
        }
        
        public GetBizSectorResponse(baseDS.bizSectorDataTable GetBizSectorResult) {
            this.GetBizSectorResult = GetBizSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorRequest {
        
        public GetBizSubSectorRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSectorResult;
        
        public GetBizSubSectorResponse() {
        }
        
        public GetBizSubSectorResponse(baseDS.bizSubSectorDataTable GetBizSubSectorResult) {
            this.GetBizSubSectorResult = GetBizSubSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorByIndustry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorByIndustryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string industryCode;
        
        public GetBizSubSectorByIndustryRequest() {
        }
        
        public GetBizSubSectorByIndustryRequest(string industryCode) {
            this.industryCode = industryCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorByIndustryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorByIndustryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSectorByIndustryResult;
        
        public GetBizSubSectorByIndustryResponse() {
        }
        
        public GetBizSubSectorByIndustryResponse(baseDS.bizSubSectorDataTable GetBizSubSectorByIndustryResult) {
            this.GetBizSubSectorByIndustryResult = GetBizSubSectorByIndustryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorBySuperSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorBySuperSectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string superSectorCode;
        
        public GetBizSubSectorBySuperSectorRequest() {
        }
        
        public GetBizSubSectorBySuperSectorRequest(string superSectorCode) {
            this.superSectorCode = superSectorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorBySuperSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorBySuperSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSectorResult;
        
        public GetBizSubSectorBySuperSectorResponse() {
        }
        
        public GetBizSubSectorBySuperSectorResponse(baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSectorResult) {
            this.GetBizSubSectorBySuperSectorResult = GetBizSubSectorBySuperSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorBySector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorBySectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectorCode;
        
        public GetBizSubSectorBySectorRequest() {
        }
        
        public GetBizSubSectorBySectorRequest(string sectorCode) {
            this.sectorCode = sectorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSectorBySectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSectorBySectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSectorBySectorResult;
        
        public GetBizSubSectorBySectorResponse() {
        }
        
        public GetBizSubSectorBySectorResponse(baseDS.bizSubSectorDataTable GetBizSubSectorBySectorResult) {
            this.GetBizSubSectorBySectorResult = GetBizSubSectorBySectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFeedbackCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFeedbackCatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cultureCode;
        
        public GetFeedbackCatRequest() {
        }
        
        public GetFeedbackCatRequest(string cultureCode) {
            this.cultureCode = cultureCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFeedbackCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFeedbackCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.feedbackCatDataTable GetFeedbackCatResult;
        
        public GetFeedbackCatResponse() {
        }
        
        public GetFeedbackCatResponse(baseDS.feedbackCatDataTable GetFeedbackCatResult) {
            this.GetFeedbackCatResult = GetFeedbackCatResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCountryRequest {
        
        public GetCountryRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCountryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.countryDataTable GetCountryResult;
        
        public GetCountryResponse() {
        }
        
        public GetCountryResponse(baseDS.countryDataTable GetCountryResult) {
            this.GetCountryResult = GetCountryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrency", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCurrencyRequest {
        
        public GetCurrencyRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCurrencyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.currencyDataTable GetCurrencyResult;
        
        public GetCurrencyResponse() {
        }
        
        public GetCurrencyResponse(baseDS.currencyDataTable GetCurrencyResult) {
            this.GetCurrencyResult = GetCurrencyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestorCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestorCatRequest {
        
        public GetInvestorCatRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestorCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestorCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorCatDataTable GetInvestorCatResult;
        
        public GetInvestorCatResponse() {
        }
        
        public GetInvestorCatResponse(baseDS.investorCatDataTable GetInvestorCatResult) {
            this.GetInvestorCatResult = GetInvestorCatResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSysCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSysCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string catCode;
        
        public GetSysCodeRequest() {
        }
        
        public GetSysCodeRequest(string catCode) {
            this.catCode = catCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSysCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSysCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeDataTable GetSysCodeResult;
        
        public GetSysCodeResponse() {
        }
        
        public GetSysCodeResponse(baseDS.sysCodeDataTable GetSysCodeResult) {
            this.GetSysCodeResult = GetSysCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSysCodeCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSysCodeCatRequest {
        
        public GetSysCodeCatRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSysCodeCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSysCodeCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeCatDataTable GetSysCodeCatResult;
        
        public GetSysCodeCatResponse() {
        }
        
        public GetSysCodeCatResponse(baseDS.sysCodeCatDataTable GetSysCodeCatResult) {
            this.GetSysCodeCatResult = GetSysCodeCatResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string account;
        
        public GetInvestor_ByAccountRequest() {
        }
        
        public GetInvestor_ByAccountRequest(string account) {
            this.account = account;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable GetInvestor_ByAccountResult;
        
        public GetInvestor_ByAccountResponse() {
        }
        
        public GetInvestor_ByAccountResponse(baseDS.investorDataTable GetInvestor_ByAccountResult) {
            this.GetInvestor_ByAccountResult = GetInvestor_ByAccountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public GetInvestor_ByCodeRequest() {
        }
        
        public GetInvestor_ByCodeRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable GetInvestor_ByCodeResult;
        
        public GetInvestor_ByCodeResponse() {
        }
        
        public GetInvestor_ByCodeResponse(baseDS.investorDataTable GetInvestor_ByCodeResult) {
            this.GetInvestor_ByCodeResult = GetInvestor_ByCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByEmail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByEmailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email;
        
        public GetInvestor_ByEmailRequest() {
        }
        
        public GetInvestor_ByEmailRequest(string email) {
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_ByEmailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_ByEmailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable GetInvestor_ByEmailResult;
        
        public GetInvestor_ByEmailResponse() {
        }
        
        public GetInvestor_ByEmailResponse(baseDS.investorDataTable GetInvestor_ByEmailResult) {
            this.GetInvestor_ByEmailResult = GetInvestor_ByEmailResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_BySQL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_BySQLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sql;
        
        public GetInvestor_BySQLRequest() {
        }
        
        public GetInvestor_BySQLRequest(string sql) {
            this.sql = sql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestor_BySQLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestor_BySQLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable GetInvestor_BySQLResult;
        
        public GetInvestor_BySQLResponse() {
        }
        
        public GetInvestor_BySQLResponse(baseDS.investorDataTable GetInvestor_BySQLResult) {
            this.GetInvestor_BySQLResult = GetInvestor_BySQLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStock_InPortfolio", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStock_InPortfolioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] portfolios;
        
        public GetStock_InPortfolioRequest() {
        }
        
        public GetStock_InPortfolioRequest(string[] portfolios) {
            this.portfolios = portfolios;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStock_InPortfolioResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStock_InPortfolioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.stockCodeDataTable GetStock_InPortfolioResult;
        
        public GetStock_InPortfolioResponse() {
        }
        
        public GetStock_InPortfolioResponse(tmpDS.stockCodeDataTable GetStock_InPortfolioResult) {
            this.GetStock_InPortfolioResult = GetStock_InPortfolioResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStock_ByBizSector", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStock_ByBizSectorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] bizSector;
        
        public GetStock_ByBizSectorRequest() {
        }
        
        public GetStock_ByBizSectorRequest(string[] bizSector) {
            this.bizSector = bizSector;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStock_ByBizSectorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStock_ByBizSectorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.stockCodeDataTable GetStock_ByBizSectorResult;
        
        public GetStock_ByBizSectorResponse() {
        }
        
        public GetStock_ByBizSectorResponse(tmpDS.stockCodeDataTable GetStock_ByBizSectorResult) {
            this.GetStock_ByBizSectorResult = GetStock_ByBizSectorResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_ByIndustry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_ByIndustryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public GetBizSubSector_ByIndustryRequest() {
        }
        
        public GetBizSubSector_ByIndustryRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBizSubSector_ByIndustryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBizSubSector_ByIndustryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustryResult;
        
        public GetBizSubSector_ByIndustryResponse() {
        }
        
        public GetBizSubSector_ByIndustryResponse(baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustryResult) {
            this.GetBizSubSector_ByIndustryResult = GetBizSubSector_ByIndustryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCache", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCacheRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cacheName;
        
        public DeleteCacheRequest() {
        }
        
        public DeleteCacheRequest(string cacheName) {
            this.cacheName = cacheName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCacheResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCacheResponse {
        
        public DeleteCacheResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.messagesDataTable messageTbl;
        
        public UpdateMessageRequest() {
        }
        
        public UpdateMessageRequest(baseDS.messagesDataTable messageTbl) {
            this.messageTbl = messageTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMessageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateMessageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.messagesDataTable messageTbl;
        
        public UpdateMessageResponse() {
        }
        
        public UpdateMessageResponse(bool UpdateMessageResult, baseDS.messagesDataTable messageTbl) {
            this.UpdateMessageResult = UpdateMessageResult;
            this.messageTbl = messageTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePriceData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePriceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable priceDataTbl;
        
        public UpdatePriceDataRequest() {
        }
        
        public UpdatePriceDataRequest(baseDS.priceDataDataTable priceDataTbl) {
            this.priceDataTbl = priceDataTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePriceDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePriceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePriceDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.priceDataDataTable priceDataTbl;
        
        public UpdatePriceDataResponse() {
        }
        
        public UpdatePriceDataResponse(bool UpdatePriceDataResult, baseDS.priceDataDataTable priceDataTbl) {
            this.UpdatePriceDataResult = UpdatePriceDataResult;
            this.priceDataTbl = priceDataTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeCatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeCatDataTable sysCodeCatTbl;
        
        public UpdateSysCodeCatRequest() {
        }
        
        public UpdateSysCodeCatRequest(baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            this.sysCodeCatTbl = sysCodeCatTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysCodeCatResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeCatDataTable sysCodeCatTbl;
        
        public UpdateSysCodeCatResponse() {
        }
        
        public UpdateSysCodeCatResponse(bool UpdateSysCodeCatResult, baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            this.UpdateSysCodeCatResult = UpdateSysCodeCatResult;
            this.sysCodeCatTbl = sysCodeCatTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeDataTable sysCodeTbl;
        
        public UpdateSysCodeRequest() {
        }
        
        public UpdateSysCodeRequest(baseDS.sysCodeDataTable sysCodeTbl) {
            this.sysCodeTbl = sysCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysCodeDataTable sysCodeTbl;
        
        public UpdateSysCodeResponse() {
        }
        
        public UpdateSysCodeResponse(bool UpdateSysCodeResult, baseDS.sysCodeDataTable sysCodeTbl) {
            this.UpdateSysCodeResult = UpdateSysCodeResult;
            this.sysCodeTbl = sysCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockCodeDataTable stockCodeTbl;
        
        public UpdateStockRequest() {
        }
        
        public UpdateStockRequest(baseDS.stockCodeDataTable stockCodeTbl) {
            this.stockCodeTbl = stockCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateStockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockCodeDataTable stockCodeTbl;
        
        public UpdateStockResponse() {
        }
        
        public UpdateStockResponse(bool UpdateStockResult, baseDS.stockCodeDataTable stockCodeTbl) {
            this.UpdateStockResult = UpdateStockResult;
            this.stockCodeTbl = stockCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable investorTbl;
        
        public UpdateInvestorRequest() {
        }
        
        public UpdateInvestorRequest(baseDS.investorDataTable investorTbl) {
            this.investorTbl = investorTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateInvestorResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorDataTable investorTbl;
        
        public UpdateInvestorResponse() {
        }
        
        public UpdateInvestorResponse(bool UpdateInvestorResult, baseDS.investorDataTable investorTbl) {
            this.UpdateInvestorResult = UpdateInvestorResult;
            this.investorTbl = investorTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolio", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable portfolioTbl;
        
        public UpdatePortfolioRequest() {
        }
        
        public UpdatePortfolioRequest(baseDS.portfolioDataTable portfolioTbl) {
            this.portfolioTbl = portfolioTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePortfolioResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDataTable portfolioTbl;
        
        public UpdatePortfolioResponse() {
        }
        
        public UpdatePortfolioResponse(bool UpdatePortfolioResult, baseDS.portfolioDataTable portfolioTbl) {
            this.UpdatePortfolioResult = UpdatePortfolioResult;
            this.portfolioTbl = portfolioTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDetailDataTable portfolioDetailTbl;
        
        public UpdatePortfolioDetailRequest() {
        }
        
        public UpdatePortfolioDetailRequest(baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            this.portfolioDetailTbl = portfolioDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePortfolioDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.portfolioDetailDataTable portfolioDetailTbl;
        
        public UpdatePortfolioDetailResponse() {
        }
        
        public UpdatePortfolioDetailResponse(bool UpdatePortfolioDetailResult, baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            this.UpdatePortfolioDetailResult = UpdatePortfolioDetailResult;
            this.portfolioDetailTbl = portfolioDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockExchange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockExchangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockExchangeDataTable stockExchangeTbl;
        
        public UpdateStockExchangeRequest() {
        }
        
        public UpdateStockExchangeRequest(baseDS.stockExchangeDataTable stockExchangeTbl) {
            this.stockExchangeTbl = stockExchangeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockExchangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockExchangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateStockExchangeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.stockExchangeDataTable stockExchangeTbl;
        
        public UpdateStockExchangeResponse() {
        }
        
        public UpdateStockExchangeResponse(bool UpdateStockExchangeResult, baseDS.stockExchangeDataTable stockExchangeTbl) {
            this.UpdateStockExchangeResult = UpdateStockExchangeResult;
            this.stockExchangeTbl = stockExchangeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExchangeDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateExchangeDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.exchangeDetailDataTable exchangeDetailTbl;
        
        public UpdateExchangeDetailRequest() {
        }
        
        public UpdateExchangeDetailRequest(baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            this.exchangeDetailTbl = exchangeDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExchangeDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateExchangeDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateExchangeDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.exchangeDetailDataTable exchangeDetailTbl;
        
        public UpdateExchangeDetailResponse() {
        }
        
        public UpdateExchangeDetailResponse(bool UpdateExchangeDetailResult, baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            this.UpdateExchangeDetailResult = UpdateExchangeDetailResult;
            this.exchangeDetailTbl = exchangeDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactions", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.transactionsDataTable transactionsTbl;
        
        public UpdateTransactionsRequest() {
        }
        
        public UpdateTransactionsRequest(baseDS.transactionsDataTable transactionsTbl) {
            this.transactionsTbl = transactionsTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactionsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateTransactionsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.transactionsDataTable transactionsTbl;
        
        public UpdateTransactionsResponse() {
        }
        
        public UpdateTransactionsResponse(bool UpdateTransactionsResult, baseDS.transactionsDataTable transactionsTbl) {
            this.UpdateTransactionsResult = UpdateTransactionsResult;
            this.transactionsTbl = transactionsTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorStockDataTable investorStockTbl;
        
        public UpdateInvestorStockRequest() {
        }
        
        public UpdateInvestorStockRequest(baseDS.investorStockDataTable investorStockTbl) {
            this.investorStockTbl = investorStockTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateInvestorStockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.investorStockDataTable investorStockTbl;
        
        public UpdateInvestorStockResponse() {
        }
        
        public UpdateInvestorStockResponse(bool UpdateInvestorStockResult, baseDS.investorStockDataTable investorStockTbl) {
            this.UpdateInvestorStockResult = UpdateInvestorStockResult;
            this.investorStockTbl = investorStockTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeAlert", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeAlertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.tradeAlertDataTable tradeAlertTbl;
        
        public UpdateTradeAlertRequest() {
        }
        
        public UpdateTradeAlertRequest(baseDS.tradeAlertDataTable tradeAlertTbl) {
            this.tradeAlertTbl = tradeAlertTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeAlertResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeAlertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateTradeAlertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.tradeAlertDataTable tradeAlertTbl;
        
        public UpdateTradeAlertResponse() {
        }
        
        public UpdateTradeAlertResponse(bool UpdateTradeAlertResult, baseDS.tradeAlertDataTable tradeAlertTbl) {
            this.UpdateTradeAlertResult = UpdateTradeAlertResult;
            this.tradeAlertTbl = tradeAlertTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysAutoKeyPending", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysAutoKeyPendingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl;
        
        public UpdateSysAutoKeyPendingRequest() {
        }
        
        public UpdateSysAutoKeyPendingRequest(baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            this.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysAutoKeyPendingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysAutoKeyPendingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysAutoKeyPendingResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl;
        
        public UpdateSysAutoKeyPendingResponse() {
        }
        
        public UpdateSysAutoKeyPendingResponse(bool UpdateSysAutoKeyPendingResult, baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            this.UpdateSysAutoKeyPendingResult = UpdateSysAutoKeyPendingResult;
            this.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stockCode;
        
        public DeleteStockRequest() {
        }
        
        public DeleteStockRequest(string stockCode) {
            this.stockCode = stockCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteStockResponse {
        
        public DeleteStockResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteStockExchange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteStockExchangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public DeleteStockExchangeRequest() {
        }
        
        public DeleteStockExchangeRequest(string code) {
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteStockExchangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteStockExchangeResponse {
        
        public DeleteStockExchangeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInvestor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInvestorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string investorCode;
        
        public DeleteInvestorRequest() {
        }
        
        public DeleteInvestorRequest(string investorCode) {
            this.investorCode = investorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteInvestorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteInvestorResponse {
        
        public DeleteInvestorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePortfolio", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePortfolioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string portfolioCode;
        
        public DeletePortfolioRequest() {
        }
        
        public DeletePortfolioRequest(string portfolioCode) {
            this.portfolioCode = portfolioCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePortfolioResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePortfolioResponse {
        
        public DeletePortfolioResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSysCodeCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSysCodeCatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string catCode;
        
        public DeleteSysCodeCatRequest() {
        }
        
        public DeleteSysCodeCatRequest(string catCode) {
            this.catCode = catCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSysCodeCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSysCodeCatResponse {
        
        public DeleteSysCodeCatResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSysCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSysCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string catCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code;
        
        public DeleteSysCodeRequest() {
        }
        
        public DeleteSysCodeRequest(string catCode, string code) {
            this.catCode = catCode;
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSysCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSysCodeResponse {
        
        public DeleteSysCodeResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AppTypes.CommonStatus", Namespace="http://schemas.datacontract.org/2004/07/commonTypes")]
    public enum AppTypesCommonStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Enable,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Close,
        
        /// <remarks/>
        Ignore,
        
        /// <remarks/>
        All,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockByStatus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockByStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OpenXMLDemo.StockService.AppTypesCommonStatus status;
        
        public GetStockByStatusRequest() {
        }
        
        public GetStockByStatusRequest(OpenXMLDemo.StockService.AppTypesCommonStatus status) {
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockByStatusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockByStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.stockCodeDataTable GetStockByStatusResult;
        
        public GetStockByStatusResponse() {
        }
        
        public GetStockByStatusResponse(tmpDS.stockCodeDataTable GetStockByStatusResult) {
            this.GetStockByStatusResult = GetStockByStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestorShortList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestorShortListRequest {
        
        public GetInvestorShortListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvestorShortListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInvestorShortListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public tmpDS.investorDataTable GetInvestorShortListResult;
        
        public GetInvestorShortListResponse() {
        }
        
        public GetInvestorShortListResponse(tmpDS.investorDataTable GetInvestorShortListResult) {
            this.GetInvestorShortListResult = GetInvestorShortListResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStockServiceChannel : OpenXMLDemo.StockService.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<OpenXMLDemo.StockService.IStockService>, OpenXMLDemo.StockService.IStockService {
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.AnalysisResponse OpenXMLDemo.StockService.IStockService.Analysis(OpenXMLDemo.StockService.AnalysisRequest request) {
            return base.Channel.Analysis(request);
        }
        
        public TradePointInfo[] Analysis(string dataKey, string strategyCode) {
            OpenXMLDemo.StockService.AnalysisRequest inValue = new OpenXMLDemo.StockService.AnalysisRequest();
            inValue.dataKey = dataKey;
            inValue.strategyCode = strategyCode;
            OpenXMLDemo.StockService.AnalysisResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).Analysis(inValue);
            return retVal.AnalysisResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.MakeTransactionResponse OpenXMLDemo.StockService.IStockService.MakeTransaction(OpenXMLDemo.StockService.MakeTransactionRequest request) {
            return base.Channel.MakeTransaction(request);
        }
        
        public baseDS.transactionsDataTable MakeTransaction(OpenXMLDemo.StockService.AppTypesTradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc, out string errorText) {
            OpenXMLDemo.StockService.MakeTransactionRequest inValue = new OpenXMLDemo.StockService.MakeTransactionRequest();
            inValue.type = type;
            inValue.stockCode = stockCode;
            inValue.portfolioCode = portfolioCode;
            inValue.qty = qty;
            inValue.feePerc = feePerc;
            OpenXMLDemo.StockService.MakeTransactionResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).MakeTransaction(inValue);
            errorText = retVal.errorText;
            return retVal.MakeTransactionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTradePointWithEstimationDetailResponse OpenXMLDemo.StockService.IStockService.GetTradePointWithEstimationDetail(OpenXMLDemo.StockService.GetTradePointWithEstimationDetailRequest request) {
            return base.Channel.GetTradePointWithEstimationDetail(request);
        }
        
        public TradePointInfo[] GetTradePointWithEstimationDetail(OpenXMLDemo.StockService.DataParams dataParam, string stockCode, string strategyCode, OpenXMLDemo.StockService.EstimateOptions options, out tmpDS.tradeEstimateDataTable toTbl) {
            OpenXMLDemo.StockService.GetTradePointWithEstimationDetailRequest inValue = new OpenXMLDemo.StockService.GetTradePointWithEstimationDetailRequest();
            inValue.dataParam = dataParam;
            inValue.stockCode = stockCode;
            inValue.strategyCode = strategyCode;
            inValue.options = options;
            OpenXMLDemo.StockService.GetTradePointWithEstimationDetailResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTradePointWithEstimationDetail(inValue);
            toTbl = retVal.toTbl;
            return retVal.GetTradePointWithEstimationDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenResponse OpenXMLDemo.StockService.IStockService.DiagnosePrice_CloseAndNextOpen(OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenRequest request) {
            return base.Channel.DiagnosePrice_CloseAndNextOpen(request);
        }
        
        public tmpDS.priceDiagnoseDataTable DiagnosePrice_CloseAndNextOpen(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision) {
            OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenRequest inValue = new OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            inValue.timeScaleCode = timeScaleCode;
            inValue.exchangeCode = exchangeCode;
            inValue.code = code;
            inValue.variantPerc = variantPerc;
            inValue.variance = variance;
            inValue.precision = precision;
            OpenXMLDemo.StockService.DiagnosePrice_CloseAndNextOpenResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DiagnosePrice_CloseAndNextOpen(inValue);
            return retVal.DiagnosePrice_CloseAndNextOpenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.ReAggregatePriceDataResponse OpenXMLDemo.StockService.IStockService.ReAggregatePriceData(OpenXMLDemo.StockService.ReAggregatePriceDataRequest request) {
            return base.Channel.ReAggregatePriceData(request);
        }
        
        public void ReAggregatePriceData(string code) {
            OpenXMLDemo.StockService.ReAggregatePriceDataRequest inValue = new OpenXMLDemo.StockService.ReAggregatePriceDataRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.ReAggregatePriceDataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).ReAggregatePriceData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYResponse OpenXMLDemo.StockService.IStockService.GetXmlDoc2StringSTRATEGY(OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYRequest request) {
            return base.Channel.GetXmlDoc2StringSTRATEGY(request);
        }
        
        public string GetXmlDoc2StringSTRATEGY() {
            OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYRequest inValue = new OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYRequest();
            OpenXMLDemo.StockService.GetXmlDoc2StringSTRATEGYResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetXmlDoc2StringSTRATEGY(inValue);
            return retVal.GetXmlDoc2StringSTRATEGYResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORResponse OpenXMLDemo.StockService.IStockService.GetXmlDoc2StringINDICATOR(OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORRequest request) {
            return base.Channel.GetXmlDoc2StringINDICATOR(request);
        }
        
        public string GetXmlDoc2StringINDICATOR() {
            OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORRequest inValue = new OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORRequest();
            OpenXMLDemo.StockService.GetXmlDoc2StringINDICATORResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetXmlDoc2StringINDICATOR(inValue);
            return retVal.GetXmlDoc2StringINDICATORResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.Load_Global_SettingsResponse OpenXMLDemo.StockService.IStockService.Load_Global_Settings(OpenXMLDemo.StockService.Load_Global_SettingsRequest request) {
            return base.Channel.Load_Global_Settings(request);
        }
        
        public void Load_Global_Settings(ref OpenXMLDemo.StockService.GlobalSettings settings) {
            OpenXMLDemo.StockService.Load_Global_SettingsRequest inValue = new OpenXMLDemo.StockService.Load_Global_SettingsRequest();
            inValue.settings = settings;
            OpenXMLDemo.StockService.Load_Global_SettingsResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).Load_Global_Settings(inValue);
            settings = retVal.settings;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.Save_Global_SettingsResponse OpenXMLDemo.StockService.IStockService.Save_Global_Settings(OpenXMLDemo.StockService.Save_Global_SettingsRequest request) {
            return base.Channel.Save_Global_Settings(request);
        }
        
        public void Save_Global_Settings(OpenXMLDemo.StockService.GlobalSettings settings) {
            OpenXMLDemo.StockService.Save_Global_SettingsRequest inValue = new OpenXMLDemo.StockService.Save_Global_SettingsRequest();
            inValue.settings = settings;
            OpenXMLDemo.StockService.Save_Global_SettingsResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).Save_Global_Settings(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.WriteLogResponse OpenXMLDemo.StockService.IStockService.WriteLog(OpenXMLDemo.StockService.WriteLogRequest request) {
            return base.Channel.WriteLog(request);
        }
        
        public void WriteLog(byte logType, string investorCode, string desc, string source, string msg) {
            OpenXMLDemo.StockService.WriteLogRequest inValue = new OpenXMLDemo.StockService.WriteLogRequest();
            inValue.logType = logType;
            inValue.investorCode = investorCode;
            inValue.desc = desc;
            inValue.source = source;
            inValue.msg = msg;
            OpenXMLDemo.StockService.WriteLogResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).WriteLog(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.WriteExcptionLogResponse OpenXMLDemo.StockService.IStockService.WriteExcptionLog(OpenXMLDemo.StockService.WriteExcptionLogRequest request) {
            return base.Channel.WriteExcptionLog(request);
        }
        
        public void WriteExcptionLog(string investorCode, OpenXMLDemo.StockService.SysLogLogData logData) {
            OpenXMLDemo.StockService.WriteExcptionLogRequest inValue = new OpenXMLDemo.StockService.WriteExcptionLogRequest();
            inValue.investorCode = investorCode;
            inValue.logData = logData;
            OpenXMLDemo.StockService.WriteExcptionLogResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).WriteExcptionLog(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTopPriceVarrianceMarketResponse OpenXMLDemo.StockService.IStockService.GetTopPriceVarrianceMarket(OpenXMLDemo.StockService.GetTopPriceVarrianceMarketRequest request) {
            return base.Channel.GetTopPriceVarrianceMarket(request);
        }
        
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceMarket(System.DateTime beforeDate, string timeScaleCode, int topN) {
            OpenXMLDemo.StockService.GetTopPriceVarrianceMarketRequest inValue = new OpenXMLDemo.StockService.GetTopPriceVarrianceMarketRequest();
            inValue.beforeDate = beforeDate;
            inValue.timeScaleCode = timeScaleCode;
            inValue.topN = topN;
            OpenXMLDemo.StockService.GetTopPriceVarrianceMarketResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTopPriceVarrianceMarket(inValue);
            return retVal.GetTopPriceVarrianceMarketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTopPriceVarrianceUserResponse OpenXMLDemo.StockService.IStockService.GetTopPriceVarrianceUser(OpenXMLDemo.StockService.GetTopPriceVarrianceUserRequest request) {
            return base.Channel.GetTopPriceVarrianceUser(request);
        }
        
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceUser(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN) {
            OpenXMLDemo.StockService.GetTopPriceVarrianceUserRequest inValue = new OpenXMLDemo.StockService.GetTopPriceVarrianceUserRequest();
            inValue.beforeDate = beforeDate;
            inValue.timeScaleCode = timeScaleCode;
            inValue.userCode = userCode;
            inValue.topN = topN;
            OpenXMLDemo.StockService.GetTopPriceVarrianceUserResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTopPriceVarrianceUser(inValue);
            return retVal.GetTopPriceVarrianceUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserResponse OpenXMLDemo.StockService.IStockService.GetTopPriceVarrianceOfUser(OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserRequest request) {
            return base.Channel.GetTopPriceVarrianceOfUser(request);
        }
        
        public tmpDS.dataVarrianceDataTable GetTopPriceVarrianceOfUser(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN) {
            OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserRequest inValue = new OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            inValue.timeScaleCode = timeScaleCode;
            inValue.userCode = userCode;
            inValue.topN = topN;
            OpenXMLDemo.StockService.GetTopPriceVarrianceOfUserResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTopPriceVarrianceOfUser(inValue);
            return retVal.GetTopPriceVarrianceOfUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTopPriceVarrianceResponse OpenXMLDemo.StockService.IStockService.GetTopPriceVarriance(OpenXMLDemo.StockService.GetTopPriceVarrianceRequest request) {
            return base.Channel.GetTopPriceVarriance(request);
        }
        
        public tmpDS.dataVarrianceDataTable GetTopPriceVarriance(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN) {
            OpenXMLDemo.StockService.GetTopPriceVarrianceRequest inValue = new OpenXMLDemo.StockService.GetTopPriceVarrianceRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            inValue.timeScaleCode = timeScaleCode;
            inValue.topN = topN;
            OpenXMLDemo.StockService.GetTopPriceVarrianceResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTopPriceVarriance(inValue);
            return retVal.GetTopPriceVarrianceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetLastPriceResponse OpenXMLDemo.StockService.IStockService.GetLastPrice(OpenXMLDemo.StockService.GetLastPriceRequest request) {
            return base.Channel.GetLastPrice(request);
        }
        
        public baseDS.lastPriceDataDataTable GetLastPrice(OpenXMLDemo.StockService.AppTypesPriceDataType type) {
            OpenXMLDemo.StockService.GetLastPriceRequest inValue = new OpenXMLDemo.StockService.GetLastPriceRequest();
            inValue.type = type;
            OpenXMLDemo.StockService.GetLastPriceResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetLastPrice(inValue);
            return retVal.GetLastPriceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorResponse OpenXMLDemo.StockService.IStockService.GetBizSubSector_BySuperSector(OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorRequest request) {
            return base.Channel.GetBizSubSector_BySuperSector(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSector(string code) {
            OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorRequest inValue = new OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.GetBizSubSector_BySuperSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSector_BySuperSector(inValue);
            return retVal.GetBizSubSector_BySuperSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSector_BySectorResponse OpenXMLDemo.StockService.IStockService.GetBizSubSector_BySector(OpenXMLDemo.StockService.GetBizSubSector_BySectorRequest request) {
            return base.Channel.GetBizSubSector_BySector(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSector_BySector(string code) {
            OpenXMLDemo.StockService.GetBizSubSector_BySectorRequest inValue = new OpenXMLDemo.StockService.GetBizSubSector_BySectorRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.GetBizSubSector_BySectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSector_BySector(inValue);
            return retVal.GetBizSubSector_BySectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeResponse OpenXMLDemo.StockService.IStockService.GetPortfolio_ByInvestorAndType(OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeRequest request) {
            return base.Channel.GetPortfolio_ByInvestorAndType(request);
        }
        
        public baseDS.portfolioDataTable GetPortfolio_ByInvestorAndType(string investorCode, OpenXMLDemo.StockService.AppTypesPortfolioTypes type) {
            OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeRequest inValue = new OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeRequest();
            inValue.investorCode = investorCode;
            inValue.type = type;
            OpenXMLDemo.StockService.GetPortfolio_ByInvestorAndTypeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolio_ByInvestorAndType(inValue);
            return retVal.GetPortfolio_ByInvestorAndTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolio_ByTypeResponse OpenXMLDemo.StockService.IStockService.GetPortfolio_ByType(OpenXMLDemo.StockService.GetPortfolio_ByTypeRequest request) {
            return base.Channel.GetPortfolio_ByType(request);
        }
        
        public baseDS.portfolioDataTable GetPortfolio_ByType(OpenXMLDemo.StockService.AppTypesPortfolioTypes type) {
            OpenXMLDemo.StockService.GetPortfolio_ByTypeRequest inValue = new OpenXMLDemo.StockService.GetPortfolio_ByTypeRequest();
            inValue.type = type;
            OpenXMLDemo.StockService.GetPortfolio_ByTypeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolio_ByType(inValue);
            return retVal.GetPortfolio_ByTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolio_ByCodeResponse OpenXMLDemo.StockService.IStockService.GetPortfolio_ByCode(OpenXMLDemo.StockService.GetPortfolio_ByCodeRequest request) {
            return base.Channel.GetPortfolio_ByCode(request);
        }
        
        public baseDS.portfolioDataTable GetPortfolio_ByCode(string portfolioCode) {
            OpenXMLDemo.StockService.GetPortfolio_ByCodeRequest inValue = new OpenXMLDemo.StockService.GetPortfolio_ByCodeRequest();
            inValue.portfolioCode = portfolioCode;
            OpenXMLDemo.StockService.GetPortfolio_ByCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolio_ByCode(inValue);
            return retVal.GetPortfolio_ByCodeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolio_ByInvestorResponse OpenXMLDemo.StockService.IStockService.GetPortfolio_ByInvestor(OpenXMLDemo.StockService.GetPortfolio_ByInvestorRequest request) {
            return base.Channel.GetPortfolio_ByInvestor(request);
        }
        
        public baseDS.portfolioDataTable GetPortfolio_ByInvestor(string investorCode) {
            OpenXMLDemo.StockService.GetPortfolio_ByInvestorRequest inValue = new OpenXMLDemo.StockService.GetPortfolio_ByInvestorRequest();
            inValue.investorCode = investorCode;
            OpenXMLDemo.StockService.GetPortfolio_ByInvestorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolio_ByInvestor(inValue);
            return retVal.GetPortfolio_ByInvestorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTradeAlertResponse OpenXMLDemo.StockService.IStockService.GetTradeAlert(OpenXMLDemo.StockService.GetTradeAlertRequest request) {
            return base.Channel.GetTradeAlert(request);
        }
        
        public baseDS.tradeAlertDataTable GetTradeAlert(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask) {
            OpenXMLDemo.StockService.GetTradeAlertRequest inValue = new OpenXMLDemo.StockService.GetTradeAlertRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            inValue.investor = investor;
            inValue.statusMask = statusMask;
            OpenXMLDemo.StockService.GetTradeAlertResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTradeAlert(inValue);
            return retVal.GetTradeAlertResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTradeAlert_BySQLResponse OpenXMLDemo.StockService.IStockService.GetTradeAlert_BySQL(OpenXMLDemo.StockService.GetTradeAlert_BySQLRequest request) {
            return base.Channel.GetTradeAlert_BySQL(request);
        }
        
        public baseDS.tradeAlertDataTable GetTradeAlert_BySQL(string alertSql) {
            OpenXMLDemo.StockService.GetTradeAlert_BySQLRequest inValue = new OpenXMLDemo.StockService.GetTradeAlert_BySQLRequest();
            inValue.alertSql = alertSql;
            OpenXMLDemo.StockService.GetTradeAlert_BySQLResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTradeAlert_BySQL(inValue);
            return retVal.GetTradeAlert_BySQLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTransaction_BySQLResponse OpenXMLDemo.StockService.IStockService.GetTransaction_BySQL(OpenXMLDemo.StockService.GetTransaction_BySQLRequest request) {
            return base.Channel.GetTransaction_BySQL(request);
        }
        
        public baseDS.transactionsDataTable GetTransaction_BySQL(string transSql) {
            OpenXMLDemo.StockService.GetTransaction_BySQLRequest inValue = new OpenXMLDemo.StockService.GetTransaction_BySQLRequest();
            inValue.transSql = transSql;
            OpenXMLDemo.StockService.GetTransaction_BySQLResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTransaction_BySQL(inValue);
            return retVal.GetTransaction_BySQLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeResponse OpenXMLDemo.StockService.IStockService.GetPortfolioDetail_ByType(OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeRequest request) {
            return base.Channel.GetPortfolioDetail_ByType(request);
        }
        
        public baseDS.portfolioDetailDataTable GetPortfolioDetail_ByType(AppTypesPortfolioTypes[] types) {
            OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeRequest inValue = new OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeRequest();
            inValue.types = types;
            OpenXMLDemo.StockService.GetPortfolioDetail_ByTypeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolioDetail_ByType(inValue);
            return retVal.GetPortfolioDetail_ByTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeResponse OpenXMLDemo.StockService.IStockService.GetPortfolioDetail_ByCode(OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeRequest request) {
            return base.Channel.GetPortfolioDetail_ByCode(request);
        }
        
        public baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCode(string portfolioCode) {
            OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeRequest inValue = new OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeRequest();
            inValue.portfolioCode = portfolioCode;
            OpenXMLDemo.StockService.GetPortfolioDetail_ByCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPortfolioDetail_ByCode(inValue);
            return retVal.GetPortfolioDetail_ByCodeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorResponse OpenXMLDemo.StockService.IStockService.GetOwnedStockSum_ByInvestor(OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorRequest request) {
            return base.Channel.GetOwnedStockSum_ByInvestor(request);
        }
        
        public tmpDS.investorStockDataTable GetOwnedStockSum_ByInvestor(string investorCode) {
            OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorRequest inValue = new OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorRequest();
            inValue.investorCode = investorCode;
            OpenXMLDemo.StockService.GetOwnedStockSum_ByInvestorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetOwnedStockSum_ByInvestor(inValue);
            return retVal.GetOwnedStockSum_ByInvestorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioResponse OpenXMLDemo.StockService.IStockService.GetOwnedStock_ByPortfolio(OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioRequest request) {
            return base.Channel.GetOwnedStock_ByPortfolio(request);
        }
        
        public baseDS.investorStockDataTable GetOwnedStock_ByPortfolio(string portfolioCode) {
            OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioRequest inValue = new OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioRequest();
            inValue.portfolioCode = portfolioCode;
            OpenXMLDemo.StockService.GetOwnedStock_ByPortfolioResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetOwnedStock_ByPortfolio(inValue);
            return retVal.GetOwnedStock_ByPortfolioResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetLastPriceSumResponse OpenXMLDemo.StockService.IStockService.GetLastPriceSum(OpenXMLDemo.StockService.GetLastPriceSumRequest request) {
            return base.Channel.GetLastPriceSum(request);
        }
        
        public baseDS.lastPriceDataDataTable GetLastPriceSum(OpenXMLDemo.StockService.AppTypesPriceDataType type, string timeScaleCode) {
            OpenXMLDemo.StockService.GetLastPriceSumRequest inValue = new OpenXMLDemo.StockService.GetLastPriceSumRequest();
            inValue.type = type;
            inValue.timeScaleCode = timeScaleCode;
            OpenXMLDemo.StockService.GetLastPriceSumResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetLastPriceSum(inValue);
            return retVal.GetLastPriceSumResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetPriceDataResponse OpenXMLDemo.StockService.IStockService.GetPriceData(OpenXMLDemo.StockService.GetPriceDataRequest request) {
            return base.Channel.GetPriceData(request);
        }
        
        public baseDS.priceDataDataTable GetPriceData(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate) {
            OpenXMLDemo.StockService.GetPriceDataRequest inValue = new OpenXMLDemo.StockService.GetPriceDataRequest();
            inValue.stockCode = stockCode;
            inValue.timeScaleCode = timeScaleCode;
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            OpenXMLDemo.StockService.GetPriceDataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetPriceData(inValue);
            return retVal.GetPriceDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetLastAlertTimeResponse OpenXMLDemo.StockService.IStockService.GetLastAlertTime(OpenXMLDemo.StockService.GetLastAlertTimeRequest request) {
            return base.Channel.GetLastAlertTime(request);
        }
        
        public System.DateTime GetLastAlertTime(string investorCode) {
            OpenXMLDemo.StockService.GetLastAlertTimeRequest inValue = new OpenXMLDemo.StockService.GetLastAlertTimeRequest();
            inValue.investorCode = investorCode;
            OpenXMLDemo.StockService.GetLastAlertTimeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetLastAlertTime(inValue);
            return retVal.GetLastAlertTimeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateResponse OpenXMLDemo.StockService.IStockService.GetData_ByTimeScale_Code_FrDate(OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateRequest request) {
            return base.Channel.GetData_ByTimeScale_Code_FrDate(request);
        }
        
        public baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateRequest inValue = new OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateRequest();
            inValue.timeScaleCode = timeScaleCode;
            inValue.stockCode = stockCode;
            inValue.fromDate = fromDate;
            OpenXMLDemo.StockService.GetData_ByTimeScale_Code_FrDateResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetData_ByTimeScale_Code_FrDate(inValue);
            return retVal.GetData_ByTimeScale_Code_FrDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeResponse OpenXMLDemo.StockService.IStockService.GetData_ByTimeScale_Code_DateRange(OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeRequest request) {
            return base.Channel.GetData_ByTimeScale_Code_DateRange(request);
        }
        
        public baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeRequest inValue = new OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeRequest();
            inValue.timeScaleCode = timeScaleCode;
            inValue.stockCode = stockCode;
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            OpenXMLDemo.StockService.GetData_ByTimeScale_Code_DateRangeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetData_ByTimeScale_Code_DateRange(inValue);
            return retVal.GetData_ByTimeScale_Code_DateRangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetData_TotalRowResponse OpenXMLDemo.StockService.IStockService.GetData_TotalRow(OpenXMLDemo.StockService.GetData_TotalRowRequest request) {
            return base.Channel.GetData_TotalRow(request);
        }
        
        public int GetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            OpenXMLDemo.StockService.GetData_TotalRowRequest inValue = new OpenXMLDemo.StockService.GetData_TotalRowRequest();
            inValue.timeScaleCode = timeScaleCode;
            inValue.stockCode = stockCode;
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            OpenXMLDemo.StockService.GetData_TotalRowResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetData_TotalRow(inValue);
            return retVal.GetData_TotalRowResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetTransactionInfoResponse OpenXMLDemo.StockService.IStockService.GetTransactionInfo(OpenXMLDemo.StockService.GetTransactionInfoRequest request) {
            return base.Channel.GetTransactionInfo(request);
        }
        
        public bool GetTransactionInfo(ref OpenXMLDemo.StockService.TransactionInfo transInfo) {
            OpenXMLDemo.StockService.GetTransactionInfoRequest inValue = new OpenXMLDemo.StockService.GetTransactionInfoRequest();
            inValue.transInfo = transInfo;
            OpenXMLDemo.StockService.GetTransactionInfoResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetTransactionInfo(inValue);
            transInfo = retVal.transInfo;
            return retVal.GetTransactionInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetMesssage_ByDateResponse OpenXMLDemo.StockService.IStockService.GetMesssage_ByDate(OpenXMLDemo.StockService.GetMesssage_ByDateRequest request) {
            return base.Channel.GetMesssage_ByDate(request);
        }
        
        public baseDS.messagesDataTable GetMesssage_ByDate(System.DateTime frDate, System.DateTime toDate) {
            OpenXMLDemo.StockService.GetMesssage_ByDateRequest inValue = new OpenXMLDemo.StockService.GetMesssage_ByDateRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            OpenXMLDemo.StockService.GetMesssage_ByDateResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetMesssage_ByDate(inValue);
            return retVal.GetMesssage_ByDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetMesssage_BySqlResponse OpenXMLDemo.StockService.IStockService.GetMesssage_BySql(OpenXMLDemo.StockService.GetMesssage_BySqlRequest request) {
            return base.Channel.GetMesssage_BySql(request);
        }
        
        public baseDS.messagesDataTable GetMesssage_BySql(string sqlCmd2) {
            OpenXMLDemo.StockService.GetMesssage_BySqlRequest inValue = new OpenXMLDemo.StockService.GetMesssage_BySqlRequest();
            inValue.sqlCmd2 = sqlCmd2;
            OpenXMLDemo.StockService.GetMesssage_BySqlResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetMesssage_BySql(inValue);
            return retVal.GetMesssage_BySqlResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.LoadAnalysisDataResponse OpenXMLDemo.StockService.IStockService.LoadAnalysisData(OpenXMLDemo.StockService.LoadAnalysisDataRequest request) {
            return base.Channel.LoadAnalysisData(request);
        }
        
        public string LoadAnalysisData(string code, OpenXMLDemo.StockService.DataParams dataParam, bool forceReadNew) {
            OpenXMLDemo.StockService.LoadAnalysisDataRequest inValue = new OpenXMLDemo.StockService.LoadAnalysisDataRequest();
            inValue.code = code;
            inValue.dataParam = dataParam;
            inValue.forceReadNew = forceReadNew;
            OpenXMLDemo.StockService.LoadAnalysisDataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).LoadAnalysisData(inValue);
            return retVal.LoadAnalysisDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyResponse OpenXMLDemo.StockService.IStockService.GetAnalysis_Data_ByKey(OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyRequest request) {
            return base.Channel.GetAnalysis_Data_ByKey(request);
        }
        
        public baseDS.priceDataDataTable GetAnalysis_Data_ByKey(string dataKey, out int firstData) {
            OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyRequest inValue = new OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyRequest();
            inValue.dataKey = dataKey;
            OpenXMLDemo.StockService.GetAnalysis_Data_ByKeyResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetAnalysis_Data_ByKey(inValue);
            firstData = retVal.firstData;
            return retVal.GetAnalysis_Data_ByKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetAnalysis_DataResponse OpenXMLDemo.StockService.IStockService.GetAnalysis_Data(OpenXMLDemo.StockService.GetAnalysis_DataRequest request) {
            return base.Channel.GetAnalysis_Data(request);
        }
        
        public baseDS.priceDataDataTable GetAnalysis_Data(string stockCode, OpenXMLDemo.StockService.DataParams dataParam, out int firstData) {
            OpenXMLDemo.StockService.GetAnalysis_DataRequest inValue = new OpenXMLDemo.StockService.GetAnalysis_DataRequest();
            inValue.stockCode = stockCode;
            inValue.dataParam = dataParam;
            OpenXMLDemo.StockService.GetAnalysis_DataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetAnalysis_Data(inValue);
            firstData = retVal.firstData;
            return retVal.GetAnalysis_DataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetIndicatorDataResponse OpenXMLDemo.StockService.IStockService.GetIndicatorData(OpenXMLDemo.StockService.GetIndicatorDataRequest request) {
            return base.Channel.GetIndicatorData(request);
        }
        
        public DataValues[] GetIndicatorData(string code, OpenXMLDemo.StockService.DataParams dataParam, string metaName) {
            OpenXMLDemo.StockService.GetIndicatorDataRequest inValue = new OpenXMLDemo.StockService.GetIndicatorDataRequest();
            inValue.code = code;
            inValue.dataParam = dataParam;
            inValue.metaName = metaName;
            OpenXMLDemo.StockService.GetIndicatorDataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetIndicatorData(inValue);
            return retVal.GetIndicatorDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.Estimate_Matrix_ProfitResponse OpenXMLDemo.StockService.IStockService.Estimate_Matrix_Profit(OpenXMLDemo.StockService.Estimate_Matrix_ProfitRequest request) {
            return base.Channel.Estimate_Matrix_Profit(request);
        }
        
        public decimal[][] Estimate_Matrix_Profit(OpenXMLDemo.StockService.AppTypesTimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, OpenXMLDemo.StockService.EstimateOptions option) {
            OpenXMLDemo.StockService.Estimate_Matrix_ProfitRequest inValue = new OpenXMLDemo.StockService.Estimate_Matrix_ProfitRequest();
            inValue.timeRange = timeRange;
            inValue.timeScaleCode = timeScaleCode;
            inValue.stockCodeList = stockCodeList;
            inValue.strategyList = strategyList;
            inValue.option = option;
            OpenXMLDemo.StockService.Estimate_Matrix_ProfitResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).Estimate_Matrix_Profit(inValue);
            return retVal.Estimate_Matrix_ProfitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightResponse OpenXMLDemo.StockService.IStockService.Estimate_Matrix_LastBizWeight(OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightRequest request) {
            return base.Channel.Estimate_Matrix_LastBizWeight(request);
        }
        
        public double[][] Estimate_Matrix_LastBizWeight(OpenXMLDemo.StockService.DataParams dataParams, string[] stockCodeList, string[] strategyList) {
            OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightRequest inValue = new OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightRequest();
            inValue.dataParams = dataParams;
            inValue.stockCodeList = stockCodeList;
            inValue.strategyList = strategyList;
            OpenXMLDemo.StockService.Estimate_Matrix_LastBizWeightResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).Estimate_Matrix_LastBizWeight(inValue);
            return retVal.Estimate_Matrix_LastBizWeightResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetSyslog_ByDateResponse OpenXMLDemo.StockService.IStockService.GetSyslog_ByDate(OpenXMLDemo.StockService.GetSyslog_ByDateRequest request) {
            return base.Channel.GetSyslog_ByDate(request);
        }
        
        public baseDS.sysLogDataTable GetSyslog_ByDate(System.DateTime frDate, System.DateTime toDate) {
            OpenXMLDemo.StockService.GetSyslog_ByDateRequest inValue = new OpenXMLDemo.StockService.GetSyslog_ByDateRequest();
            inValue.frDate = frDate;
            inValue.toDate = toDate;
            OpenXMLDemo.StockService.GetSyslog_ByDateResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetSyslog_ByDate(inValue);
            return retVal.GetSyslog_ByDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetSyslog_BySQLResponse OpenXMLDemo.StockService.IStockService.GetSyslog_BySQL(OpenXMLDemo.StockService.GetSyslog_BySQLRequest request) {
            return base.Channel.GetSyslog_BySQL(request);
        }
        
        public baseDS.sysLogDataTable GetSyslog_BySQL(string sql) {
            OpenXMLDemo.StockService.GetSyslog_BySQLRequest inValue = new OpenXMLDemo.StockService.GetSyslog_BySQLRequest();
            inValue.sql = sql;
            OpenXMLDemo.StockService.GetSyslog_BySQLResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetSyslog_BySQL(inValue);
            return retVal.GetSyslog_BySQLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStockFullResponse OpenXMLDemo.StockService.IStockService.GetStockFull(OpenXMLDemo.StockService.GetStockFullRequest request) {
            return base.Channel.GetStockFull(request);
        }
        
        public baseDS.stockCodeDataTable GetStockFull() {
            OpenXMLDemo.StockService.GetStockFullRequest inValue = new OpenXMLDemo.StockService.GetStockFullRequest();
            OpenXMLDemo.StockService.GetStockFullResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStockFull(inValue);
            return retVal.GetStockFullResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStockList_ByWatchListResponse OpenXMLDemo.StockService.IStockService.GetStockList_ByWatchList(OpenXMLDemo.StockService.GetStockList_ByWatchListRequest request) {
            return base.Channel.GetStockList_ByWatchList(request);
        }
        
        public string[] GetStockList_ByWatchList(string[] watchList) {
            OpenXMLDemo.StockService.GetStockList_ByWatchListRequest inValue = new OpenXMLDemo.StockService.GetStockList_ByWatchListRequest();
            inValue.watchList = watchList;
            OpenXMLDemo.StockService.GetStockList_ByWatchListResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStockList_ByWatchList(inValue);
            return retVal.GetStockList_ByWatchListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStockList_ByBizSectorResponse OpenXMLDemo.StockService.IStockService.GetStockList_ByBizSector(OpenXMLDemo.StockService.GetStockList_ByBizSectorRequest request) {
            return base.Channel.GetStockList_ByBizSector(request);
        }
        
        public string[] GetStockList_ByBizSector(string[] sectors) {
            OpenXMLDemo.StockService.GetStockList_ByBizSectorRequest inValue = new OpenXMLDemo.StockService.GetStockList_ByBizSectorRequest();
            inValue.sectors = sectors;
            OpenXMLDemo.StockService.GetStockList_ByBizSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStockList_ByBizSector(inValue);
            return retVal.GetStockList_ByBizSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStockExchangeResponse OpenXMLDemo.StockService.IStockService.GetStockExchange(OpenXMLDemo.StockService.GetStockExchangeRequest request) {
            return base.Channel.GetStockExchange(request);
        }
        
        public baseDS.stockExchangeDataTable GetStockExchange() {
            OpenXMLDemo.StockService.GetStockExchangeRequest inValue = new OpenXMLDemo.StockService.GetStockExchangeRequest();
            OpenXMLDemo.StockService.GetStockExchangeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStockExchange(inValue);
            return retVal.GetStockExchangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetExchangeDetailResponse OpenXMLDemo.StockService.IStockService.GetExchangeDetail(OpenXMLDemo.StockService.GetExchangeDetailRequest request) {
            return base.Channel.GetExchangeDetail(request);
        }
        
        public baseDS.exchangeDetailDataTable GetExchangeDetail(string marketCode) {
            OpenXMLDemo.StockService.GetExchangeDetailRequest inValue = new OpenXMLDemo.StockService.GetExchangeDetailRequest();
            inValue.marketCode = marketCode;
            OpenXMLDemo.StockService.GetExchangeDetailResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetExchangeDetail(inValue);
            return retVal.GetExchangeDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetEmployeeRangeResponse OpenXMLDemo.StockService.IStockService.GetEmployeeRange(OpenXMLDemo.StockService.GetEmployeeRangeRequest request) {
            return base.Channel.GetEmployeeRange(request);
        }
        
        public baseDS.employeeRangeDataTable GetEmployeeRange() {
            OpenXMLDemo.StockService.GetEmployeeRangeRequest inValue = new OpenXMLDemo.StockService.GetEmployeeRangeRequest();
            OpenXMLDemo.StockService.GetEmployeeRangeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetEmployeeRange(inValue);
            return retVal.GetEmployeeRangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizIndustryResponse OpenXMLDemo.StockService.IStockService.GetBizIndustry(OpenXMLDemo.StockService.GetBizIndustryRequest request) {
            return base.Channel.GetBizIndustry(request);
        }
        
        public baseDS.bizIndustryDataTable GetBizIndustry() {
            OpenXMLDemo.StockService.GetBizIndustryRequest inValue = new OpenXMLDemo.StockService.GetBizIndustryRequest();
            OpenXMLDemo.StockService.GetBizIndustryResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizIndustry(inValue);
            return retVal.GetBizIndustryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSuperSectorResponse OpenXMLDemo.StockService.IStockService.GetBizSuperSector(OpenXMLDemo.StockService.GetBizSuperSectorRequest request) {
            return base.Channel.GetBizSuperSector(request);
        }
        
        public baseDS.bizSuperSectorDataTable GetBizSuperSector() {
            OpenXMLDemo.StockService.GetBizSuperSectorRequest inValue = new OpenXMLDemo.StockService.GetBizSuperSectorRequest();
            OpenXMLDemo.StockService.GetBizSuperSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSuperSector(inValue);
            return retVal.GetBizSuperSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSectorResponse OpenXMLDemo.StockService.IStockService.GetBizSector(OpenXMLDemo.StockService.GetBizSectorRequest request) {
            return base.Channel.GetBizSector(request);
        }
        
        public baseDS.bizSectorDataTable GetBizSector() {
            OpenXMLDemo.StockService.GetBizSectorRequest inValue = new OpenXMLDemo.StockService.GetBizSectorRequest();
            OpenXMLDemo.StockService.GetBizSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSector(inValue);
            return retVal.GetBizSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSectorResponse OpenXMLDemo.StockService.IStockService.GetBizSubSector(OpenXMLDemo.StockService.GetBizSubSectorRequest request) {
            return base.Channel.GetBizSubSector(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSector() {
            OpenXMLDemo.StockService.GetBizSubSectorRequest inValue = new OpenXMLDemo.StockService.GetBizSubSectorRequest();
            OpenXMLDemo.StockService.GetBizSubSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSector(inValue);
            return retVal.GetBizSubSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSectorByIndustryResponse OpenXMLDemo.StockService.IStockService.GetBizSubSectorByIndustry(OpenXMLDemo.StockService.GetBizSubSectorByIndustryRequest request) {
            return base.Channel.GetBizSubSectorByIndustry(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSectorByIndustry(string industryCode) {
            OpenXMLDemo.StockService.GetBizSubSectorByIndustryRequest inValue = new OpenXMLDemo.StockService.GetBizSubSectorByIndustryRequest();
            inValue.industryCode = industryCode;
            OpenXMLDemo.StockService.GetBizSubSectorByIndustryResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSectorByIndustry(inValue);
            return retVal.GetBizSubSectorByIndustryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorResponse OpenXMLDemo.StockService.IStockService.GetBizSubSectorBySuperSector(OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorRequest request) {
            return base.Channel.GetBizSubSectorBySuperSector(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSector(string superSectorCode) {
            OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorRequest inValue = new OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorRequest();
            inValue.superSectorCode = superSectorCode;
            OpenXMLDemo.StockService.GetBizSubSectorBySuperSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSectorBySuperSector(inValue);
            return retVal.GetBizSubSectorBySuperSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSectorBySectorResponse OpenXMLDemo.StockService.IStockService.GetBizSubSectorBySector(OpenXMLDemo.StockService.GetBizSubSectorBySectorRequest request) {
            return base.Channel.GetBizSubSectorBySector(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSectorBySector(string sectorCode) {
            OpenXMLDemo.StockService.GetBizSubSectorBySectorRequest inValue = new OpenXMLDemo.StockService.GetBizSubSectorBySectorRequest();
            inValue.sectorCode = sectorCode;
            OpenXMLDemo.StockService.GetBizSubSectorBySectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSectorBySector(inValue);
            return retVal.GetBizSubSectorBySectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetFeedbackCatResponse OpenXMLDemo.StockService.IStockService.GetFeedbackCat(OpenXMLDemo.StockService.GetFeedbackCatRequest request) {
            return base.Channel.GetFeedbackCat(request);
        }
        
        public baseDS.feedbackCatDataTable GetFeedbackCat(string cultureCode) {
            OpenXMLDemo.StockService.GetFeedbackCatRequest inValue = new OpenXMLDemo.StockService.GetFeedbackCatRequest();
            inValue.cultureCode = cultureCode;
            OpenXMLDemo.StockService.GetFeedbackCatResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetFeedbackCat(inValue);
            return retVal.GetFeedbackCatResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetCountryResponse OpenXMLDemo.StockService.IStockService.GetCountry(OpenXMLDemo.StockService.GetCountryRequest request) {
            return base.Channel.GetCountry(request);
        }
        
        public baseDS.countryDataTable GetCountry() {
            OpenXMLDemo.StockService.GetCountryRequest inValue = new OpenXMLDemo.StockService.GetCountryRequest();
            OpenXMLDemo.StockService.GetCountryResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetCountry(inValue);
            return retVal.GetCountryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetCurrencyResponse OpenXMLDemo.StockService.IStockService.GetCurrency(OpenXMLDemo.StockService.GetCurrencyRequest request) {
            return base.Channel.GetCurrency(request);
        }
        
        public baseDS.currencyDataTable GetCurrency() {
            OpenXMLDemo.StockService.GetCurrencyRequest inValue = new OpenXMLDemo.StockService.GetCurrencyRequest();
            OpenXMLDemo.StockService.GetCurrencyResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetCurrency(inValue);
            return retVal.GetCurrencyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestorCatResponse OpenXMLDemo.StockService.IStockService.GetInvestorCat(OpenXMLDemo.StockService.GetInvestorCatRequest request) {
            return base.Channel.GetInvestorCat(request);
        }
        
        public baseDS.investorCatDataTable GetInvestorCat() {
            OpenXMLDemo.StockService.GetInvestorCatRequest inValue = new OpenXMLDemo.StockService.GetInvestorCatRequest();
            OpenXMLDemo.StockService.GetInvestorCatResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestorCat(inValue);
            return retVal.GetInvestorCatResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetSysCodeResponse OpenXMLDemo.StockService.IStockService.GetSysCode(OpenXMLDemo.StockService.GetSysCodeRequest request) {
            return base.Channel.GetSysCode(request);
        }
        
        public baseDS.sysCodeDataTable GetSysCode(string catCode) {
            OpenXMLDemo.StockService.GetSysCodeRequest inValue = new OpenXMLDemo.StockService.GetSysCodeRequest();
            inValue.catCode = catCode;
            OpenXMLDemo.StockService.GetSysCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetSysCode(inValue);
            return retVal.GetSysCodeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetSysCodeCatResponse OpenXMLDemo.StockService.IStockService.GetSysCodeCat(OpenXMLDemo.StockService.GetSysCodeCatRequest request) {
            return base.Channel.GetSysCodeCat(request);
        }
        
        public baseDS.sysCodeCatDataTable GetSysCodeCat() {
            OpenXMLDemo.StockService.GetSysCodeCatRequest inValue = new OpenXMLDemo.StockService.GetSysCodeCatRequest();
            OpenXMLDemo.StockService.GetSysCodeCatResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetSysCodeCat(inValue);
            return retVal.GetSysCodeCatResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestor_ByAccountResponse OpenXMLDemo.StockService.IStockService.GetInvestor_ByAccount(OpenXMLDemo.StockService.GetInvestor_ByAccountRequest request) {
            return base.Channel.GetInvestor_ByAccount(request);
        }
        
        public baseDS.investorDataTable GetInvestor_ByAccount(string account) {
            OpenXMLDemo.StockService.GetInvestor_ByAccountRequest inValue = new OpenXMLDemo.StockService.GetInvestor_ByAccountRequest();
            inValue.account = account;
            OpenXMLDemo.StockService.GetInvestor_ByAccountResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestor_ByAccount(inValue);
            return retVal.GetInvestor_ByAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestor_ByCodeResponse OpenXMLDemo.StockService.IStockService.GetInvestor_ByCode(OpenXMLDemo.StockService.GetInvestor_ByCodeRequest request) {
            return base.Channel.GetInvestor_ByCode(request);
        }
        
        public baseDS.investorDataTable GetInvestor_ByCode(string code) {
            OpenXMLDemo.StockService.GetInvestor_ByCodeRequest inValue = new OpenXMLDemo.StockService.GetInvestor_ByCodeRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.GetInvestor_ByCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestor_ByCode(inValue);
            return retVal.GetInvestor_ByCodeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestor_ByEmailResponse OpenXMLDemo.StockService.IStockService.GetInvestor_ByEmail(OpenXMLDemo.StockService.GetInvestor_ByEmailRequest request) {
            return base.Channel.GetInvestor_ByEmail(request);
        }
        
        public baseDS.investorDataTable GetInvestor_ByEmail(string email) {
            OpenXMLDemo.StockService.GetInvestor_ByEmailRequest inValue = new OpenXMLDemo.StockService.GetInvestor_ByEmailRequest();
            inValue.email = email;
            OpenXMLDemo.StockService.GetInvestor_ByEmailResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestor_ByEmail(inValue);
            return retVal.GetInvestor_ByEmailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestor_BySQLResponse OpenXMLDemo.StockService.IStockService.GetInvestor_BySQL(OpenXMLDemo.StockService.GetInvestor_BySQLRequest request) {
            return base.Channel.GetInvestor_BySQL(request);
        }
        
        public baseDS.investorDataTable GetInvestor_BySQL(string sql) {
            OpenXMLDemo.StockService.GetInvestor_BySQLRequest inValue = new OpenXMLDemo.StockService.GetInvestor_BySQLRequest();
            inValue.sql = sql;
            OpenXMLDemo.StockService.GetInvestor_BySQLResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestor_BySQL(inValue);
            return retVal.GetInvestor_BySQLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStock_InPortfolioResponse OpenXMLDemo.StockService.IStockService.GetStock_InPortfolio(OpenXMLDemo.StockService.GetStock_InPortfolioRequest request) {
            return base.Channel.GetStock_InPortfolio(request);
        }
        
        public tmpDS.stockCodeDataTable GetStock_InPortfolio(string[] portfolios) {
            OpenXMLDemo.StockService.GetStock_InPortfolioRequest inValue = new OpenXMLDemo.StockService.GetStock_InPortfolioRequest();
            inValue.portfolios = portfolios;
            OpenXMLDemo.StockService.GetStock_InPortfolioResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStock_InPortfolio(inValue);
            return retVal.GetStock_InPortfolioResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStock_ByBizSectorResponse OpenXMLDemo.StockService.IStockService.GetStock_ByBizSector(OpenXMLDemo.StockService.GetStock_ByBizSectorRequest request) {
            return base.Channel.GetStock_ByBizSector(request);
        }
        
        public tmpDS.stockCodeDataTable GetStock_ByBizSector(string[] bizSector) {
            OpenXMLDemo.StockService.GetStock_ByBizSectorRequest inValue = new OpenXMLDemo.StockService.GetStock_ByBizSectorRequest();
            inValue.bizSector = bizSector;
            OpenXMLDemo.StockService.GetStock_ByBizSectorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStock_ByBizSector(inValue);
            return retVal.GetStock_ByBizSectorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetBizSubSector_ByIndustryResponse OpenXMLDemo.StockService.IStockService.GetBizSubSector_ByIndustry(OpenXMLDemo.StockService.GetBizSubSector_ByIndustryRequest request) {
            return base.Channel.GetBizSubSector_ByIndustry(request);
        }
        
        public baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustry(string code) {
            OpenXMLDemo.StockService.GetBizSubSector_ByIndustryRequest inValue = new OpenXMLDemo.StockService.GetBizSubSector_ByIndustryRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.GetBizSubSector_ByIndustryResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetBizSubSector_ByIndustry(inValue);
            return retVal.GetBizSubSector_ByIndustryResult;
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        public void ClearCache() {
            base.Channel.ClearCache();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteCacheResponse OpenXMLDemo.StockService.IStockService.DeleteCache(OpenXMLDemo.StockService.DeleteCacheRequest request) {
            return base.Channel.DeleteCache(request);
        }
        
        public void DeleteCache(string cacheName) {
            OpenXMLDemo.StockService.DeleteCacheRequest inValue = new OpenXMLDemo.StockService.DeleteCacheRequest();
            inValue.cacheName = cacheName;
            OpenXMLDemo.StockService.DeleteCacheResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteCache(inValue);
        }
        
        public System.DateTime GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        public bool IsWorking() {
            return base.Channel.IsWorking();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateMessageResponse OpenXMLDemo.StockService.IStockService.UpdateMessage(OpenXMLDemo.StockService.UpdateMessageRequest request) {
            return base.Channel.UpdateMessage(request);
        }
        
        public bool UpdateMessage(ref baseDS.messagesDataTable messageTbl) {
            OpenXMLDemo.StockService.UpdateMessageRequest inValue = new OpenXMLDemo.StockService.UpdateMessageRequest();
            inValue.messageTbl = messageTbl;
            OpenXMLDemo.StockService.UpdateMessageResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateMessage(inValue);
            messageTbl = retVal.messageTbl;
            return retVal.UpdateMessageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdatePriceDataResponse OpenXMLDemo.StockService.IStockService.UpdatePriceData(OpenXMLDemo.StockService.UpdatePriceDataRequest request) {
            return base.Channel.UpdatePriceData(request);
        }
        
        public bool UpdatePriceData(ref baseDS.priceDataDataTable priceDataTbl) {
            OpenXMLDemo.StockService.UpdatePriceDataRequest inValue = new OpenXMLDemo.StockService.UpdatePriceDataRequest();
            inValue.priceDataTbl = priceDataTbl;
            OpenXMLDemo.StockService.UpdatePriceDataResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdatePriceData(inValue);
            priceDataTbl = retVal.priceDataTbl;
            return retVal.UpdatePriceDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateSysCodeCatResponse OpenXMLDemo.StockService.IStockService.UpdateSysCodeCat(OpenXMLDemo.StockService.UpdateSysCodeCatRequest request) {
            return base.Channel.UpdateSysCodeCat(request);
        }
        
        public bool UpdateSysCodeCat(ref baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            OpenXMLDemo.StockService.UpdateSysCodeCatRequest inValue = new OpenXMLDemo.StockService.UpdateSysCodeCatRequest();
            inValue.sysCodeCatTbl = sysCodeCatTbl;
            OpenXMLDemo.StockService.UpdateSysCodeCatResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateSysCodeCat(inValue);
            sysCodeCatTbl = retVal.sysCodeCatTbl;
            return retVal.UpdateSysCodeCatResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateSysCodeResponse OpenXMLDemo.StockService.IStockService.UpdateSysCode(OpenXMLDemo.StockService.UpdateSysCodeRequest request) {
            return base.Channel.UpdateSysCode(request);
        }
        
        public bool UpdateSysCode(ref baseDS.sysCodeDataTable sysCodeTbl) {
            OpenXMLDemo.StockService.UpdateSysCodeRequest inValue = new OpenXMLDemo.StockService.UpdateSysCodeRequest();
            inValue.sysCodeTbl = sysCodeTbl;
            OpenXMLDemo.StockService.UpdateSysCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateSysCode(inValue);
            sysCodeTbl = retVal.sysCodeTbl;
            return retVal.UpdateSysCodeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateStockResponse OpenXMLDemo.StockService.IStockService.UpdateStock(OpenXMLDemo.StockService.UpdateStockRequest request) {
            return base.Channel.UpdateStock(request);
        }
        
        public bool UpdateStock(ref baseDS.stockCodeDataTable stockCodeTbl) {
            OpenXMLDemo.StockService.UpdateStockRequest inValue = new OpenXMLDemo.StockService.UpdateStockRequest();
            inValue.stockCodeTbl = stockCodeTbl;
            OpenXMLDemo.StockService.UpdateStockResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateStock(inValue);
            stockCodeTbl = retVal.stockCodeTbl;
            return retVal.UpdateStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateInvestorResponse OpenXMLDemo.StockService.IStockService.UpdateInvestor(OpenXMLDemo.StockService.UpdateInvestorRequest request) {
            return base.Channel.UpdateInvestor(request);
        }
        
        public bool UpdateInvestor(ref baseDS.investorDataTable investorTbl) {
            OpenXMLDemo.StockService.UpdateInvestorRequest inValue = new OpenXMLDemo.StockService.UpdateInvestorRequest();
            inValue.investorTbl = investorTbl;
            OpenXMLDemo.StockService.UpdateInvestorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateInvestor(inValue);
            investorTbl = retVal.investorTbl;
            return retVal.UpdateInvestorResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdatePortfolioResponse OpenXMLDemo.StockService.IStockService.UpdatePortfolio(OpenXMLDemo.StockService.UpdatePortfolioRequest request) {
            return base.Channel.UpdatePortfolio(request);
        }
        
        public bool UpdatePortfolio(ref baseDS.portfolioDataTable portfolioTbl) {
            OpenXMLDemo.StockService.UpdatePortfolioRequest inValue = new OpenXMLDemo.StockService.UpdatePortfolioRequest();
            inValue.portfolioTbl = portfolioTbl;
            OpenXMLDemo.StockService.UpdatePortfolioResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdatePortfolio(inValue);
            portfolioTbl = retVal.portfolioTbl;
            return retVal.UpdatePortfolioResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdatePortfolioDetailResponse OpenXMLDemo.StockService.IStockService.UpdatePortfolioDetail(OpenXMLDemo.StockService.UpdatePortfolioDetailRequest request) {
            return base.Channel.UpdatePortfolioDetail(request);
        }
        
        public bool UpdatePortfolioDetail(ref baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            OpenXMLDemo.StockService.UpdatePortfolioDetailRequest inValue = new OpenXMLDemo.StockService.UpdatePortfolioDetailRequest();
            inValue.portfolioDetailTbl = portfolioDetailTbl;
            OpenXMLDemo.StockService.UpdatePortfolioDetailResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdatePortfolioDetail(inValue);
            portfolioDetailTbl = retVal.portfolioDetailTbl;
            return retVal.UpdatePortfolioDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateStockExchangeResponse OpenXMLDemo.StockService.IStockService.UpdateStockExchange(OpenXMLDemo.StockService.UpdateStockExchangeRequest request) {
            return base.Channel.UpdateStockExchange(request);
        }
        
        public bool UpdateStockExchange(ref baseDS.stockExchangeDataTable stockExchangeTbl) {
            OpenXMLDemo.StockService.UpdateStockExchangeRequest inValue = new OpenXMLDemo.StockService.UpdateStockExchangeRequest();
            inValue.stockExchangeTbl = stockExchangeTbl;
            OpenXMLDemo.StockService.UpdateStockExchangeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateStockExchange(inValue);
            stockExchangeTbl = retVal.stockExchangeTbl;
            return retVal.UpdateStockExchangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateExchangeDetailResponse OpenXMLDemo.StockService.IStockService.UpdateExchangeDetail(OpenXMLDemo.StockService.UpdateExchangeDetailRequest request) {
            return base.Channel.UpdateExchangeDetail(request);
        }
        
        public bool UpdateExchangeDetail(ref baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            OpenXMLDemo.StockService.UpdateExchangeDetailRequest inValue = new OpenXMLDemo.StockService.UpdateExchangeDetailRequest();
            inValue.exchangeDetailTbl = exchangeDetailTbl;
            OpenXMLDemo.StockService.UpdateExchangeDetailResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateExchangeDetail(inValue);
            exchangeDetailTbl = retVal.exchangeDetailTbl;
            return retVal.UpdateExchangeDetailResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateTransactionsResponse OpenXMLDemo.StockService.IStockService.UpdateTransactions(OpenXMLDemo.StockService.UpdateTransactionsRequest request) {
            return base.Channel.UpdateTransactions(request);
        }
        
        public bool UpdateTransactions(ref baseDS.transactionsDataTable transactionsTbl) {
            OpenXMLDemo.StockService.UpdateTransactionsRequest inValue = new OpenXMLDemo.StockService.UpdateTransactionsRequest();
            inValue.transactionsTbl = transactionsTbl;
            OpenXMLDemo.StockService.UpdateTransactionsResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateTransactions(inValue);
            transactionsTbl = retVal.transactionsTbl;
            return retVal.UpdateTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateInvestorStockResponse OpenXMLDemo.StockService.IStockService.UpdateInvestorStock(OpenXMLDemo.StockService.UpdateInvestorStockRequest request) {
            return base.Channel.UpdateInvestorStock(request);
        }
        
        public bool UpdateInvestorStock(ref baseDS.investorStockDataTable investorStockTbl) {
            OpenXMLDemo.StockService.UpdateInvestorStockRequest inValue = new OpenXMLDemo.StockService.UpdateInvestorStockRequest();
            inValue.investorStockTbl = investorStockTbl;
            OpenXMLDemo.StockService.UpdateInvestorStockResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateInvestorStock(inValue);
            investorStockTbl = retVal.investorStockTbl;
            return retVal.UpdateInvestorStockResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateTradeAlertResponse OpenXMLDemo.StockService.IStockService.UpdateTradeAlert(OpenXMLDemo.StockService.UpdateTradeAlertRequest request) {
            return base.Channel.UpdateTradeAlert(request);
        }
        
        public bool UpdateTradeAlert(ref baseDS.tradeAlertDataTable tradeAlertTbl) {
            OpenXMLDemo.StockService.UpdateTradeAlertRequest inValue = new OpenXMLDemo.StockService.UpdateTradeAlertRequest();
            inValue.tradeAlertTbl = tradeAlertTbl;
            OpenXMLDemo.StockService.UpdateTradeAlertResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateTradeAlert(inValue);
            tradeAlertTbl = retVal.tradeAlertTbl;
            return retVal.UpdateTradeAlertResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.UpdateSysAutoKeyPendingResponse OpenXMLDemo.StockService.IStockService.UpdateSysAutoKeyPending(OpenXMLDemo.StockService.UpdateSysAutoKeyPendingRequest request) {
            return base.Channel.UpdateSysAutoKeyPending(request);
        }
        
        public bool UpdateSysAutoKeyPending(ref baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            OpenXMLDemo.StockService.UpdateSysAutoKeyPendingRequest inValue = new OpenXMLDemo.StockService.UpdateSysAutoKeyPendingRequest();
            inValue.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
            OpenXMLDemo.StockService.UpdateSysAutoKeyPendingResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).UpdateSysAutoKeyPending(inValue);
            sysAutoKeyPendingTbl = retVal.sysAutoKeyPendingTbl;
            return retVal.UpdateSysAutoKeyPendingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteStockResponse OpenXMLDemo.StockService.IStockService.DeleteStock(OpenXMLDemo.StockService.DeleteStockRequest request) {
            return base.Channel.DeleteStock(request);
        }
        
        public void DeleteStock(string stockCode) {
            OpenXMLDemo.StockService.DeleteStockRequest inValue = new OpenXMLDemo.StockService.DeleteStockRequest();
            inValue.stockCode = stockCode;
            OpenXMLDemo.StockService.DeleteStockResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteStock(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteStockExchangeResponse OpenXMLDemo.StockService.IStockService.DeleteStockExchange(OpenXMLDemo.StockService.DeleteStockExchangeRequest request) {
            return base.Channel.DeleteStockExchange(request);
        }
        
        public void DeleteStockExchange(string code) {
            OpenXMLDemo.StockService.DeleteStockExchangeRequest inValue = new OpenXMLDemo.StockService.DeleteStockExchangeRequest();
            inValue.code = code;
            OpenXMLDemo.StockService.DeleteStockExchangeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteStockExchange(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteInvestorResponse OpenXMLDemo.StockService.IStockService.DeleteInvestor(OpenXMLDemo.StockService.DeleteInvestorRequest request) {
            return base.Channel.DeleteInvestor(request);
        }
        
        public void DeleteInvestor(string investorCode) {
            OpenXMLDemo.StockService.DeleteInvestorRequest inValue = new OpenXMLDemo.StockService.DeleteInvestorRequest();
            inValue.investorCode = investorCode;
            OpenXMLDemo.StockService.DeleteInvestorResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteInvestor(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeletePortfolioResponse OpenXMLDemo.StockService.IStockService.DeletePortfolio(OpenXMLDemo.StockService.DeletePortfolioRequest request) {
            return base.Channel.DeletePortfolio(request);
        }
        
        public void DeletePortfolio(string portfolioCode) {
            OpenXMLDemo.StockService.DeletePortfolioRequest inValue = new OpenXMLDemo.StockService.DeletePortfolioRequest();
            inValue.portfolioCode = portfolioCode;
            OpenXMLDemo.StockService.DeletePortfolioResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeletePortfolio(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteSysCodeCatResponse OpenXMLDemo.StockService.IStockService.DeleteSysCodeCat(OpenXMLDemo.StockService.DeleteSysCodeCatRequest request) {
            return base.Channel.DeleteSysCodeCat(request);
        }
        
        public void DeleteSysCodeCat(string catCode) {
            OpenXMLDemo.StockService.DeleteSysCodeCatRequest inValue = new OpenXMLDemo.StockService.DeleteSysCodeCatRequest();
            inValue.catCode = catCode;
            OpenXMLDemo.StockService.DeleteSysCodeCatResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteSysCodeCat(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.DeleteSysCodeResponse OpenXMLDemo.StockService.IStockService.DeleteSysCode(OpenXMLDemo.StockService.DeleteSysCodeRequest request) {
            return base.Channel.DeleteSysCode(request);
        }
        
        public void DeleteSysCode(string catCode, string code) {
            OpenXMLDemo.StockService.DeleteSysCodeRequest inValue = new OpenXMLDemo.StockService.DeleteSysCodeRequest();
            inValue.catCode = catCode;
            inValue.code = code;
            OpenXMLDemo.StockService.DeleteSysCodeResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).DeleteSysCode(inValue);
        }
        
        public void DeleteTradeAlert(int alertId) {
            base.Channel.DeleteTradeAlert(alertId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetStockByStatusResponse OpenXMLDemo.StockService.IStockService.GetStockByStatus(OpenXMLDemo.StockService.GetStockByStatusRequest request) {
            return base.Channel.GetStockByStatus(request);
        }
        
        public tmpDS.stockCodeDataTable GetStockByStatus(OpenXMLDemo.StockService.AppTypesCommonStatus status) {
            OpenXMLDemo.StockService.GetStockByStatusRequest inValue = new OpenXMLDemo.StockService.GetStockByStatusRequest();
            inValue.status = status;
            OpenXMLDemo.StockService.GetStockByStatusResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetStockByStatus(inValue);
            return retVal.GetStockByStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenXMLDemo.StockService.GetInvestorShortListResponse OpenXMLDemo.StockService.IStockService.GetInvestorShortList(OpenXMLDemo.StockService.GetInvestorShortListRequest request) {
            return base.Channel.GetInvestorShortList(request);
        }
        
        public tmpDS.investorDataTable GetInvestorShortList() {
            OpenXMLDemo.StockService.GetInvestorShortListRequest inValue = new OpenXMLDemo.StockService.GetInvestorShortListRequest();
            OpenXMLDemo.StockService.GetInvestorShortListResponse retVal = ((OpenXMLDemo.StockService.IStockService)(this)).GetInvestorShortList(inValue);
            return retVal.GetInvestorShortListResult;
        }
    }
}
